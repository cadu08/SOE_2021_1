

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Feb 16 09:31:39 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87 ;;___wmul@product	offset	0
    88 ;;___wmul@multiplier	offset=-2 (param)
    89 ;;___wmul@multiplicand	offset=-4 (param)
    90 ;;thermostat_sensing_1@readed_temperature	offset	0
    91 ;;thermostat_value@temperatura_ambiente	offset	0
    92 ;;thermostat_value@resultadoAD	offset	2
    93 ;;___awdiv@quotient	offset	0
    94 ;;___awdiv@sign	offset	2
    95 ;;___awdiv@counter	offset	3
    96 ;;___awdiv@dividend	offset=-2 (param)
    97 ;;___awdiv@divisor	offset=-4 (param)
    98 ;;pipe_write@write_flag	offset	0
    99 ;;pipe_write@pipe	offset=-2 (param)
   100 ;;pipe_write@dado	offset=-4 (param)
   101 ;;sem_wait@s	offset=-2 (param)
   102 ;;RESTORE_CONTEXT@stack_size	offset	0
   103 ;;RESTORE_CONTEXT@task_running	offset	2
   104 ;;ROUND_ROBIN_sched@task_selected	offset	0
   105 ;;ROUND_ROBIN_sched@try	offset	2
   106 ;;sem_post@s	offset=-2 (param)
   107 ;;___lwmod@counter	offset	0
   108 ;;___lwmod@dividend	offset=-2 (param)
   109 ;;___lwmod@divisor	offset=-4 (param)
   110 ;;sem_get_value@s	offset=-18 (param)
   111 ;;ac_controller_1@room_temperature	offset	0
   112 ;;pipe_read@read_flag	offset	0
   113 ;;pipe_read@pipe	offset=-2 (param)
   114 ;;pipe_read@dado	offset=-4 (param)
   115 ;;___wmul@product	offset	0
   116 ;;___wmul@multiplier	offset=-2 (param)
   117 ;;___wmul@multiplicand	offset=-4 (param)
   118 ;;RESTORE_CONTEXT@stack_size	offset	0
   119 ;;RESTORE_CONTEXT@task_running	offset	2
   120 ;;ROUND_ROBIN_sched@task_selected	offset	0
   121 ;;ROUND_ROBIN_sched@try	offset	2
   122 ;;___lwmod@counter	offset	0
   123 ;;___lwmod@dividend	offset=-2 (param)
   124 ;;___lwmod@divisor	offset=-4 (param)
   125                           
   126                           	psect	idataCOMRAM
   127  0015AE                     __pidataCOMRAM:
   128                           	callstack 0
   129                           
   130                           ;initializer for _rr_quantum
   131  0015AE  0008               	dw	8
   132  0000                     _TOS	set	4093
   133  0000                     _ADRES	set	4035
   134  0000                     _TRISD	set	3989
   135  0000                     _ADCON2bits	set	4032
   136  0000                     _ADCON1	set	4033
   137  0000                     _ADCON1bits	set	4033
   138  0000                     _ADCON0bits	set	4034
   139  0000                     _TRISA	set	3986
   140  0000                     _TMR0L	set	4054
   141  0000                     _STKPTR	set	4092
   142  0000                     _STATUS	set	4056
   143  0000                     _BSR	set	4064
   144  0000                     _WREG	set	4072
   145  0000                     _T0CONbits	set	4053
   146  0000                     _INTCONbits	set	4082
   147  0000                     _PORTDbits	set	3971
   148  0000                     _LATDbits	set	3980
   149  0000                     _TRISDbits	set	3989
   150                           
   151                           ; #config settings
   152                           
   153                           	psect	cinit
   154  0013AC                     __pcinit:
   155                           	callstack 0
   156  0013AC                     start_initialization:
   157                           	callstack 0
   158  0013AC                     __initialization:
   159                           	callstack 0
   160                           
   161                           ; Initialize objects allocated to COMRAM (2 bytes)
   162                           ; load TBLPTR registers with __pidataCOMRAM
   163  0013AC  0EAE               	movlw	low __pidataCOMRAM
   164  0013AE  6EF6               	movwf	tblptrl,c
   165  0013B0  0E15               	movlw	high __pidataCOMRAM
   166  0013B2  6EF7               	movwf	tblptrh,c
   167  0013B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   168  0013B6  6EF8               	movwf	tblptru,c
   169  0013B8  0009               	tblrd		*+	;fetch initializer
   170  0013BA  CFF5 F070          	movff	tablat,__pdataCOMRAM
   171  0013BE  0009               	tblrd		*+	;fetch initializer
   172  0013C0  CFF5 F071          	movff	tablat,__pdataCOMRAM+1
   173                           
   174                           ; Clear objects allocated to BIGRAM (682 bytes)
   175  0013C4  EE01  F012         	lfsr	0,__pbssBIGRAM
   176  0013C8  EE22 F0AA          	lfsr	2,682
   177  0013CC                     clear_0:
   178  0013CC  6AEE               	clrf	postinc0,c
   179  0013CE  50DD               	movf	postdec2,w,c
   180  0013D0  50D9               	movf	fsr2l,w,c
   181  0013D2  E1FC               	bnz	clear_0
   182  0013D4  50DA               	movf	fsr2h,w,c
   183  0013D6  E1FA               	bnz	clear_0
   184                           
   185                           ; Clear objects allocated to BANK1 (18 bytes)
   186  0013D8  EE01  F000         	lfsr	0,__pbssBANK1
   187  0013DC  0E12               	movlw	18
   188  0013DE                     clear_1:
   189  0013DE  6AEE               	clrf	postinc0,c
   190  0013E0  06E8               	decf	wreg,f,c
   191  0013E2  E1FD               	bnz	clear_1
   192                           
   193                           ; Clear objects allocated to COMRAM (53 bytes)
   194  0013E4  EE00  F001         	lfsr	0,__pbssCOMRAM
   195  0013E8  0E35               	movlw	53
   196  0013EA                     clear_2:
   197  0013EA  6AEE               	clrf	postinc0,c
   198  0013EC  06E8               	decf	wreg,f,c
   199  0013EE  E1FD               	bnz	clear_2
   200  0013F0                     end_of_initialization:
   201                           	callstack 0
   202  0013F0                     __end_of__initialization:
   203                           	callstack 0
   204  0013F0  0100               	movlb	0
   205  0013F2  EF1D  F00A         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208  000001                     __pbssCOMRAM:
   209                           	callstack 0
   210  000001                     _room_temperature:
   211                           	callstack 0
   212  000001                     	ds	2
   213  000003                     _possivel:
   214                           	callstack 0
   215  000003                     	ds	2
   216  000005                     _prox_tarefa:
   217                           	callstack 0
   218  000005                     	ds	2
   219  000007                     _index:
   220                           	callstack 0
   221  000007                     	ds	2
   222  000009                     _bsem_room_temperature:
   223                           	callstack 0
   224  000009                     	ds	1
   225  00000A                     _pipe_temperature:
   226                           	callstack 0
   227  00000A                     	ds	26
   228  000024                     _sem_temp_w:
   229                           	callstack 0
   230  000024                     	ds	18
   231                           
   232                           	psect	dataCOMRAM
   233  000070                     __pdataCOMRAM:
   234                           	callstack 0
   235  000070                     _rr_quantum:
   236                           	callstack 0
   237  000070                     	ds	2
   238                           
   239                           	psect	bssBANK1
   240  000100                     __pbssBANK1:
   241                           	callstack 0
   242  000100                     _sem_temp_r:
   243                           	callstack 0
   244  000100                     	ds	18
   245                           
   246                           	psect	bssBIGRAM
   247  000112                     __pbssBIGRAM:
   248                           	callstack 0
   249  000112                     _READY_QUEUE:
   250                           	callstack 0
   251  000112                     	ds	682
   252                           
   253                           	psect	cstackBANK0
   254  000080                     __pcstackBANK0:
   255                           	callstack 0
   256  000080                     OS_create_task@prior:
   257                           	callstack 0
   258  000080                     sem_init@s:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x0
   262  000080                     	ds	2
   263  000082                     OS_create_task@func:
   264                           	callstack 0
   265  000082                     sem_init@val:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x2
   269  000082                     	ds	2
   270  000084                     ??_OS_create_task:
   271  000084                     pipe_init@pipe:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x4
   275  000084                     	ds	2
   276  000086                     pipe_init@tamanho:
   277                           	callstack 0
   278  000086                     OS_create_task@new_task:
   279                           	callstack 0
   280                           
   281                           ; 113 bytes @ 0x6
   282  000086                     	ds	2
   283  000088                     
   284                           ; 1 bytes @ 0x8
   285  000088                     	ds	111
   286  0000F7                     
   287                           ; 1 bytes @ 0x77
   288                           
   289                           	psect	cstackCOMRAM
   290  000056                     __pcstackCOMRAM:
   291                           	callstack 0
   292  000056                     ?_delay_release:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x0
   296  000056                     	ds	2
   297  000058                     
   298                           ; 1 bytes @ 0x2
   299  000058                     	ds	2
   300  00005A                     delay_release@task_released:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x4
   304  00005A                     	ds	2
   305  00005C                     delay_release@i:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x6
   309  00005C                     	ds	2
   310  00005E                     ??_ISR_timer:
   311                           
   312                           ; 1 bytes @ 0x8
   313  00005E                     	ds	18
   314                           
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 14 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  2   24[None  ] int 
   327 ;; Registers used:
   328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   334 ;;      Params:         0       0       0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels required when called:   16
   340 ;; This function calls:
   341 ;;		_OS_config
   342 ;;		_OS_create_task
   343 ;;		_OS_start
   344 ;; This function is called by:
   345 ;;		Startup code after reset
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text0
   350  00143A                     __ptext0:
   351                           	callstack 0
   352  00143A                     _main:
   353                           	callstack 15
   354  00143A                     
   355                           ;main.c: 16:     OS_config();
   356  00143A  EC3B  F00A         	call	_OS_config	;wreg free
   357  00143E                     
   358                           ;main.c: 25:     {;main.c: 26:       OS_create_task(4, thermostat_sensing_2);
   359  00143E  0E00               	movlw	0
   360  001440  0100               	movlb	0	; () banked
   361  001442  6F81               	movwf	(OS_create_task@prior+1)& (0+255),b
   362  001444  0E04               	movlw	4
   363  001446  6F80               	movwf	OS_create_task@prior& (0+255),b
   364  001448  0E34               	movlw	low _thermostat_sensing_2
   365  00144A  6F82               	movwf	OS_create_task@func& (0+255),b
   366  00144C  0E15               	movlw	high _thermostat_sensing_2
   367  00144E  6F83               	movwf	(OS_create_task@func+1)& (0+255),b
   368  001450  EC1E  F009         	call	_OS_create_task	;wreg free
   369                           
   370                           ;main.c: 27:       OS_create_task(4, ac_controller_2);
   371  001454  0E00               	movlw	0
   372  001456  0100               	movlb	0	; () banked
   373  001458  6F81               	movwf	(OS_create_task@prior+1)& (0+255),b
   374  00145A  0E04               	movlw	4
   375  00145C  6F80               	movwf	OS_create_task@prior& (0+255),b
   376  00145E  0E00               	movlw	low _ac_controller_2
   377  001460  6F82               	movwf	OS_create_task@func& (0+255),b
   378  001462  0E13               	movlw	high _ac_controller_2
   379  001464  6F83               	movwf	(OS_create_task@func+1)& (0+255),b
   380  001466  EC1E  F009         	call	_OS_create_task	;wreg free
   381  00146A                     
   382                           ;main.c: 31:     OS_start();
   383  00146A  ECC4  F00A         	call	_OS_start	;wreg free
   384  00146E                     l28:
   385  00146E  EF37  F00A         	goto	l28
   386  001472  EF06  F000         	goto	start
   387  001476                     __end_of_main:
   388                           	callstack 0
   389                           
   390 ;; *************** function _OS_start *****************
   391 ;; Defined at:
   392 ;;		line 32 in file "kernel.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   406 ;;      Params:         0       0       0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels used:    1
   412 ;; Hardware stack levels required when called:   13
   413 ;; This function calls:
   414 ;;		_config_ad_conversor
   415 ;;		_config_flywheel
   416 ;;		_config_timer0
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text1
   423  001588                     __ptext1:
   424                           	callstack 0
   425  001588                     _OS_start:
   426                           	callstack 17
   427  001588                     
   428                           ;kernel.c: 33:     config_timer0();
   429  001588  ECAD  F00A         	call	_config_timer0	;wreg free
   430                           
   431                           ;kernel.c: 36:     config_flywheel();
   432  00158C  ECCD  F00A         	call	_config_flywheel	;wreg free
   433                           
   434                           ;kernel.c: 40:     config_ad_conversor();
   435  001590  EC87  F00A         	call	_config_ad_conversor	;wreg free
   436  001594                     
   437                           ;kernel.c: 43:     (INTCONbits.GIE = 1);
   438  001594  8EF2               	bsf	242,7,c	;volatile
   439  001596                     
   440                           ;kernel.c: 44:     T0CONbits.TMR0ON;
   441  001596  50D5               	movf	213,w,c	;volatile
   442  001598  0012               	return		;funcret
   443  00159A                     __end_of_OS_start:
   444                           	callstack 0
   445                           
   446 ;; *************** function _config_timer0 *****************
   447 ;; Defined at:
   448 ;;		line 7 in file "config_hw.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   462 ;;      Params:         0       0       0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; Hardware stack levels required when called:   12
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_OS_start
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text2
   477  00155A                     __ptext2:
   478                           	callstack 0
   479  00155A                     _config_timer0:
   480                           	callstack 17
   481  00155A                     
   482                           ;config_hw.c: 10:    INTCONbits.PEIE = 1;
   483  00155A  8CF2               	bsf	242,6,c	;volatile
   484                           
   485                           ;config_hw.c: 11:    INTCONbits.TMR0IE = 1;
   486  00155C  8AF2               	bsf	242,5,c	;volatile
   487                           
   488                           ;config_hw.c: 12:    INTCONbits.TMR0IF = 0;
   489  00155E  94F2               	bcf	242,2,c	;volatile
   490                           
   491                           ;config_hw.c: 13:    T0CONbits.PSA = 0;
   492  001560  96D5               	bcf	213,3,c	;volatile
   493  001562                     
   494                           ;config_hw.c: 14:    T0CONbits.T0PS = 0b010;
   495  001562  50D5               	movf	213,w,c	;volatile
   496  001564  0BF8               	andlw	-8
   497  001566  0902               	iorlw	2
   498  001568  6ED5               	movwf	213,c	;volatile
   499  00156A                     
   500                           ;config_hw.c: 15:    T0CONbits.T0CS = 0;
   501  00156A  9AD5               	bcf	213,5,c	;volatile
   502                           
   503                           ;config_hw.c: 16:    TMR0L = 0;
   504  00156C  0E00               	movlw	0
   505  00156E  6ED6               	movwf	214,c	;volatile
   506  001570  0012               	return		;funcret
   507  001572                     __end_of_config_timer0:
   508                           	callstack 0
   509                           
   510 ;; *************** function _config_flywheel *****************
   511 ;; Defined at:
   512 ;;		line 38 in file "config_hw.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   526 ;;      Params:         0       0       0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0
   529 ;;      Totals:         0       0       0       0       0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; Hardware stack levels required when called:   12
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_OS_start
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text3
   541  00159A                     __ptext3:
   542                           	callstack 0
   543  00159A                     _config_flywheel:
   544                           	callstack 17
   545  00159A                     
   546                           ;config_hw.c: 40:     TRISD = 0x00;
   547  00159A  0E00               	movlw	0
   548  00159C  6E95               	movwf	149,c	;volatile
   549  00159E  0012               	return		;funcret
   550  0015A0                     __end_of_config_flywheel:
   551                           	callstack 0
   552                           
   553 ;; *************** function _config_ad_conversor *****************
   554 ;; Defined at:
   555 ;;		line 19 in file "config_hw.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, status,2
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   569 ;;      Params:         0       0       0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0
   572 ;;      Totals:         0       0       0       0       0       0       0
   573 ;;Total ram usage:        0 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:   12
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_OS_start
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text4
   584  00150E                     __ptext4:
   585                           	callstack 0
   586  00150E                     _config_ad_conversor:
   587                           	callstack 17
   588  00150E                     
   589                           ;config_hw.c: 21:     TRISA = 0b00000001;
   590  00150E  0E01               	movlw	1
   591  001510  6E92               	movwf	146,c	;volatile
   592                           
   593                           ;config_hw.c: 22:     ADCON0bits.CHS = 0b0000;
   594  001512  0EC3               	movlw	-61
   595  001514  16C2               	andwf	194,f,c	;volatile
   596  001516                     
   597                           ;config_hw.c: 24:     ADCON1bits.VCFG1 = 0;
   598  001516  9AC1               	bcf	193,5,c	;volatile
   599  001518                     
   600                           ;config_hw.c: 25:     ADCON1bits.VCFG0 = 0;
   601  001518  98C1               	bcf	193,4,c	;volatile
   602                           
   603                           ;config_hw.c: 27:     ADCON1bits.PCFG = 0b0000;
   604  00151A  0EF0               	movlw	-16
   605  00151C  16C1               	andwf	193,f,c	;volatile
   606                           
   607                           ;config_hw.c: 28:     ADCON1 = 0x0E;
   608  00151E  0E0E               	movlw	14
   609  001520  6EC1               	movwf	193,c	;volatile
   610  001522                     
   611                           ;config_hw.c: 31:     ADCON2bits.ADFM = 1;
   612  001522  8EC0               	bsf	192,7,c	;volatile
   613                           
   614                           ;config_hw.c: 33:     ADCON2bits.ACQT = 0b111;
   615  001524  0E38               	movlw	56
   616  001526  12C0               	iorwf	192,f,c	;volatile
   617  001528                     
   618                           ;config_hw.c: 34:     ADCON0bits.ADON = 1;
   619  001528  80C2               	bsf	194,0,c	;volatile
   620                           
   621                           ;config_hw.c: 35:     ADCON2bits.ADCS = 0b110;
   622  00152A  50C0               	movf	192,w,c	;volatile
   623  00152C  0BF8               	andlw	-8
   624  00152E  0906               	iorlw	6
   625  001530  6EC0               	movwf	192,c	;volatile
   626  001532  0012               	return		;funcret
   627  001534                     __end_of_config_ad_conversor:
   628                           	callstack 0
   629                           
   630 ;; *************** function _OS_config *****************
   631 ;; Defined at:
   632 ;;		line 19 in file "kernel.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   646 ;;      Params:         0       0       0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0
   649 ;;      Totals:         0       0       0       0       0       0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:   15
   653 ;; This function calls:
   654 ;;		_OS_create_task
   655 ;;		_config_user_tasks
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text5
   662  001476                     __ptext5:
   663                           	callstack 0
   664  001476                     _OS_config:
   665                           	callstack 15
   666  001476                     
   667                           ;kernel.c: 21:     READY_QUEUE.nr_of_tasks = 0;
   668  001476  0E00               	movlw	0
   669  001478  CFE8 F3BA          	movff	wreg,_READY_QUEUE+680
   670  00147C  0E00               	movlw	0
   671  00147E  CFE8 F3BB          	movff	wreg,_READY_QUEUE+681
   672                           
   673                           ;kernel.c: 22:     READY_QUEUE.task_running = 0;
   674  001482  0E00               	movlw	0
   675  001484  CFE8 F3B8          	movff	wreg,_READY_QUEUE+678
   676  001488  0E00               	movlw	0
   677  00148A  CFE8 F3B9          	movff	wreg,_READY_QUEUE+679
   678  00148E                     
   679                           ;kernel.c: 25:     OS_create_task(1, idle);
   680  00148E  0E00               	movlw	0
   681  001490  0100               	movlb	0	; () banked
   682  001492  6F81               	movwf	(OS_create_task@prior+1)& (0+255),b
   683  001494  0E01               	movlw	1
   684  001496  6F80               	movwf	OS_create_task@prior& (0+255),b
   685  001498  0EDE               	movlw	low _idle
   686  00149A  6F82               	movwf	OS_create_task@func& (0+255),b
   687  00149C  0E14               	movlw	high _idle
   688  00149E  6F83               	movwf	(OS_create_task@func+1)& (0+255),b
   689  0014A0  EC1E  F009         	call	_OS_create_task	;# 
   690  0014A4                     
   691                           ;kernel.c: 29:     config_user_tasks();
   692  0014A4  ECFB  F009         	call	_config_user_tasks	;wreg free
   693  0014A8  0012               	return		;funcret
   694  0014AA                     __end_of_OS_config:
   695                           	callstack 0
   696                           
   697 ;; *************** function _config_user_tasks *****************
   698 ;; Defined at:
   699 ;;		line 5 in file "user_tasks.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   713 ;;      Params:         0       0       0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:   14
   720 ;; This function calls:
   721 ;;		_pipe_init
   722 ;;		_sem_init
   723 ;; This function is called by:
   724 ;;		_OS_config
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text6
   729  0013F6                     __ptext6:
   730                           	callstack 0
   731  0013F6                     _config_user_tasks:
   732                           	callstack 15
   733  0013F6                     
   734                           ;user_tasks.c: 8:    pipe_init(&pipe_temperature, 1);
   735  0013F6  0E0A               	movlw	low _pipe_temperature
   736  0013F8  0100               	movlb	0	; () banked
   737  0013FA  6F84               	movwf	pipe_init@pipe& (0+255),b
   738  0013FC  0E00               	movlw	high _pipe_temperature
   739  0013FE  6F85               	movwf	(pipe_init@pipe+1)& (0+255),b
   740  001400  0E00               	movlw	0
   741  001402  6F87               	movwf	(pipe_init@tamanho+1)& (0+255),b
   742  001404  0E01               	movlw	1
   743  001406  6F86               	movwf	pipe_init@tamanho& (0+255),b
   744  001408  EC54  F009         	call	_pipe_init	;wreg free
   745                           
   746                           ;user_tasks.c: 11:    sem_init(&sem_temp_w, 1);
   747  00140C  0E24               	movlw	low _sem_temp_w
   748  00140E  0100               	movlb	0	; () banked
   749  001410  6F80               	movwf	sem_init@s& (0+255),b
   750  001412  0E00               	movlw	high _sem_temp_w
   751  001414  6F81               	movwf	(sem_init@s+1)& (0+255),b
   752  001416  0E00               	movlw	0
   753  001418  6F83               	movwf	(sem_init@val+1)& (0+255),b
   754  00141A  0E01               	movlw	1
   755  00141C  6F82               	movwf	sem_init@val& (0+255),b
   756  00141E  ECAC  F009         	call	_sem_init	;wreg free
   757                           
   758                           ;user_tasks.c: 12:    sem_init(&sem_temp_r, 0);
   759  001422  0E00               	movlw	low _sem_temp_r
   760  001424  0100               	movlb	0	; () banked
   761  001426  6F80               	movwf	sem_init@s& (0+255),b
   762  001428  0E01               	movlw	high _sem_temp_r
   763  00142A  6F81               	movwf	(sem_init@s+1)& (0+255),b
   764  00142C  0E00               	movlw	0
   765  00142E  6F83               	movwf	(sem_init@val+1)& (0+255),b
   766  001430  0E00               	movlw	0
   767  001432  6F82               	movwf	sem_init@val& (0+255),b
   768  001434  ECAC  F009         	call	_sem_init	;wreg free
   769  001438  0012               	return		;funcret
   770  00143A                     __end_of_config_user_tasks:
   771                           	callstack 0
   772                           
   773 ;; *************** function _pipe_init *****************
   774 ;; Defined at:
   775 ;;		line 4 in file "pipe.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  pipe            2    4[BANK0 ] PTR struct pipe
   778 ;;		 -> pipe_temperature(26), 
   779 ;;  tamanho         2    6[BANK0 ] int 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   791 ;;      Params:         0       4       0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0
   794 ;;      Totals:         0       4       0       0       0       0       0
   795 ;;Total ram usage:        4 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:   13
   798 ;; This function calls:
   799 ;;		_sem_init
   800 ;; This function is called by:
   801 ;;		_config_user_tasks
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text7
   806  0012A8                     __ptext7:
   807                           	callstack 0
   808  0012A8                     _pipe_init:
   809                           	callstack 15
   810  0012A8                     
   811                           ;pipe.c: 7:     pipe->size = pipe->read_pos = pipe->write_pos = 0;
   812  0012A8  0100               	movlb	0	; () banked
   813  0012AA  EE20 F006          	lfsr	2,6
   814  0012AE  5184               	movf	pipe_init@pipe& (0+255),w,b
   815  0012B0  26D9               	addwf	fsr2l,f,c
   816  0012B2  5185               	movf	(pipe_init@pipe+1)& (0+255),w,b
   817  0012B4  22DA               	addwfc	fsr2h,f,c
   818  0012B6  0E00               	movlw	0
   819  0012B8  6EDE               	movwf	postinc2,c
   820  0012BA  0E00               	movlw	0
   821  0012BC  6EDD               	movwf	postdec2,c
   822  0012BE  EE00 F004          	lfsr	0,4
   823  0012C2  5184               	movf	pipe_init@pipe& (0+255),w,b
   824  0012C4  26E9               	addwf	fsr0l,f,c
   825  0012C6  5185               	movf	(pipe_init@pipe+1)& (0+255),w,b
   826  0012C8  22EA               	addwfc	fsr0h,f,c
   827  0012CA  CFDE FFEE          	movff	postinc2,postinc0
   828  0012CE  CFDD FFED          	movff	postdec2,postdec0
   829  0012D2  EE20 F002          	lfsr	2,2
   830  0012D6  5184               	movf	pipe_init@pipe& (0+255),w,b
   831  0012D8  26D9               	addwf	fsr2l,f,c
   832  0012DA  5185               	movf	(pipe_init@pipe+1)& (0+255),w,b
   833  0012DC  22DA               	addwfc	fsr2h,f,c
   834  0012DE  CFEE FFDE          	movff	postinc0,postinc2
   835  0012E2  CFED FFDD          	movff	postdec0,postdec2
   836  0012E6                     
   837                           ; BSR set to: 0
   838                           ;pipe.c: 8:     sem_init(&pipe->sem, 1);
   839  0012E6  0E08               	movlw	8
   840  0012E8  2584               	addwf	pipe_init@pipe& (0+255),w,b
   841  0012EA  6F80               	movwf	sem_init@s& (0+255),b
   842  0012EC  0E00               	movlw	0
   843  0012EE  2185               	addwfc	(pipe_init@pipe+1)& (0+255),w,b
   844  0012F0  6F81               	movwf	(sem_init@s+1)& (0+255),b
   845  0012F2  0E00               	movlw	0
   846  0012F4  6F83               	movwf	(sem_init@val+1)& (0+255),b
   847  0012F6  0E01               	movlw	1
   848  0012F8  6F82               	movwf	sem_init@val& (0+255),b
   849  0012FA  ECAC  F009         	call	_sem_init	;wreg free
   850  0012FE  0012               	return		;funcret
   851  001300                     __end_of_pipe_init:
   852                           	callstack 0
   853                           
   854 ;; *************** function _sem_init *****************
   855 ;; Defined at:
   856 ;;		line 2 in file "semaphore.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  s               2    0[BANK0 ] PTR struct semaphore
   859 ;;		 -> sem_temp_r(18), sem_temp_w(18), pipe_temperature(26), 
   860 ;;  val             2    2[BANK0 ] int 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   872 ;;      Params:         0       4       0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0
   875 ;;      Totals:         0       4       0       0       0       0       0
   876 ;;Total ram usage:        4 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:   12
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_config_user_tasks
   883 ;;		_pipe_init
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text8
   888  001358                     __ptext8:
   889                           	callstack 0
   890  001358                     _sem_init:
   891                           	callstack 16
   892  001358                     
   893                           ;semaphore.c: 3:     (INTCONbits.GIE = 0);
   894  001358  9EF2               	bcf	242,7,c	;volatile
   895  00135A                     
   896                           ;semaphore.c: 4:     s->s_count = val;
   897  00135A  C080  FFD9         	movff	sem_init@s,fsr2l
   898  00135E  C081  FFDA         	movff	sem_init@s+1,fsr2h
   899  001362  C082  FFDE         	movff	sem_init@val,postinc2
   900  001366  C083  FFDD         	movff	sem_init@val+1,postdec2
   901  00136A                     
   902                           ;semaphore.c: 5:     s->s_queue.queue_size = s->s_queue.queue_wait_pos = s->s_queue.queu
      +                          e_post_pos = 0;
   903  00136A  0100               	movlb	0	; () banked
   904  00136C  EE20 F010          	lfsr	2,16
   905  001370  5180               	movf	sem_init@s& (0+255),w,b
   906  001372  26D9               	addwf	fsr2l,f,c
   907  001374  5181               	movf	(sem_init@s+1)& (0+255),w,b
   908  001376  22DA               	addwfc	fsr2h,f,c
   909  001378  0E00               	movlw	0
   910  00137A  6EDE               	movwf	postinc2,c
   911  00137C  0E00               	movlw	0
   912  00137E  6EDD               	movwf	postdec2,c
   913  001380  EE00 F00E          	lfsr	0,14
   914  001384  5180               	movf	sem_init@s& (0+255),w,b
   915  001386  26E9               	addwf	fsr0l,f,c
   916  001388  5181               	movf	(sem_init@s+1)& (0+255),w,b
   917  00138A  22EA               	addwfc	fsr0h,f,c
   918  00138C  CFDE FFEE          	movff	postinc2,postinc0
   919  001390  CFDD FFED          	movff	postdec2,postdec0
   920  001394  EE20 F00C          	lfsr	2,12
   921  001398  5180               	movf	sem_init@s& (0+255),w,b
   922  00139A  26D9               	addwf	fsr2l,f,c
   923  00139C  5181               	movf	(sem_init@s+1)& (0+255),w,b
   924  00139E  22DA               	addwfc	fsr2h,f,c
   925  0013A0  CFEE FFDE          	movff	postinc0,postinc2
   926  0013A4  CFED FFDD          	movff	postdec0,postdec2
   927  0013A8                     
   928                           ; BSR set to: 0
   929                           ;semaphore.c: 7:     (INTCONbits.GIE = 1);
   930  0013A8  8EF2               	bsf	242,7,c	;volatile
   931  0013AA                     
   932                           ; BSR set to: 0
   933  0013AA  0012               	return		;funcret
   934  0013AC                     __end_of_sem_init:
   935                           	callstack 0
   936                           
   937 ;; *************** function _OS_create_task *****************
   938 ;; Defined at:
   939 ;;		line 60 in file "kernel.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  prior           2    0[BANK0 ] unsigned int 
   942 ;;  func            2    2[BANK0 ] PTR FTN()void 
   943 ;;		 -> idle(1), ac_controller_2(1), thermostat_sensing_2(1), ac_controller_1(1), 
   944 ;;		 -> thermostat_sensing_1(1), 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  new_task      113    6[BANK0 ] struct tcb
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   956 ;;      Params:         0       4       0       0       0       0       0
   957 ;;      Locals:         0     113       0       0       0       0       0
   958 ;;      Temps:          0       2       0       0       0       0       0
   959 ;;      Totals:         0     119       0       0       0       0       0
   960 ;;Total ram usage:      119 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:   13
   963 ;; This function calls:
   964 ;;		___wmul
   965 ;; This function is called by:
   966 ;;		_main
   967 ;;		_OS_config
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text9
   972  00123C                     __ptext9:
   973                           	callstack 0
   974  00123C                     _OS_create_task:
   975                           	callstack 17
   976  00123C                     
   977                           ;kernel.c: 62:     tcb_t new_task;;kernel.c: 64:     new_task.task_prior = prior;
   978  00123C  C080  F088         	movff	OS_create_task@prior,OS_create_task@new_task+2
   979  001240  C081  F089         	movff	OS_create_task@prior+1,OS_create_task@new_task+3
   980  001244                     
   981                           ;kernel.c: 65:     new_task.task_func = func;
   982  001244  C082  F0F3         	movff	OS_create_task@func,OS_create_task@new_task+109
   983  001248  C083  F0F4         	movff	OS_create_task@func+1,OS_create_task@new_task+110
   984  00124C                     
   985                           ;kernel.c: 66:     new_task.task_state = READY;
   986  00124C  0E00               	movlw	0
   987  00124E  0100               	movlb	0	; () banked
   988  001250  6F8A               	movwf	(OS_create_task@new_task+4)& (0+255),b
   989  001252                     
   990                           ; BSR set to: 0
   991                           ;kernel.c: 67:     new_task.task_context.stack_size = 0;
   992  001252  0E00               	movlw	0
   993  001254  6FF2               	movwf	(OS_create_task@new_task+108)& (0+255),b
   994  001256  0E00               	movlw	0
   995  001258  6FF1               	movwf	(OS_create_task@new_task+107)& (0+255),b
   996  00125A                     
   997                           ; BSR set to: 0
   998                           ;kernel.c: 68:     new_task.task_delay_time = 0;
   999  00125A  0E00               	movlw	0
  1000  00125C  6FF6               	movwf	(OS_create_task@new_task+112)& (0+255),b
  1001  00125E  0E00               	movlw	0
  1002  001260  6FF5               	movwf	(OS_create_task@new_task+111)& (0+255),b
  1003  001262                     
  1004                           ; BSR set to: 0
  1005                           ;kernel.c: 72:     READY_QUEUE.QUEUE[READY_QUEUE.nr_of_tasks] = new_task;
  1006  001262  0E71               	movlw	113
  1007  001264  6EE6               	movwf	postinc1,c
  1008  001266  0E00               	movlw	0
  1009  001268  6EE6               	movwf	postinc1,c
  1010  00126A  EE23  F0BA         	lfsr	2,_READY_QUEUE+680
  1011  00126E  CFDE F084          	movff	postinc2,??_OS_create_task
  1012  001272  CFDD F085          	movff	postdec2,??_OS_create_task+1
  1013  001276  C084  FFE6         	movff	??_OS_create_task,postinc1
  1014  00127A  C085  FFE6         	movff	??_OS_create_task+1,postinc1
  1015  00127E  EC48  F008         	call	___wmul	;wreg free
  1016  001282  0E12               	movlw	low _READY_QUEUE
  1017  001284  2436               	addwf	btemp^0,w,c
  1018  001286  6EE9               	movwf	fsr0l,c
  1019  001288  0E01               	movlw	high _READY_QUEUE
  1020  00128A  2037               	addwfc	(btemp+1)^0,w,c
  1021  00128C  6EEA               	movwf	fsr0h,c
  1022  00128E  EE20  F086         	lfsr	2,OS_create_task@new_task
  1023  001292  0E70               	movlw	112
  1024  001294                     u1001:
  1025  001294  CFDB FFEB          	movff	plusw2,plusw0
  1026  001298  06E8               	decf	wreg,f,c
  1027  00129A  E2FC               	bc	u1001
  1028  00129C                     
  1029                           ;kernel.c: 73:     READY_QUEUE.nr_of_tasks++;
  1030  00129C  EE23  F0BA         	lfsr	2,_READY_QUEUE+680
  1031  0012A0  2ADE               	incf	postinc2,f,c
  1032  0012A2  0E00               	movlw	0
  1033  0012A4  22DD               	addwfc	postdec2,f,c
  1034  0012A6  0012               	return		;funcret
  1035  0012A8                     __end_of_OS_create_task:
  1036                           	callstack 0
  1037                           
  1038 ;; *************** function ___wmul *****************
  1039 ;; Defined at:
  1040 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  multiplier      2  [STACK] unsigned int 
  1043 ;;  multiplicand    2  [STACK] unsigned int 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  product         2  [STACK] unsigned int 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  2  [STACK] unsigned int 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1055 ;;      Params:         0       0       0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:   12
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_OS_create_task
  1066 ;;		_delay_release
  1067 ;;		_ISR_timer
  1068 ;;		_PRIORITY_sched
  1069 ;;		_sort_ready_queue
  1070 ;;		_OS_delay
  1071 ;;		_get_task_id
  1072 ;; This function uses a reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text10
  1076  001090                     __ptext10:
  1077                           	callstack 0
  1078  001090                     ___wmul:
  1079                           	callstack 0
  1080                           
  1081                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1082  001090  52E6               	movf	postinc1,f,c
  1083  001092  52E6               	movf	postinc1,f,c
  1084  001094                     
  1085                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1086  001094  0EFA               	movlw	-6
  1087  001096  CFE3 F041          	movff	plusw1,btemp+11
  1088                           
  1089                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1090  00109A  0EFC               	movlw	-4
  1091  00109C  50E3               	movf	plusw1,w,c
  1092  00109E  0241               	mulwf	(btemp+11)^0,c
  1093                           
  1094                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1095  0010A0  0EFE               	movlw	-2
  1096  0010A2  CFF3 FFE3          	movff	prodl,plusw1
  1097  0010A6  0EFF               	movlw	-1
  1098  0010A8  CFF4 FFE3          	movff	prodh,plusw1
  1099  0010AC                     
  1100                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1101  0010AC  0EFB               	movlw	251
  1102  0010AE  24E1               	addwf	fsr1l,w,c
  1103  0010B0  6ED9               	movwf	fsr2l,c
  1104  0010B2  0EFF               	movlw	255
  1105  0010B4  20E2               	addwfc	fsr1h,w,c
  1106  0010B6  6EDA               	movwf	fsr2h,c
  1107  0010B8  50DF               	movf	indf2,w,c
  1108  0010BA  6E41               	movwf	(btemp+11)^0,c
  1109                           
  1110                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1111  0010BC  0EFC               	movlw	-4
  1112  0010BE  50E3               	movf	plusw1,w,c
  1113  0010C0  0241               	mulwf	(btemp+11)^0,c
  1114  0010C2  CFF3 FFF4          	movff	prodl,prodh
  1115  0010C6  6AF3               	clrf	243,c
  1116                           
  1117                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1118  0010C8  50E1               	movf	fsr1l,w,c
  1119  0010CA  0FFE               	addlw	-2
  1120  0010CC  6ED9               	movwf	fsr2l,c
  1121  0010CE  50E2               	movf	fsr1h,w,c
  1122  0010D0  6EDA               	movwf	fsr2h,c
  1123  0010D2  0EFF               	movlw	255
  1124  0010D4  22DA               	addwfc	fsr2h,f,c
  1125  0010D6  50F3               	movf	243,w,c
  1126  0010D8  26DE               	addwf	postinc2,f,c
  1127  0010DA  50F4               	movf	244,w,c
  1128  0010DC  22DD               	addwfc	postdec2,f,c
  1129  0010DE                     
  1130                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1131  0010DE  0EFA               	movlw	-6
  1132  0010E0  CFE3 F041          	movff	plusw1,btemp+11
  1133                           
  1134                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1135  0010E4  0EFD               	movlw	253
  1136  0010E6  24E1               	addwf	fsr1l,w,c
  1137  0010E8  6ED9               	movwf	fsr2l,c
  1138  0010EA  0EFF               	movlw	255
  1139  0010EC  20E2               	addwfc	fsr1h,w,c
  1140  0010EE  6EDA               	movwf	fsr2h,c
  1141  0010F0  50DF               	movf	indf2,w,c
  1142  0010F2  0241               	mulwf	(btemp+11)^0,c
  1143  0010F4  CFF3 FFF4          	movff	prodl,prodh
  1144  0010F8  6AF3               	clrf	243,c
  1145                           
  1146                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1147  0010FA  50E1               	movf	fsr1l,w,c
  1148  0010FC  0FFE               	addlw	-2
  1149  0010FE  6ED9               	movwf	fsr2l,c
  1150  001100  50E2               	movf	fsr1h,w,c
  1151  001102  6EDA               	movwf	fsr2h,c
  1152  001104  0EFF               	movlw	255
  1153  001106  22DA               	addwfc	fsr2h,f,c
  1154  001108  50F3               	movf	243,w,c
  1155  00110A  26DE               	addwf	postinc2,f,c
  1156  00110C  50F4               	movf	244,w,c
  1157  00110E  22DD               	addwfc	postdec2,f,c
  1158  001110                     
  1159                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1160  001110  0EFE               	movlw	-2
  1161  001112  CFE3 F036          	movff	plusw1,btemp
  1162  001116  0EFF               	movlw	-1
  1163  001118  CFE3 F037          	movff	plusw1,btemp+1
  1164  00111C                     
  1165                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  1166  00111C  0EFA               	movlw	250
  1167  00111E  26E1               	addwf	fsr1l,f,c
  1168  001120  0EFF               	movlw	255
  1169  001122  22E2               	addwfc	fsr1h,f,c
  1170  001124  0012               	return		;funcret
  1171  001126                     __end_of___wmul:
  1172                           	callstack 0
  1173                           
  1174 ;; *************** function _idle *****************
  1175 ;; Defined at:
  1176 ;;		line 11 in file "kernel.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1  [STACK] void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0, btemp+11
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1190 ;;      Params:         0       0       0       0       0       0       0
  1191 ;;      Locals:         0       0       0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0
  1193 ;;      Totals:         0       0       0       0       0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    5
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_ROUND_ROBIN_sched
  1201 ;;		_OS_config
  1202 ;; This function uses a reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text11
  1206  0014DE                     __ptext11:
  1207                           	callstack 0
  1208  0014DE                     _idle:
  1209                           	callstack 21
  1210  0014DE                     
  1211                           ;kernel.c: 12:     TRISDbits.RD3 = 0;
  1212  0014DE  9695               	bcf	149,3,c	;volatile
  1213  0014E0                     l1438:
  1214                           
  1215                           ;kernel.c: 14:         LATDbits.LATD3 = ~PORTDbits.RD3;
  1216  0014E0  B683               	btfsc	131,3,c	;volatile
  1217  0014E2  EF75  F00A         	goto	u45_21
  1218  0014E6  EF78  F00A         	goto	u45_20
  1219  0014EA                     u45_21:
  1220  0014EA  0E01               	movlw	1
  1221  0014EC  EF79  F00A         	goto	u45_26
  1222  0014F0                     u45_20:
  1223  0014F0  0E00               	movlw	0
  1224  0014F2                     u45_26:
  1225  0014F2  0AFF               	xorlw	255
  1226  0014F4  6E41               	movwf	(btemp+11)^0,c
  1227  0014F6  4641               	rlncf	(btemp+11)^0,f,c
  1228  0014F8  4641               	rlncf	(btemp+11)^0,f,c
  1229  0014FA  4641               	rlncf	(btemp+11)^0,f,c
  1230  0014FC  508C               	movf	140,w,c	;volatile
  1231  0014FE  1841               	xorwf	(btemp+11)^0,w,c
  1232  001500  0BF7               	andlw	-9
  1233  001502  1841               	xorwf	(btemp+11)^0,w,c
  1234  001504  6E8C               	movwf	140,c	;volatile
  1235  001506                     
  1236                           ;kernel.c: 15:         __nop();
  1237  001506  F000               	nop	
  1238  001508  EF70  F00A         	goto	l1438
  1239                           
  1240                           ; _idle: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize 
      +                          = 0, vargsize = 0
  1241  00150C  0012               	return		;funcret
  1242  00150E                     __end_of_idle:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function _thermostat_sensing_1 *****************
  1246 ;; Defined at:
  1247 ;;		line 23 in file "user_tasks.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  readed_tempe    2  [STACK] int 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1  [STACK] void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1261 ;;      Params:         0       0       0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0
  1264 ;;      Totals:         0       0       0       0       0       0       0
  1265 ;;Total ram usage:        0 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:   11
  1268 ;; This function calls:
  1269 ;;		_pipe_write
  1270 ;;		_thermostat_value
  1271 ;; This function is called by:
  1272 ;;		_main
  1273 ;; This function uses a reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text12
  1277  0014AA                     __ptext12:
  1278                           	callstack 0
  1279  0014AA                     _thermostat_sensing_1:
  1280                           	callstack 0
  1281                           
  1282                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1283  0014AA  52E6               	movf	postinc1,f,c
  1284  0014AC  52E6               	movf	postinc1,f,c
  1285  0014AE                     l222:
  1286  0014AE                     
  1287                           ;user_tasks.c: 26:        readed_temperature = thermostat_value();
  1288  0014AE  EC93  F008         	call	_thermostat_value	;wreg free
  1289                           
  1290                           ;stkvar	thermostat_sensing_1@readed_temperature @ sp[(-2)+0]
  1291  0014B2  0EFE               	movlw	-2
  1292  0014B4  C036  FFE3         	movff	btemp,plusw1
  1293  0014B8  0EFF               	movlw	-1
  1294  0014BA  C037  FFE3         	movff	btemp+1,plusw1
  1295  0014BE                     
  1296                           ;user_tasks.c: 27:        pipe_write(&pipe_temperature, readed_temperature);
  1297                           ;stkvar	thermostat_sensing_1@readed_temperature @ sp[(-2)+0]
  1298  0014BE  0EFE               	movlw	-2
  1299  0014C0  CFE3 FFE6          	movff	plusw1,postinc1
  1300  0014C4  CFE3 FFE6          	movff	plusw1,postinc1
  1301  0014C8  0E0A               	movlw	low _pipe_temperature
  1302  0014CA  6EE6               	movwf	postinc1,c
  1303  0014CC  0E00               	movlw	high _pipe_temperature
  1304  0014CE  6EE6               	movwf	postinc1,c
  1305  0014D0  ECC7  F004         	call	_pipe_write	;wreg free
  1306  0014D4  EF57  F00A         	goto	l222
  1307                           
  1308                           ; _thermostat_sensing_1: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  1309  0014D8  52E5               	movf	postdec1,f,c
  1310  0014DA  52E5               	movf	postdec1,f,c
  1311  0014DC  0012               	return		;funcret
  1312  0014DE                     __end_of_thermostat_sensing_1:
  1313                           	callstack 0
  1314                           
  1315 ;; *************** function _thermostat_value *****************
  1316 ;; Defined at:
  1317 ;;		line 3 in file "thermostat.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  temperatura_    2  [STACK] int 
  1322 ;;  resultadoAD     2  [STACK] int 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  2  [STACK] int 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1332 ;;      Params:         0       0       0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0
  1335 ;;      Totals:         0       0       0       0       0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    6
  1339 ;; This function calls:
  1340 ;;		___awdiv
  1341 ;; This function is called by:
  1342 ;;		_thermostat_sensing_1
  1343 ;;		_thermostat_sensing_2
  1344 ;; This function uses a reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text13
  1348  001126                     __ptext13:
  1349                           	callstack 0
  1350  001126                     _thermostat_value:
  1351                           	callstack 0
  1352                           
  1353                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1354  001126  52E6               	movf	postinc1,f,c
  1355  001128  52E6               	movf	postinc1,f,c
  1356  00112A  52E6               	movf	postinc1,f,c
  1357  00112C  52E6               	movf	postinc1,f,c
  1358  00112E                     
  1359                           ;thermostat.c: 4:     (INTCONbits.GIE = 0);
  1360  00112E  9EF2               	bcf	242,7,c	;volatile
  1361                           
  1362                           ;thermostat.c: 6:     ADCON0bits.ADON = 1;
  1363  001130  80C2               	bsf	194,0,c	;volatile
  1364  001132                     
  1365                           ;thermostat.c: 7:     ADCON0bits.CHS = 0b0000;
  1366  001132  0EC3               	movlw	-61
  1367  001134  16C2               	andwf	194,f,c	;volatile
  1368  001136                     
  1369                           ;thermostat.c: 10:     ADCON1bits.VCFG1 = 0;
  1370  001136  9AC1               	bcf	193,5,c	;volatile
  1371  001138                     
  1372                           ;thermostat.c: 11:     ADCON1bits.VCFG0 = 0;
  1373  001138  98C1               	bcf	193,4,c	;volatile
  1374                           
  1375                           ;thermostat.c: 14:     ADCON1bits.PCFG = 0b1110;
  1376  00113A  50C1               	movf	193,w,c	;volatile
  1377  00113C  0BF0               	andlw	-16
  1378  00113E  090E               	iorlw	14
  1379  001140  6EC1               	movwf	193,c	;volatile
  1380  001142                     
  1381                           ;thermostat.c: 17:     ADCON2bits.ADFM = 1;
  1382  001142  8EC0               	bsf	192,7,c	;volatile
  1383  001144                     
  1384                           ;thermostat.c: 20:     ADCON0bits.GODONE = 1;
  1385  001144  82C2               	bsf	194,1,c	;volatile
  1386  001146                     l353:
  1387  001146  B2C2               	btfsc	194,1,c	;volatile
  1388  001148  EFA8  F008         	goto	u25_21
  1389  00114C  EFAA  F008         	goto	u25_20
  1390  001150                     u25_21:
  1391  001150  EFA3  F008         	goto	l353
  1392  001154                     u25_20:
  1393  001154                     
  1394                           ;thermostat.c: 26:     int resultadoAD = ADRES;
  1395                           ;stkvar	thermostat_value@resultadoAD @ sp[(-4)+2]
  1396  001154  0EFE               	movlw	-2
  1397  001156  CFC3 FFE3          	movff	4035,plusw1	;volatile
  1398  00115A  0EFF               	movlw	-1
  1399  00115C  CFC4 FFE3          	movff	4036,plusw1	;volatile
  1400  001160                     
  1401                           ;thermostat.c: 28:     (INTCONbits.GIE = 1);
  1402  001160  8EF2               	bsf	242,7,c	;volatile
  1403  001162                     
  1404                           ;thermostat.c: 30:     int temperatura_ambiente = (150*resultadoAD)/307;
  1405  001162  0E33               	movlw	51
  1406  001164  6EE6               	movwf	postinc1,c
  1407  001166  0E01               	movlw	1
  1408  001168  6EE6               	movwf	postinc1,c
  1409                           
  1410                           ;stkvar	thermostat_value@resultadoAD @ sp[(-6)+2]
  1411  00116A  0EFC               	movlw	-4
  1412  00116C  CFE3 F040          	movff	plusw1,btemp+10
  1413  001170  0EFD               	movlw	-3
  1414  001172  CFE3 F041          	movff	plusw1,btemp+11
  1415  001176  0E96               	movlw	150
  1416  001178  0240               	mulwf	(btemp+10)^0,c
  1417  00117A  CFF3 F03E          	movff	prodl,btemp+8
  1418  00117E  CFF4 F03F          	movff	prodh,btemp+9
  1419  001182  0241               	mulwf	(btemp+11)^0,c
  1420  001184  50F3               	movf	prodl,w,c
  1421  001186  263F               	addwf	(btemp+9)^0,f,c
  1422  001188  C03E  FFE6         	movff	btemp+8,postinc1
  1423  00118C  C03F  FFE6         	movff	btemp+9,postinc1
  1424  001190  EC09  F004         	call	___awdiv	;wreg free
  1425                           
  1426                           ;stkvar	thermostat_value@temperatura_ambiente @ sp[(-4)+0]
  1427  001194  0EFC               	movlw	-4
  1428  001196  C036  FFE3         	movff	btemp,plusw1
  1429  00119A  0EFD               	movlw	-3
  1430  00119C  C037  FFE3         	movff	btemp+1,plusw1
  1431  0011A0                     
  1432                           ;thermostat.c: 32:     return temperatura_ambiente;
  1433                           ;stkvar	thermostat_value@temperatura_ambiente @ sp[(-4)+0]
  1434  0011A0  0EFC               	movlw	-4
  1435  0011A2  CFE3 F036          	movff	plusw1,btemp
  1436  0011A6  0EFD               	movlw	-3
  1437  0011A8  CFE3 F037          	movff	plusw1,btemp+1
  1438  0011AC                     
  1439                           ; _thermostat_value: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  1440  0011AC  52E5               	movf	postdec1,f,c
  1441  0011AE  52E5               	movf	postdec1,f,c
  1442  0011B0  52E5               	movf	postdec1,f,c
  1443  0011B2  52E5               	movf	postdec1,f,c
  1444  0011B4  0012               	return		;funcret
  1445  0011B6                     __end_of_thermostat_value:
  1446                           	callstack 0
  1447                           
  1448 ;; *************** function ___awdiv *****************
  1449 ;; Defined at:
  1450 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  dividend        2  [STACK] int 
  1453 ;;  divisor         2  [STACK] int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  quotient        2  [STACK] int 
  1456 ;;  sign            1  [STACK] unsigned char 
  1457 ;;  counter         1  [STACK] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2  [STACK] int 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1467 ;;      Params:         0       0       0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0
  1470 ;;      Totals:         0       0       0       0       0       0       0
  1471 ;;Total ram usage:        0 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    5
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_thermostat_value
  1478 ;; This function uses a reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text14
  1482  000812                     __ptext14:
  1483                           	callstack 0
  1484  000812                     ___awdiv:
  1485                           	callstack 0
  1486                           
  1487                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1488  000812  52E6               	movf	postinc1,f,c
  1489  000814  52E6               	movf	postinc1,f,c
  1490  000816  52E6               	movf	postinc1,f,c
  1491  000818  52E6               	movf	postinc1,f,c
  1492  00081A                     
  1493                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1494  00081A  0EFE               	movlw	-2
  1495  00081C  6AE3               	clrf	plusw1,c
  1496  00081E                     
  1497                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1498  00081E  0EF9               	movlw	-7
  1499  000820  BEE3               	btfsc	plusw1,7,c
  1500  000822  EF17  F004         	goto	u13_20
  1501  000826  EF15  F004         	goto	u13_21
  1502  00082A                     u13_21:
  1503  00082A  EF20  F004         	goto	l1234
  1504  00082E                     u13_20:
  1505  00082E                     
  1506                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1507                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1508  00082E  0EF8               	movlw	-8
  1509  000830  6CE3               	negf	plusw1,c
  1510  000832  0EF9               	movlw	-7
  1511  000834  1EE3               	comf	plusw1,f,c
  1512  000836  B0D8               	btfsc	status,0,c
  1513  000838  2AE3               	incf	plusw1,f,c
  1514  00083A                     
  1515                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1516  00083A  0EFE               	movlw	-2
  1517  00083C  6AE3               	clrf	plusw1,c
  1518  00083E  2AE3               	incf	plusw1,f,c
  1519  000840                     l1234:
  1520                           
  1521                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1522  000840  0EFB               	movlw	-5
  1523  000842  BEE3               	btfsc	plusw1,7,c
  1524  000844  EF28  F004         	goto	u14_20
  1525  000848  EF26  F004         	goto	u14_21
  1526  00084C                     u14_21:
  1527  00084C  EF30  F004         	goto	l1240
  1528  000850                     u14_20:
  1529  000850                     
  1530                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1531                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1532  000850  0EFA               	movlw	-6
  1533  000852  6CE3               	negf	plusw1,c
  1534  000854  0EFB               	movlw	-5
  1535  000856  1EE3               	comf	plusw1,f,c
  1536  000858  B0D8               	btfsc	status,0,c
  1537  00085A  2AE3               	incf	plusw1,f,c
  1538  00085C                     
  1539                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1540  00085C  0EFE               	movlw	-2
  1541  00085E  70E3               	btg	plusw1,0,c
  1542  000860                     l1240:
  1543                           
  1544                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1545  000860  0EFC               	movlw	-4
  1546  000862  6AE3               	clrf	plusw1,c
  1547  000864  0EFD               	movlw	-3
  1548  000866  6AE3               	clrf	plusw1,c
  1549  000868                     
  1550                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1551  000868  0EF8               	movlw	-8
  1552  00086A  CFE3 F036          	movff	plusw1,btemp
  1553  00086E  0EF9               	movlw	-7
  1554  000870  50E3               	movf	plusw1,w,c
  1555  000872  1036               	iorwf	btemp^0,w,c
  1556  000874  B4D8               	btfsc	status,2,c
  1557  000876  EF3F  F004         	goto	u15_21
  1558  00087A  EF41  F004         	goto	u15_20
  1559  00087E                     u15_21:
  1560  00087E  EFAD  F004         	goto	l1264
  1561  000882                     u15_20:
  1562  000882                     
  1563                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  1564  000882  0EFF               	movlw	-1
  1565  000884  6AE3               	clrf	plusw1,c
  1566  000886  2AE3               	incf	plusw1,f,c
  1567  000888  EF57  F004         	goto	l1250
  1568  00088C                     l1246:
  1569                           
  1570                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1571  00088C  0EF8               	movlw	-8
  1572  00088E  50E3               	movf	plusw1,w,c
  1573  000890  90D8               	bcf	status,0,c
  1574  000892  34E8               	rlcf	wreg,w,c
  1575  000894  6E36               	movwf	btemp^0,c
  1576  000896  0EF8               	movlw	-8
  1577  000898  C036  FFE3         	movff	btemp,plusw1
  1578  00089C  0EF9               	movlw	-7
  1579  00089E  50E3               	movf	plusw1,w,c
  1580  0008A0  34E8               	rlcf	wreg,w,c
  1581  0008A2  6E36               	movwf	btemp^0,c
  1582  0008A4  0EF9               	movlw	-7
  1583  0008A6  C036  FFE3         	movff	btemp,plusw1
  1584  0008AA                     
  1585                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  1586  0008AA  0EFF               	movlw	-1
  1587  0008AC  2AE3               	incf	plusw1,f,c
  1588  0008AE                     l1250:
  1589                           
  1590                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1591  0008AE  0EF9               	movlw	-7
  1592  0008B0  AEE3               	btfss	plusw1,7,c
  1593  0008B2  EF5D  F004         	goto	u16_21
  1594  0008B6  EF5F  F004         	goto	u16_20
  1595  0008BA                     u16_21:
  1596  0008BA  EF46  F004         	goto	l1246
  1597  0008BE                     u16_20:
  1598  0008BE                     l1252:
  1599                           
  1600                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1601  0008BE  0EFC               	movlw	-4
  1602  0008C0  50E3               	movf	plusw1,w,c
  1603  0008C2  90D8               	bcf	status,0,c
  1604  0008C4  34E8               	rlcf	wreg,w,c
  1605  0008C6  6E36               	movwf	btemp^0,c
  1606  0008C8  0EFC               	movlw	-4
  1607  0008CA  C036  FFE3         	movff	btemp,plusw1
  1608  0008CE  0EFD               	movlw	-3
  1609  0008D0  50E3               	movf	plusw1,w,c
  1610  0008D2  34E8               	rlcf	wreg,w,c
  1611  0008D4  6E36               	movwf	btemp^0,c
  1612  0008D6  0EFD               	movlw	-3
  1613  0008D8  C036  FFE3         	movff	btemp,plusw1
  1614  0008DC                     
  1615                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1616  0008DC  0EF8               	movlw	-8
  1617  0008DE  CFE3 F040          	movff	plusw1,btemp+10
  1618  0008E2  0EF9               	movlw	-7
  1619  0008E4  CFE3 F041          	movff	plusw1,btemp+11
  1620                           
  1621                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1622  0008E8  0EFA               	movlw	-6
  1623  0008EA  CFE3 F03E          	movff	plusw1,btemp+8
  1624  0008EE  0EFB               	movlw	-5
  1625  0008F0  CFE3 F03F          	movff	plusw1,btemp+9
  1626  0008F4  5040               	movf	(btemp+10)^0,w,c
  1627  0008F6  5C3E               	subwf	(btemp+8)^0,w,c
  1628  0008F8  5041               	movf	(btemp+11)^0,w,c
  1629  0008FA  583F               	subwfb	(btemp+9)^0,w,c
  1630  0008FC  A0D8               	btfss	status,0,c
  1631  0008FE  EF83  F004         	goto	u17_21
  1632  000902  EF85  F004         	goto	u17_20
  1633  000906                     u17_21:
  1634  000906  EF99  F004         	goto	l1260
  1635  00090A                     u17_20:
  1636  00090A                     
  1637                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1638                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1639  00090A  0EFA               	movlw	-6
  1640  00090C  50E3               	movf	plusw1,w,c
  1641  00090E  6E36               	movwf	btemp^0,c
  1642  000910  0EF8               	movlw	-8
  1643  000912  50E3               	movf	plusw1,w,c
  1644  000914  5E36               	subwf	btemp^0,f,c
  1645  000916  0EFA               	movlw	-6
  1646  000918  C036  FFE3         	movff	btemp,plusw1
  1647  00091C  0EFB               	movlw	-5
  1648  00091E  50E3               	movf	plusw1,w,c
  1649  000920  6E36               	movwf	btemp^0,c
  1650  000922  0EF9               	movlw	-7
  1651  000924  50E3               	movf	plusw1,w,c
  1652  000926  5A36               	subwfb	btemp^0,f,c
  1653  000928  0EFB               	movlw	-5
  1654  00092A  C036  FFE3         	movff	btemp,plusw1
  1655  00092E                     
  1656                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1657  00092E  0EFC               	movlw	-4
  1658  000930  80E3               	bsf	plusw1,0,c
  1659  000932                     l1260:
  1660                           
  1661                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1662  000932  90D8               	bcf	status,0,c
  1663  000934  0EF9               	movlw	-7
  1664  000936  32E3               	rrcf	plusw1,f,c
  1665  000938  0EF8               	movlw	-8
  1666  00093A  32E3               	rrcf	plusw1,f,c
  1667  00093C                     
  1668                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  1669  00093C  0EFF               	movlw	-1
  1670  00093E  50E3               	movf	plusw1,w,c
  1671  000940  6E36               	movwf	btemp^0,c
  1672  000942  0E01               	movlw	1
  1673  000944  5E36               	subwf	btemp^0,f,c
  1674  000946  0EFF               	movlw	-1
  1675  000948  C036  FFE3         	movff	btemp,plusw1
  1676  00094C  A4D8               	btfss	status,2,c
  1677  00094E  EFAB  F004         	goto	u18_21
  1678  000952  EFAD  F004         	goto	u18_20
  1679  000956                     u18_21:
  1680  000956  EF5F  F004         	goto	l1252
  1681  00095A                     u18_20:
  1682  00095A                     l1264:
  1683                           
  1684                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1685  00095A  0EFE               	movlw	-2
  1686  00095C  50E3               	movf	plusw1,w,c
  1687  00095E  B4D8               	btfsc	status,2,c
  1688  000960  EFB4  F004         	goto	u19_21
  1689  000964  EFB6  F004         	goto	u19_20
  1690  000968                     u19_21:
  1691  000968  EFBC  F004         	goto	l1268
  1692  00096C                     u19_20:
  1693  00096C                     
  1694                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1695                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1696  00096C  0EFC               	movlw	-4
  1697  00096E  6CE3               	negf	plusw1,c
  1698  000970  0EFD               	movlw	-3
  1699  000972  1EE3               	comf	plusw1,f,c
  1700  000974  B0D8               	btfsc	status,0,c
  1701  000976  2AE3               	incf	plusw1,f,c
  1702  000978                     l1268:
  1703                           
  1704                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1705  000978  0EFC               	movlw	-4
  1706  00097A  CFE3 F036          	movff	plusw1,btemp
  1707  00097E  0EFD               	movlw	-3
  1708  000980  CFE3 F037          	movff	plusw1,btemp+1
  1709  000984                     
  1710                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  1711  000984  0EF8               	movlw	248
  1712  000986  26E1               	addwf	fsr1l,f,c
  1713  000988  0EFF               	movlw	255
  1714  00098A  22E2               	addwfc	fsr1h,f,c
  1715  00098C  0012               	return		;funcret
  1716  00098E                     __end_of___awdiv:
  1717                           	callstack 0
  1718                           
  1719 ;; *************** function _pipe_write *****************
  1720 ;; Defined at:
  1721 ;;		line 32 in file "pipe.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  pipe            2  [STACK] PTR struct pipe
  1724 ;;		 -> pipe_temperature(26), 
  1725 ;;  dado            2  [STACK] int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  write_flag      1  [STACK] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1  [STACK] void 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1737 ;;      Params:         0       0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:   10
  1744 ;; This function calls:
  1745 ;;		_sem_get_value
  1746 ;;		_sem_post
  1747 ;;		_sem_wait
  1748 ;; This function is called by:
  1749 ;;		_thermostat_sensing_1
  1750 ;; This function uses a reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text15
  1754  00098E                     __ptext15:
  1755                           	callstack 0
  1756  00098E                     _pipe_write:
  1757                           	callstack 0
  1758                           
  1759                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1760  00098E  52E6               	movf	postinc1,f,c
  1761  000990                     
  1762                           ;pipe.c: 33:    (INTCONbits.GIE = 0);
  1763  000990  9EF2               	bcf	242,7,c	;volatile
  1764  000992                     
  1765                           ;pipe.c: 35:     bool write_flag = 0;
  1766                           ;stkvar	pipe_write@write_flag @ sp[(-1)+0]
  1767  000992  0EFF               	movlw	-1
  1768  000994  6AE3               	clrf	plusw1,c
  1769  000996                     l1794:
  1770                           
  1771                           ;pipe.c: 38:         if(pipe->size < 1) {
  1772                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1773  000996  0EFD               	movlw	-3
  1774  000998  CFE3 F040          	movff	plusw1,btemp+10
  1775  00099C  0EFE               	movlw	-2
  1776  00099E  CFE3 F041          	movff	plusw1,btemp+11
  1777  0009A2  0E02               	movlw	2
  1778  0009A4  2440               	addwf	(btemp+10)^0,w,c
  1779  0009A6  6ED9               	movwf	fsr2l,c
  1780  0009A8  0E00               	movlw	0
  1781  0009AA  2041               	addwfc	(btemp+11)^0,w,c
  1782  0009AC  6EDA               	movwf	fsr2h,c
  1783  0009AE  50DE               	movf	postinc2,w,c
  1784  0009B0  10DE               	iorwf	postinc2,w,c
  1785  0009B2  A4D8               	btfss	status,2,c
  1786  0009B4  EFDE  F004         	goto	u74_21
  1787  0009B8  EFE0  F004         	goto	u74_20
  1788  0009BC                     u74_21:
  1789  0009BC  EF5A  F005         	goto	l326
  1790  0009C0                     u74_20:
  1791  0009C0                     
  1792                           ;pipe.c: 39:             pipe->msg[pipe->write_pos] = dado;
  1793                           ;stkvar	pipe_write@dado @ sp[(-1)+-4]
  1794  0009C0  50E1               	movf	fsr1l,w,c
  1795  0009C2  0FFB               	addlw	-5
  1796  0009C4  6ED9               	movwf	fsr2l,c
  1797  0009C6  50E2               	movf	fsr1h,w,c
  1798  0009C8  6EDA               	movwf	fsr2h,c
  1799  0009CA  0EFF               	movlw	255
  1800  0009CC  22DA               	addwfc	fsr2h,f,c
  1801                           
  1802                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1803  0009CE  0EFD               	movlw	-3
  1804  0009D0  CFE3 F040          	movff	plusw1,btemp+10
  1805  0009D4  0EFE               	movlw	-2
  1806  0009D6  CFE3 F041          	movff	plusw1,btemp+11
  1807  0009DA  0E06               	movlw	6
  1808  0009DC  2440               	addwf	(btemp+10)^0,w,c
  1809  0009DE  6EE9               	movwf	fsr0l,c
  1810  0009E0  0E00               	movlw	0
  1811  0009E2  2041               	addwfc	(btemp+11)^0,w,c
  1812  0009E4  6EEA               	movwf	fsr0h,c
  1813  0009E6  CFEE F040          	movff	postinc0,btemp+10
  1814  0009EA  CFED F041          	movff	postdec0,btemp+11
  1815  0009EE  90D8               	bcf	status,0,c
  1816  0009F0  3440               	rlcf	(btemp+10)^0,w,c
  1817  0009F2  6E3E               	movwf	(btemp+8)^0,c
  1818  0009F4  3441               	rlcf	(btemp+11)^0,w,c
  1819  0009F6  6E3F               	movwf	(btemp+9)^0,c
  1820                           
  1821                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1822  0009F8  0EFD               	movlw	-3
  1823  0009FA  CFE3 F040          	movff	plusw1,btemp+10
  1824  0009FE  0EFE               	movlw	-2
  1825  000A00  CFE3 F041          	movff	plusw1,btemp+11
  1826  000A04  503E               	movf	(btemp+8)^0,w,c
  1827  000A06  2440               	addwf	(btemp+10)^0,w,c
  1828  000A08  6EE9               	movwf	fsr0l,c
  1829  000A0A  503F               	movf	(btemp+9)^0,w,c
  1830  000A0C  2041               	addwfc	(btemp+11)^0,w,c
  1831  000A0E  6EEA               	movwf	fsr0h,c
  1832  000A10  CFDE FFEE          	movff	postinc2,postinc0
  1833  000A14  CFDD FFED          	movff	postdec2,postdec0
  1834  000A18                     
  1835                           ;pipe.c: 40:             pipe->write_pos = (pipe->write_pos + 1) % 1;
  1836                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1837  000A18  0EFD               	movlw	-3
  1838  000A1A  CFE3 F040          	movff	plusw1,btemp+10
  1839  000A1E  0EFE               	movlw	-2
  1840  000A20  CFE3 F041          	movff	plusw1,btemp+11
  1841  000A24  0E06               	movlw	6
  1842  000A26  2440               	addwf	(btemp+10)^0,w,c
  1843  000A28  6ED9               	movwf	fsr2l,c
  1844  000A2A  0E00               	movlw	0
  1845  000A2C  2041               	addwfc	(btemp+11)^0,w,c
  1846  000A2E  6EDA               	movwf	fsr2h,c
  1847  000A30  0E00               	movlw	0
  1848  000A32  6EDE               	movwf	postinc2,c
  1849  000A34  0E00               	movlw	0
  1850  000A36  6EDD               	movwf	postdec2,c
  1851  000A38                     
  1852                           ;pipe.c: 41:             pipe->size++;
  1853                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1854  000A38  0EFD               	movlw	-3
  1855  000A3A  CFE3 F040          	movff	plusw1,btemp+10
  1856  000A3E  0EFE               	movlw	-2
  1857  000A40  CFE3 F041          	movff	plusw1,btemp+11
  1858  000A44  0E02               	movlw	2
  1859  000A46  2440               	addwf	(btemp+10)^0,w,c
  1860  000A48  6ED9               	movwf	fsr2l,c
  1861  000A4A  0E00               	movlw	0
  1862  000A4C  2041               	addwfc	(btemp+11)^0,w,c
  1863  000A4E  6EDA               	movwf	fsr2h,c
  1864  000A50  2ADE               	incf	postinc2,f,c
  1865  000A52  0E00               	movlw	0
  1866  000A54  22DD               	addwfc	postdec2,f,c
  1867  000A56                     
  1868                           ;pipe.c: 42:             write_flag = 1;
  1869                           ;stkvar	pipe_write@write_flag @ sp[(-1)+0]
  1870  000A56  0EFF               	movlw	-1
  1871  000A58  6AE3               	clrf	plusw1,c
  1872  000A5A  2AE3               	incf	plusw1,f,c
  1873  000A5C                     
  1874                           ;pipe.c: 43:             if(sem_get_value(pipe->sem) < 0){
  1875                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1876  000A5C  0EFD               	movlw	-3
  1877  000A5E  CFE3 F040          	movff	plusw1,btemp+10
  1878  000A62  0EFE               	movlw	-2
  1879  000A64  CFE3 F041          	movff	plusw1,btemp+11
  1880  000A68  0E08               	movlw	8
  1881  000A6A  2440               	addwf	(btemp+10)^0,w,c
  1882  000A6C  6ED9               	movwf	fsr2l,c
  1883  000A6E  0E00               	movlw	0
  1884  000A70  2041               	addwfc	(btemp+11)^0,w,c
  1885  000A72  6EDA               	movwf	fsr2h,c
  1886  000A74  0E12               	movlw	18
  1887  000A76                     u75_21:
  1888  000A76  CFDE FFE6          	movff	postinc2,postinc1
  1889  000A7A  2CE8               	decfsz	wreg,w,c
  1890  000A7C  EF3B  F005         	goto	u75_21
  1891  000A80  ECB9  F00A         	call	_sem_get_value	;wreg free
  1892  000A84  BE37               	btfsc	(btemp+1)^0,7,c
  1893  000A86  EF49  F005         	goto	u76_20
  1894  000A8A  EF47  F005         	goto	u76_21
  1895  000A8E                     u76_21:
  1896  000A8E  EF6A  F005         	goto	l1810
  1897  000A92                     u76_20:
  1898  000A92                     
  1899                           ;pipe.c: 44:                 sem_post(&pipe->sem);
  1900                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1901  000A92  0EFD               	movlw	-3
  1902  000A94  50E3               	movf	plusw1,w,c
  1903  000A96  0F08               	addlw	8
  1904  000A98  6E40               	movwf	(btemp+10)^0,c
  1905  000A9A  0EFE               	movlw	-2
  1906  000A9C  CFE3 F041          	movff	plusw1,btemp+11
  1907  000AA0  0E00               	movlw	0
  1908  000AA2  2241               	addwfc	(btemp+11)^0,f,c
  1909  000AA4  C040  FFE6         	movff	btemp+10,postinc1
  1910  000AA8  C041  FFE6         	movff	btemp+11,postinc1
  1911  000AAC  ECC5  F006         	call	_sem_post	;wreg free
  1912  000AB0  EF6A  F005         	goto	l1810
  1913  000AB4                     l326:
  1914                           
  1915                           ;pipe.c: 48:             (INTCONbits.GIE = 1);
  1916  000AB4  8EF2               	bsf	242,7,c	;volatile
  1917  000AB6                     
  1918                           ;pipe.c: 49:             sem_wait(&pipe->sem);
  1919                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1920  000AB6  0EFD               	movlw	-3
  1921  000AB8  50E3               	movf	plusw1,w,c
  1922  000ABA  0F08               	addlw	8
  1923  000ABC  6E40               	movwf	(btemp+10)^0,c
  1924  000ABE  0EFE               	movlw	-2
  1925  000AC0  CFE3 F041          	movff	plusw1,btemp+11
  1926  000AC4  0E00               	movlw	0
  1927  000AC6  2241               	addwfc	(btemp+11)^0,f,c
  1928  000AC8  C040  FFE6         	movff	btemp+10,postinc1
  1929  000ACC  C041  FFE6         	movff	btemp+11,postinc1
  1930  000AD0  EC0A  F000         	call	_sem_wait	;wreg free
  1931  000AD4                     l1810:
  1932                           
  1933                           ;pipe.c: 51:     } while(!write_flag);
  1934                           ;stkvar	pipe_write@write_flag @ sp[(-1)+0]
  1935  000AD4  0EFF               	movlw	-1
  1936  000AD6  50E3               	movf	plusw1,w,c
  1937  000AD8  B4D8               	btfsc	status,2,c
  1938  000ADA  EF71  F005         	goto	u77_21
  1939  000ADE  EF73  F005         	goto	u77_20
  1940  000AE2                     u77_21:
  1941  000AE2  EFCB  F004         	goto	l1794
  1942  000AE6                     u77_20:
  1943  000AE6                     
  1944                           ;pipe.c: 53:     (INTCONbits.GIE = 1);
  1945  000AE6  8EF2               	bsf	242,7,c	;volatile
  1946  000AE8                     
  1947                           ; _pipe_write: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  1948  000AE8  0EFB               	movlw	251
  1949  000AEA  26E1               	addwf	fsr1l,f,c
  1950  000AEC  0EFF               	movlw	255
  1951  000AEE  22E2               	addwfc	fsr1h,f,c
  1952  000AF0  0012               	return		;funcret
  1953  000AF2                     __end_of_pipe_write:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function _sem_wait *****************
  1957 ;; Defined at:
  1958 ;;		line 10 in file "semaphore.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  s               2  [STACK] PTR struct semaphore
  1961 ;;		 -> pipe_temperature(26), 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1  [STACK] void 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1973 ;;      Params:         0       0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    9
  1980 ;; This function calls:
  1981 ;;		_RESTORE_CONTEXT
  1982 ;;		___lwmod
  1983 ;; This function is called by:
  1984 ;;		_pipe_read
  1985 ;;		_pipe_write
  1986 ;; This function uses a reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text16
  1990  000014                     __ptext16:
  1991                           	callstack 0
  1992  000014                     _sem_wait:
  1993                           	callstack 15
  1994  000014                     
  1995                           ;semaphore.c: 11:     (INTCONbits.GIE = 0);
  1996  000014  9EF2               	bcf	242,7,c	;volatile
  1997  000016                     
  1998                           ;semaphore.c: 13:     s->s_count--;
  1999                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2000  000016  0EFE               	movlw	-2
  2001  000018  CFE3 FFD9          	movff	plusw1,fsr2l
  2002  00001C  0EFF               	movlw	-1
  2003  00001E  CFE3 FFDA          	movff	plusw1,fsr2h
  2004  000022  06DE               	decf	postinc2,f,c
  2005  000024  0E00               	movlw	0
  2006  000026  5ADD               	subwfb	postdec2,f,c
  2007  000028                     
  2008                           ;semaphore.c: 14:     if(s->s_count < 0){
  2009                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2010  000028  0EFE               	movlw	-2
  2011  00002A  CFE3 FFD9          	movff	plusw1,fsr2l
  2012  00002E  0EFF               	movlw	-1
  2013  000030  CFE3 FFDA          	movff	plusw1,fsr2h
  2014  000034  0E01               	movlw	1
  2015  000036  BEDB               	btfsc	plusw2,7,c
  2016  000038  EF22  F000         	goto	u65_20
  2017  00003C  EF20  F000         	goto	u65_21
  2018  000040                     u65_21:
  2019  000040  EF85  F001         	goto	l1722
  2020  000044                     u65_20:
  2021  000044                     
  2022                           ;semaphore.c: 17:         s->s_queue.TASKS[s->s_queue.queue_wait_pos] = READY_QUEUE.task
      +                          _running;
  2023  000044  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  2024                           
  2025                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2026  000048  0EFE               	movlw	-2
  2027  00004A  CFE3 F040          	movff	plusw1,btemp+10
  2028  00004E  0EFF               	movlw	-1
  2029  000050  CFE3 F041          	movff	plusw1,btemp+11
  2030  000054  0E0E               	movlw	14
  2031  000056  2440               	addwf	(btemp+10)^0,w,c
  2032  000058  6EE9               	movwf	fsr0l,c
  2033  00005A  0E00               	movlw	0
  2034  00005C  2041               	addwfc	(btemp+11)^0,w,c
  2035  00005E  6EEA               	movwf	fsr0h,c
  2036  000060  CFEE F040          	movff	postinc0,btemp+10
  2037  000064  CFED F041          	movff	postdec0,btemp+11
  2038  000068  90D8               	bcf	status,0,c
  2039  00006A  3440               	rlcf	(btemp+10)^0,w,c
  2040  00006C  6E3E               	movwf	(btemp+8)^0,c
  2041  00006E  3441               	rlcf	(btemp+11)^0,w,c
  2042  000070  6E3F               	movwf	(btemp+9)^0,c
  2043                           
  2044                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2045  000072  0EFE               	movlw	-2
  2046  000074  50E3               	movf	plusw1,w,c
  2047  000076  263E               	addwf	(btemp+8)^0,f,c
  2048  000078  0EFF               	movlw	-1
  2049  00007A  50E3               	movf	plusw1,w,c
  2050  00007C  223F               	addwfc	(btemp+9)^0,f,c
  2051  00007E  0E02               	movlw	2
  2052  000080  243E               	addwf	(btemp+8)^0,w,c
  2053  000082  6EE9               	movwf	fsr0l,c
  2054  000084  0E00               	movlw	0
  2055  000086  203F               	addwfc	(btemp+9)^0,w,c
  2056  000088  6EEA               	movwf	fsr0h,c
  2057  00008A  CFDE FFEE          	movff	postinc2,postinc0
  2058  00008E  CFDD FFED          	movff	postdec2,postdec0
  2059  000092                     
  2060                           ;semaphore.c: 18:         s->s_queue.queue_wait_pos = (s->s_queue.queue_wait_pos + 1) % 
      +                          5;
  2061  000092  0E05               	movlw	5
  2062  000094  6EE6               	movwf	postinc1,c
  2063  000096  0E00               	movlw	0
  2064  000098  6EE6               	movwf	postinc1,c
  2065                           
  2066                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  2067  00009A  0EFC               	movlw	-4
  2068  00009C  CFE3 F040          	movff	plusw1,btemp+10
  2069  0000A0  0EFD               	movlw	-3
  2070  0000A2  CFE3 F041          	movff	plusw1,btemp+11
  2071  0000A6  0E0E               	movlw	14
  2072  0000A8  2440               	addwf	(btemp+10)^0,w,c
  2073  0000AA  6ED9               	movwf	fsr2l,c
  2074  0000AC  0E00               	movlw	0
  2075  0000AE  2041               	addwfc	(btemp+11)^0,w,c
  2076  0000B0  6EDA               	movwf	fsr2h,c
  2077  0000B2  CFDE F040          	movff	postinc2,btemp+10
  2078  0000B6  CFDD F041          	movff	postdec2,btemp+11
  2079  0000BA  0E01               	movlw	1
  2080  0000BC  2640               	addwf	(btemp+10)^0,f,c
  2081  0000BE  0E00               	movlw	0
  2082  0000C0  2241               	addwfc	(btemp+11)^0,f,c
  2083  0000C2  C040  FFE6         	movff	btemp+10,postinc1
  2084  0000C6  C041  FFE6         	movff	btemp+11,postinc1
  2085  0000CA  ECD4  F007         	call	___lwmod	;wreg free
  2086                           
  2087                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2088  0000CE  0EFE               	movlw	-2
  2089  0000D0  CFE3 F040          	movff	plusw1,btemp+10
  2090  0000D4  0EFF               	movlw	-1
  2091  0000D6  CFE3 F041          	movff	plusw1,btemp+11
  2092  0000DA  0E0E               	movlw	14
  2093  0000DC  2440               	addwf	(btemp+10)^0,w,c
  2094  0000DE  6ED9               	movwf	fsr2l,c
  2095  0000E0  0E00               	movlw	0
  2096  0000E2  2041               	addwfc	(btemp+11)^0,w,c
  2097  0000E4  6EDA               	movwf	fsr2h,c
  2098  0000E6  C036  FFDE         	movff	btemp,postinc2
  2099  0000EA  C037  FFDD         	movff	btemp+1,postdec2
  2100  0000EE                     
  2101                           ;semaphore.c: 19:         s->s_queue.queue_size++;
  2102                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2103  0000EE  0EFE               	movlw	-2
  2104  0000F0  CFE3 F040          	movff	plusw1,btemp+10
  2105  0000F4  0EFF               	movlw	-1
  2106  0000F6  CFE3 F041          	movff	plusw1,btemp+11
  2107  0000FA  0E0C               	movlw	12
  2108  0000FC  2440               	addwf	(btemp+10)^0,w,c
  2109  0000FE  6ED9               	movwf	fsr2l,c
  2110  000100  0E00               	movlw	0
  2111  000102  2041               	addwfc	(btemp+11)^0,w,c
  2112  000104  6EDA               	movwf	fsr2h,c
  2113  000106  2ADE               	incf	postinc2,f,c
  2114  000108  0E00               	movlw	0
  2115  00010A  22DD               	addwfc	postdec2,f,c
  2116  00010C  9EF2               	bcf	242,7,c	;volatile
  2117  00010E  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  2118  000112  CFDE F040          	movff	postinc2,btemp+10
  2119  000116  CFDD F041          	movff	postdec2,btemp+11
  2120  00011A  0E71               	movlw	113
  2121  00011C  0240               	mulwf	(btemp+10)^0,c
  2122  00011E  CFF3 F03E          	movff	prodl,btemp+8
  2123  000122  CFF4 F03F          	movff	prodh,btemp+9
  2124  000126  0241               	mulwf	(btemp+11)^0,c
  2125  000128  50F3               	movf	prodl,w,c
  2126  00012A  263F               	addwf	(btemp+9)^0,f,c
  2127  00012C  0E7D               	movlw	low (_READY_QUEUE+107)
  2128  00012E  243E               	addwf	(btemp+8)^0,w,c
  2129  000130  6ED9               	movwf	fsr2l,c
  2130  000132  0E01               	movlw	high (_READY_QUEUE+107)
  2131  000134  203F               	addwfc	(btemp+9)^0,w,c
  2132  000136  6EDA               	movwf	fsr2h,c
  2133  000138  50DE               	movf	postinc2,w,c
  2134  00013A  10DE               	iorwf	postinc2,w,c
  2135  00013C  B4D8               	btfsc	status,2,c
  2136  00013E  EFA3  F000         	goto	u66_21
  2137  000142  EFA5  F000         	goto	u66_20
  2138  000146                     u66_21:
  2139  000146  EF6B  F001         	goto	l1716
  2140  00014A                     u66_20:
  2141  00014A  6A07               	clrf	_index^0,c
  2142  00014C  6A08               	clrf	(_index+1)^0,c
  2143  00014E  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  2144  000152  CFDE F040          	movff	postinc2,btemp+10
  2145  000156  CFDD F041          	movff	postdec2,btemp+11
  2146  00015A  0E71               	movlw	113
  2147  00015C  0240               	mulwf	(btemp+10)^0,c
  2148  00015E  CFF3 F03E          	movff	prodl,btemp+8
  2149  000162  CFF4 F03F          	movff	prodh,btemp+9
  2150  000166  0241               	mulwf	(btemp+11)^0,c
  2151  000168  50F3               	movf	prodl,w,c
  2152  00016A  263F               	addwf	(btemp+9)^0,f,c
  2153  00016C  0E16               	movlw	low (_READY_QUEUE+4)
  2154  00016E  243E               	addwf	(btemp+8)^0,w,c
  2155  000170  6ED9               	movwf	fsr2l,c
  2156  000172  0E01               	movlw	high (_READY_QUEUE+4)
  2157  000174  203F               	addwfc	(btemp+9)^0,w,c
  2158  000176  6EDA               	movwf	fsr2h,c
  2159  000178  0E03               	movlw	3
  2160  00017A  6EDF               	movwf	indf2,c
  2161  00017C  6E40               	movwf	(btemp+10)^0,c
  2162  00017E  6A41               	clrf	(btemp+11)^0,c
  2163  000180  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  2164  000184  CFDE F03E          	movff	postinc2,btemp+8
  2165  000188  CFDD F03F          	movff	postdec2,btemp+9
  2166  00018C  0E71               	movlw	113
  2167  00018E  023E               	mulwf	(btemp+8)^0,c
  2168  000190  CFF3 F03C          	movff	prodl,btemp+6
  2169  000194  CFF4 F03D          	movff	prodh,btemp+7
  2170  000198  023F               	mulwf	(btemp+9)^0,c
  2171  00019A  50F3               	movf	prodl,w,c
  2172  00019C  263D               	addwf	(btemp+7)^0,f,c
  2173  00019E  0E19               	movlw	low (_READY_QUEUE+7)
  2174  0001A0  243C               	addwf	(btemp+6)^0,w,c
  2175  0001A2  6ED9               	movwf	fsr2l,c
  2176  0001A4  0E01               	movlw	high (_READY_QUEUE+7)
  2177  0001A6  203D               	addwfc	(btemp+7)^0,w,c
  2178  0001A8  6EDA               	movwf	fsr2h,c
  2179  0001AA  C040  FFDE         	movff	btemp+10,postinc2
  2180  0001AE  C041  FFDD         	movff	btemp+11,postdec2
  2181  0001B2  50E0               	movf	224,w,c	;volatile
  2182  0001B4  6E40               	movwf	(btemp+10)^0,c
  2183  0001B6  6A41               	clrf	(btemp+11)^0,c
  2184  0001B8  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  2185  0001BC  CFDE F03E          	movff	postinc2,btemp+8
  2186  0001C0  CFDD F03F          	movff	postdec2,btemp+9
  2187  0001C4  0E71               	movlw	113
  2188  0001C6  023E               	mulwf	(btemp+8)^0,c
  2189  0001C8  CFF3 F03C          	movff	prodl,btemp+6
  2190  0001CC  CFF4 F03D          	movff	prodh,btemp+7
  2191  0001D0  023F               	mulwf	(btemp+9)^0,c
  2192  0001D2  50F3               	movf	prodl,w,c
  2193  0001D4  263D               	addwf	(btemp+7)^0,f,c
  2194  0001D6  0E1B               	movlw	low (_READY_QUEUE+9)
  2195  0001D8  243C               	addwf	(btemp+6)^0,w,c
  2196  0001DA  6ED9               	movwf	fsr2l,c
  2197  0001DC  0E01               	movlw	high (_READY_QUEUE+9)
  2198  0001DE  203D               	addwfc	(btemp+7)^0,w,c
  2199  0001E0  6EDA               	movwf	fsr2h,c
  2200  0001E2  C040  FFDE         	movff	btemp+10,postinc2
  2201  0001E6  C041  FFDD         	movff	btemp+11,postdec2
  2202  0001EA  50D8               	movf	216,w,c	;volatile
  2203  0001EC  6E40               	movwf	(btemp+10)^0,c
  2204  0001EE  6A41               	clrf	(btemp+11)^0,c
  2205  0001F0  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  2206  0001F4  CFDE F03E          	movff	postinc2,btemp+8
  2207  0001F8  CFDD F03F          	movff	postdec2,btemp+9
  2208  0001FC  0E71               	movlw	113
  2209  0001FE  023E               	mulwf	(btemp+8)^0,c
  2210  000200  CFF3 F03C          	movff	prodl,btemp+6
  2211  000204  CFF4 F03D          	movff	prodh,btemp+7
  2212  000208  023F               	mulwf	(btemp+9)^0,c
  2213  00020A  50F3               	movf	prodl,w,c
  2214  00020C  263D               	addwf	(btemp+7)^0,f,c
  2215  00020E  0E17               	movlw	low (_READY_QUEUE+5)
  2216  000210  243C               	addwf	(btemp+6)^0,w,c
  2217  000212  6ED9               	movwf	fsr2l,c
  2218  000214  0E01               	movlw	high (_READY_QUEUE+5)
  2219  000216  203D               	addwfc	(btemp+7)^0,w,c
  2220  000218  6EDA               	movwf	fsr2h,c
  2221  00021A  C040  FFDE         	movff	btemp+10,postinc2
  2222  00021E  C041  FFDD         	movff	btemp+11,postdec2
  2223  000222  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  2224  000226  CFDE F040          	movff	postinc2,btemp+10
  2225  00022A  CFDD F041          	movff	postdec2,btemp+11
  2226  00022E  0E71               	movlw	113
  2227  000230  0240               	mulwf	(btemp+10)^0,c
  2228  000232  CFF3 F03E          	movff	prodl,btemp+8
  2229  000236  CFF4 F03F          	movff	prodh,btemp+9
  2230  00023A  0241               	mulwf	(btemp+11)^0,c
  2231  00023C  50F3               	movf	prodl,w,c
  2232  00023E  263F               	addwf	(btemp+9)^0,f,c
  2233  000240  0E7D               	movlw	low (_READY_QUEUE+107)
  2234  000242  243E               	addwf	(btemp+8)^0,w,c
  2235  000244  6ED9               	movwf	fsr2l,c
  2236  000246  0E01               	movlw	high (_READY_QUEUE+107)
  2237  000248  203F               	addwfc	(btemp+9)^0,w,c
  2238  00024A  6EDA               	movwf	fsr2h,c
  2239  00024C  0E00               	movlw	0
  2240  00024E  6EDE               	movwf	postinc2,c
  2241  000250  0E00               	movlw	0
  2242  000252  6EDD               	movwf	postdec2,c
  2243  000254                     l288:
  2244  000254  C007  F040         	movff	_index,btemp+10
  2245  000258  C008  F041         	movff	_index+1,btemp+11
  2246  00025C  0E03               	movlw	3
  2247  00025E  0240               	mulwf	(btemp+10)^0,c
  2248  000260  CFF3 F03E          	movff	prodl,btemp+8
  2249  000264  CFF4 F03F          	movff	prodh,btemp+9
  2250  000268  0241               	mulwf	(btemp+11)^0,c
  2251  00026A  50F3               	movf	prodl,w,c
  2252  00026C  263F               	addwf	(btemp+9)^0,f,c
  2253  00026E  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  2254  000272  CFDE F040          	movff	postinc2,btemp+10
  2255  000276  CFDD F041          	movff	postdec2,btemp+11
  2256  00027A  0E71               	movlw	113
  2257  00027C  0240               	mulwf	(btemp+10)^0,c
  2258  00027E  CFF3 F03C          	movff	prodl,btemp+6
  2259  000282  CFF4 F03D          	movff	prodh,btemp+7
  2260  000286  0241               	mulwf	(btemp+11)^0,c
  2261  000288  50F3               	movf	prodl,w,c
  2262  00028A  263D               	addwf	(btemp+7)^0,f,c
  2263  00028C  0E12               	movlw	low _READY_QUEUE
  2264  00028E  6E40               	movwf	(btemp+10)^0,c
  2265  000290  0E01               	movlw	high _READY_QUEUE
  2266  000292  6E41               	movwf	(btemp+11)^0,c
  2267  000294  0E0B               	movlw	11
  2268  000296  2640               	addwf	(btemp+10)^0,f,c
  2269  000298  0E00               	movlw	0
  2270  00029A  2241               	addwfc	(btemp+11)^0,f,c
  2271  00029C  503C               	movf	(btemp+6)^0,w,c
  2272  00029E  2640               	addwf	(btemp+10)^0,f,c
  2273  0002A0  503D               	movf	(btemp+7)^0,w,c
  2274  0002A2  2241               	addwfc	(btemp+11)^0,f,c
  2275  0002A4  503E               	movf	(btemp+8)^0,w,c
  2276  0002A6  2440               	addwf	(btemp+10)^0,w,c
  2277  0002A8  6ED9               	movwf	fsr2l,c
  2278  0002AA  503F               	movf	(btemp+9)^0,w,c
  2279  0002AC  2041               	addwfc	(btemp+11)^0,w,c
  2280  0002AE  6EDA               	movwf	fsr2h,c
  2281  0002B0  CFFD FFDE          	movff	tosl,postinc2	;volatile
  2282  0002B4  CFFE FFDE          	movff	tosh,postinc2	;volatile
  2283  0002B8  CFFF FFDE          	movff	tosu,postinc2	;volatile
  2284  0002BC  4A07               	infsnz	_index^0,f,c
  2285  0002BE  2A08               	incf	(_index+1)^0,f,c
  2286  0002C0  0006               	pop		;# 
  2287  0002C2  50FC               	movf	252,w,c	;volatile
  2288  0002C4  A4D8               	btfss	status,2,c
  2289  0002C6  EF67  F001         	goto	u67_21
  2290  0002CA  EF69  F001         	goto	u67_20
  2291  0002CE                     u67_21:
  2292  0002CE  EF2A  F001         	goto	l288
  2293  0002D2                     u67_20:
  2294  0002D2  EF82  F001         	goto	l1718
  2295  0002D6                     l1716:
  2296  0002D6  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  2297  0002DA  CFDE F040          	movff	postinc2,btemp+10
  2298  0002DE  CFDD F041          	movff	postdec2,btemp+11
  2299  0002E2  0E71               	movlw	113
  2300  0002E4  0240               	mulwf	(btemp+10)^0,c
  2301  0002E6  CFF3 F03E          	movff	prodl,btemp+8
  2302  0002EA  CFF4 F03F          	movff	prodh,btemp+9
  2303  0002EE  0241               	mulwf	(btemp+11)^0,c
  2304  0002F0  50F3               	movf	prodl,w,c
  2305  0002F2  263F               	addwf	(btemp+9)^0,f,c
  2306  0002F4  0E16               	movlw	low (_READY_QUEUE+4)
  2307  0002F6  243E               	addwf	(btemp+8)^0,w,c
  2308  0002F8  6ED9               	movwf	fsr2l,c
  2309  0002FA  0E01               	movlw	high (_READY_QUEUE+4)
  2310  0002FC  203F               	addwfc	(btemp+9)^0,w,c
  2311  0002FE  6EDA               	movwf	fsr2h,c
  2312  000300  0E03               	movlw	3
  2313  000302  6EDF               	movwf	indf2,c
  2314  000304                     l1718:
  2315  000304  8EF2               	bsf	242,7,c	;volatile
  2316  000306                     
  2317                           ;semaphore.c: 21:         RESTORE_CONTEXT();
  2318  000306  ECE0  F002         	call	_RESTORE_CONTEXT	;wreg free
  2319  00030A                     l1722:
  2320                           
  2321                           ;semaphore.c: 23:     (INTCONbits.GIE = 1);
  2322  00030A  8EF2               	bsf	242,7,c	;volatile
  2323  00030C                     
  2324                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2325  00030C  52E5               	movf	postdec1,f,c
  2326  00030E  52E5               	movf	postdec1,f,c
  2327  000310  0012               	return		;funcret
  2328  000312                     __end_of_sem_wait:
  2329                           	callstack 0
  2330                           
  2331 ;; *************** function _RESTORE_CONTEXT *****************
  2332 ;; Defined at:
  2333 ;;		line 125 in file "kernel.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  stack_size      2  [STACK] unsigned int 
  2338 ;;  task_running    2  [STACK] unsigned int 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1  [STACK] void 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2348 ;;      Params:         0       0       0       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0
  2351 ;;      Totals:         0       0       0       0       0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    8
  2355 ;; This function calls:
  2356 ;;		_scheduler
  2357 ;; This function is called by:
  2358 ;;		_ISR_timer
  2359 ;;		_sem_wait
  2360 ;;		_OS_delay
  2361 ;; This function uses a reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text17
  2365  0005C0                     __ptext17:
  2366                           	callstack 0
  2367  0005C0                     _RESTORE_CONTEXT:
  2368                           	callstack 0
  2369                           
  2370                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2371  0005C0  52E6               	movf	postinc1,f,c
  2372  0005C2  52E6               	movf	postinc1,f,c
  2373  0005C4  52E6               	movf	postinc1,f,c
  2374  0005C6  52E6               	movf	postinc1,f,c
  2375  0005C8                     
  2376                           ;kernel.c: 127:         (INTCONbits.GIE = 0);
  2377  0005C8  9EF2               	bcf	242,7,c	;volatile
  2378  0005CA                     
  2379                           ;kernel.c: 128:         READY_QUEUE.task_running = scheduler();
  2380  0005CA  ECD0  F00A         	call	_scheduler	;wreg free
  2381  0005CE  C036  F3B8         	movff	btemp,_READY_QUEUE+678
  2382  0005D2  C037  F3B9         	movff	btemp+1,_READY_QUEUE+679
  2383  0005D6                     
  2384                           ;kernel.c: 129:         u_int task_running = READY_QUEUE.task_running;
  2385                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2386  0005D6  0EFE               	movlw	-2
  2387  0005D8  C3B8  FFE3         	movff	_READY_QUEUE+678,plusw1
  2388  0005DC  0EFF               	movlw	-1
  2389  0005DE  C3B9  FFE3         	movff	_READY_QUEUE+679,plusw1
  2390  0005E2                     
  2391                           ;kernel.c: 130:         READY_QUEUE.QUEUE[task_running].task_state = RUNNING;
  2392                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2393  0005E2  0EFE               	movlw	-2
  2394  0005E4  CFE3 F040          	movff	plusw1,btemp+10
  2395  0005E8  0EFF               	movlw	-1
  2396  0005EA  CFE3 F041          	movff	plusw1,btemp+11
  2397  0005EE  0E71               	movlw	113
  2398  0005F0  0240               	mulwf	(btemp+10)^0,c
  2399  0005F2  CFF3 F03E          	movff	prodl,btemp+8
  2400  0005F6  CFF4 F03F          	movff	prodh,btemp+9
  2401  0005FA  0241               	mulwf	(btemp+11)^0,c
  2402  0005FC  50F3               	movf	prodl,w,c
  2403  0005FE  263F               	addwf	(btemp+9)^0,f,c
  2404  000600  0E16               	movlw	low (_READY_QUEUE+4)
  2405  000602  243E               	addwf	(btemp+8)^0,w,c
  2406  000604  6ED9               	movwf	fsr2l,c
  2407  000606  0E01               	movlw	high (_READY_QUEUE+4)
  2408  000608  203F               	addwfc	(btemp+9)^0,w,c
  2409  00060A  6EDA               	movwf	fsr2h,c
  2410  00060C  0E01               	movlw	1
  2411  00060E  6EDF               	movwf	indf2,c
  2412  000610                     
  2413                           ;kernel.c: 131:         STKPTR = 0;
  2414  000610  6AFC               	clrf	252,c	;volatile
  2415  000612                     
  2416                           ;kernel.c: 132:         if(READY_QUEUE.QUEUE[task_running].task_context.stack_size > 0) 
      +                          {
  2417                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2418  000612  0EFE               	movlw	-2
  2419  000614  CFE3 F040          	movff	plusw1,btemp+10
  2420  000618  0EFF               	movlw	-1
  2421  00061A  CFE3 F041          	movff	plusw1,btemp+11
  2422  00061E  0E71               	movlw	113
  2423  000620  0240               	mulwf	(btemp+10)^0,c
  2424  000622  CFF3 F03E          	movff	prodl,btemp+8
  2425  000626  CFF4 F03F          	movff	prodh,btemp+9
  2426  00062A  0241               	mulwf	(btemp+11)^0,c
  2427  00062C  50F3               	movf	prodl,w,c
  2428  00062E  263F               	addwf	(btemp+9)^0,f,c
  2429  000630  0E7D               	movlw	low (_READY_QUEUE+107)
  2430  000632  243E               	addwf	(btemp+8)^0,w,c
  2431  000634  6ED9               	movwf	fsr2l,c
  2432  000636  0E01               	movlw	high (_READY_QUEUE+107)
  2433  000638  203F               	addwfc	(btemp+9)^0,w,c
  2434  00063A  6EDA               	movwf	fsr2h,c
  2435  00063C  50DE               	movf	postinc2,w,c
  2436  00063E  10DE               	iorwf	postinc2,w,c
  2437  000640  B4D8               	btfsc	status,2,c
  2438  000642  EF25  F003         	goto	u69_21
  2439  000646  EF27  F003         	goto	u69_20
  2440  00064A                     u69_21:
  2441  00064A  EFE4  F003         	goto	l185
  2442  00064E                     u69_20:
  2443  00064E                     
  2444                           ;kernel.c: 133:             BSR = READY_QUEUE.QUEUE[task_running].task_context.BSR_reg;
  2445                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2446  00064E  0EFE               	movlw	-2
  2447  000650  CFE3 F040          	movff	plusw1,btemp+10
  2448  000654  0EFF               	movlw	-1
  2449  000656  CFE3 F041          	movff	plusw1,btemp+11
  2450  00065A  0E71               	movlw	113
  2451  00065C  0240               	mulwf	(btemp+10)^0,c
  2452  00065E  CFF3 F03E          	movff	prodl,btemp+8
  2453  000662  CFF4 F03F          	movff	prodh,btemp+9
  2454  000666  0241               	mulwf	(btemp+11)^0,c
  2455  000668  50F3               	movf	prodl,w,c
  2456  00066A  263F               	addwf	(btemp+9)^0,f,c
  2457  00066C  0E1B               	movlw	low (_READY_QUEUE+9)
  2458  00066E  243E               	addwf	(btemp+8)^0,w,c
  2459  000670  6ED9               	movwf	fsr2l,c
  2460  000672  0E01               	movlw	high (_READY_QUEUE+9)
  2461  000674  203F               	addwfc	(btemp+9)^0,w,c
  2462  000676  6EDA               	movwf	fsr2h,c
  2463  000678  50DF               	movf	indf2,w,c
  2464  00067A  6EE0               	movwf	224,c	;volatile
  2465                           
  2466                           ;kernel.c: 134:             STATUS = READY_QUEUE.QUEUE[task_running].task_context.STATUS
      +                          _reg;
  2467                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2468  00067C  0EFE               	movlw	-2
  2469  00067E  CFE3 F040          	movff	plusw1,btemp+10
  2470  000682  0EFF               	movlw	-1
  2471  000684  CFE3 F041          	movff	plusw1,btemp+11
  2472  000688  0E71               	movlw	113
  2473  00068A  0240               	mulwf	(btemp+10)^0,c
  2474  00068C  CFF3 F03E          	movff	prodl,btemp+8
  2475  000690  CFF4 F03F          	movff	prodh,btemp+9
  2476  000694  0241               	mulwf	(btemp+11)^0,c
  2477  000696  50F3               	movf	prodl,w,c
  2478  000698  263F               	addwf	(btemp+9)^0,f,c
  2479  00069A  0E17               	movlw	low (_READY_QUEUE+5)
  2480  00069C  243E               	addwf	(btemp+8)^0,w,c
  2481  00069E  6ED9               	movwf	fsr2l,c
  2482  0006A0  0E01               	movlw	high (_READY_QUEUE+5)
  2483  0006A2  203F               	addwfc	(btemp+9)^0,w,c
  2484  0006A4  6EDA               	movwf	fsr2h,c
  2485  0006A6  50DF               	movf	indf2,w,c
  2486  0006A8  6ED8               	movwf	216,c	;volatile
  2487                           
  2488                           ;kernel.c: 135:             WREG = READY_QUEUE.QUEUE[task_running].task_context.WORK_reg
      +                          ;
  2489                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2490  0006AA  0EFE               	movlw	-2
  2491  0006AC  CFE3 F040          	movff	plusw1,btemp+10
  2492  0006B0  0EFF               	movlw	-1
  2493  0006B2  CFE3 F041          	movff	plusw1,btemp+11
  2494  0006B6  0E71               	movlw	113
  2495  0006B8  0240               	mulwf	(btemp+10)^0,c
  2496  0006BA  CFF3 F03E          	movff	prodl,btemp+8
  2497  0006BE  CFF4 F03F          	movff	prodh,btemp+9
  2498  0006C2  0241               	mulwf	(btemp+11)^0,c
  2499  0006C4  50F3               	movf	prodl,w,c
  2500  0006C6  263F               	addwf	(btemp+9)^0,f,c
  2501  0006C8  0E19               	movlw	low (_READY_QUEUE+7)
  2502  0006CA  243E               	addwf	(btemp+8)^0,w,c
  2503  0006CC  6ED9               	movwf	fsr2l,c
  2504  0006CE  0E01               	movlw	high (_READY_QUEUE+7)
  2505  0006D0  203F               	addwfc	(btemp+9)^0,w,c
  2506  0006D2  6EDA               	movwf	fsr2h,c
  2507  0006D4  50DF               	movf	indf2,w,c
  2508  0006D6  6E41               	movwf	(btemp+11)^0,c
  2509  0006D8  5041               	movf	(btemp+11)^0,w,c
  2510                           
  2511                           ;kernel.c: 136:             u_int stack_size = READY_QUEUE.QUEUE[task_running].task_cont
      +                          ext.stack_size;
  2512                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2513  0006DA  0EFE               	movlw	-2
  2514  0006DC  CFE3 F040          	movff	plusw1,btemp+10
  2515  0006E0  0EFF               	movlw	-1
  2516  0006E2  CFE3 F041          	movff	plusw1,btemp+11
  2517  0006E6  0E71               	movlw	113
  2518  0006E8  0240               	mulwf	(btemp+10)^0,c
  2519  0006EA  CFF3 F03E          	movff	prodl,btemp+8
  2520  0006EE  CFF4 F03F          	movff	prodh,btemp+9
  2521  0006F2  0241               	mulwf	(btemp+11)^0,c
  2522  0006F4  50F3               	movf	prodl,w,c
  2523  0006F6  263F               	addwf	(btemp+9)^0,f,c
  2524  0006F8  0E7D               	movlw	low (_READY_QUEUE+107)
  2525  0006FA  243E               	addwf	(btemp+8)^0,w,c
  2526  0006FC  6ED9               	movwf	fsr2l,c
  2527  0006FE  0E01               	movlw	high (_READY_QUEUE+107)
  2528  000700  203F               	addwfc	(btemp+9)^0,w,c
  2529  000702  6EDA               	movwf	fsr2h,c
  2530  000704  CFDE F040          	movff	postinc2,btemp+10
  2531  000708  CFDD F041          	movff	postdec2,btemp+11
  2532                           
  2533                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2534  00070C  0EFC               	movlw	-4
  2535  00070E  C040  FFE3         	movff	btemp+10,plusw1
  2536  000712  0EFD               	movlw	-3
  2537  000714  C041  FFE3         	movff	btemp+11,plusw1
  2538                           
  2539                           ;kernel.c: 137:             while (stack_size) {
  2540  000718  EFD5  F003         	goto	l1770
  2541  00071C                     l187:
  2542  00071C  0005               	push		;# 
  2543  00071E                     
  2544                           ;kernel.c: 139:                 TOS = READY_QUEUE.QUEUE[task_running].task_context.STACK
      +                          _regs[stack_size-1];
  2545                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2546  00071E  0EFC               	movlw	-4
  2547  000720  CFE3 F040          	movff	plusw1,btemp+10
  2548  000724  0EFD               	movlw	-3
  2549  000726  CFE3 F041          	movff	plusw1,btemp+11
  2550  00072A  0E03               	movlw	3
  2551  00072C  0240               	mulwf	(btemp+10)^0,c
  2552  00072E  CFF3 F03E          	movff	prodl,btemp+8
  2553  000732  CFF4 F03F          	movff	prodh,btemp+9
  2554  000736  0241               	mulwf	(btemp+11)^0,c
  2555  000738  50F3               	movf	prodl,w,c
  2556  00073A  263F               	addwf	(btemp+9)^0,f,c
  2557                           
  2558                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2559  00073C  0EFE               	movlw	-2
  2560  00073E  CFE3 F040          	movff	plusw1,btemp+10
  2561  000742  0EFF               	movlw	-1
  2562  000744  CFE3 F041          	movff	plusw1,btemp+11
  2563  000748  0E71               	movlw	113
  2564  00074A  0240               	mulwf	(btemp+10)^0,c
  2565  00074C  CFF3 F03C          	movff	prodl,btemp+6
  2566  000750  CFF4 F03D          	movff	prodh,btemp+7
  2567  000754  0241               	mulwf	(btemp+11)^0,c
  2568  000756  50F3               	movf	prodl,w,c
  2569  000758  263D               	addwf	(btemp+7)^0,f,c
  2570  00075A  0E12               	movlw	low _READY_QUEUE
  2571  00075C  6E40               	movwf	(btemp+10)^0,c
  2572  00075E  0E01               	movlw	high _READY_QUEUE
  2573  000760  6E41               	movwf	(btemp+11)^0,c
  2574  000762  0E08               	movlw	8
  2575  000764  2640               	addwf	(btemp+10)^0,f,c
  2576  000766  0E00               	movlw	0
  2577  000768  2241               	addwfc	(btemp+11)^0,f,c
  2578  00076A  503C               	movf	(btemp+6)^0,w,c
  2579  00076C  2640               	addwf	(btemp+10)^0,f,c
  2580  00076E  503D               	movf	(btemp+7)^0,w,c
  2581  000770  2241               	addwfc	(btemp+11)^0,f,c
  2582  000772  503E               	movf	(btemp+8)^0,w,c
  2583  000774  2440               	addwf	(btemp+10)^0,w,c
  2584  000776  6ED9               	movwf	fsr2l,c
  2585  000778  503F               	movf	(btemp+9)^0,w,c
  2586  00077A  2041               	addwfc	(btemp+11)^0,w,c
  2587  00077C  6EDA               	movwf	fsr2h,c
  2588  00077E  CFDE FFFD          	movff	postinc2,tosl	;volatile
  2589  000782  CFDE FFFE          	movff	postinc2,tosh	;volatile
  2590  000786  CFDD FFFF          	movff	postdec2,tosu	;volatile
  2591  00078A                     
  2592                           ;kernel.c: 140:                 stack_size--;
  2593                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2594  00078A  0EFC               	movlw	-4
  2595  00078C  CFE3 F036          	movff	plusw1,btemp
  2596  000790  0E01               	movlw	1
  2597  000792  5E36               	subwf	btemp^0,f,c
  2598  000794  0EFC               	movlw	-4
  2599  000796  C036  FFE3         	movff	btemp,plusw1
  2600  00079A  0EFD               	movlw	-3
  2601  00079C  CFE3 F036          	movff	plusw1,btemp
  2602  0007A0  0E00               	movlw	0
  2603  0007A2  5A36               	subwfb	btemp^0,f,c
  2604  0007A4  0EFD               	movlw	-3
  2605  0007A6  C036  FFE3         	movff	btemp,plusw1
  2606  0007AA                     l1770:
  2607                           
  2608                           ;kernel.c: 137:             while (stack_size) {
  2609                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2610  0007AA  0EFC               	movlw	-4
  2611  0007AC  CFE3 F036          	movff	plusw1,btemp
  2612  0007B0  0EFD               	movlw	-3
  2613  0007B2  50E3               	movf	plusw1,w,c
  2614  0007B4  1036               	iorwf	btemp^0,w,c
  2615  0007B6  A4D8               	btfss	status,2,c
  2616  0007B8  EFE0  F003         	goto	u70_21
  2617  0007BC  EFE2  F003         	goto	u70_20
  2618  0007C0                     u70_21:
  2619  0007C0  EF8E  F003         	goto	l187
  2620  0007C4                     u70_20:
  2621  0007C4  EF03  F004         	goto	l1774
  2622  0007C8                     l185:
  2623  0007C8  0005               	push		;# 
  2624  0007CA                     
  2625                           ;kernel.c: 145:             TOS = READY_QUEUE.QUEUE[task_running].task_func;
  2626                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2627  0007CA  0EFE               	movlw	-2
  2628  0007CC  CFE3 F040          	movff	plusw1,btemp+10
  2629  0007D0  0EFF               	movlw	-1
  2630  0007D2  CFE3 F041          	movff	plusw1,btemp+11
  2631  0007D6  0E71               	movlw	113
  2632  0007D8  0240               	mulwf	(btemp+10)^0,c
  2633  0007DA  CFF3 F03E          	movff	prodl,btemp+8
  2634  0007DE  CFF4 F03F          	movff	prodh,btemp+9
  2635  0007E2  0241               	mulwf	(btemp+11)^0,c
  2636  0007E4  50F3               	movf	prodl,w,c
  2637  0007E6  263F               	addwf	(btemp+9)^0,f,c
  2638  0007E8  0E7F               	movlw	low (_READY_QUEUE+109)
  2639  0007EA  243E               	addwf	(btemp+8)^0,w,c
  2640  0007EC  6ED9               	movwf	fsr2l,c
  2641  0007EE  0E01               	movlw	high (_READY_QUEUE+109)
  2642  0007F0  203F               	addwfc	(btemp+9)^0,w,c
  2643  0007F2  6EDA               	movwf	fsr2h,c
  2644  0007F4  CFDE F040          	movff	postinc2,btemp+10
  2645  0007F8  CFDD F041          	movff	postdec2,btemp+11
  2646  0007FC  C040  FFFD         	movff	btemp+10,tosl	;volatile
  2647  000800  C041  FFFE         	movff	btemp+11,tosh	;volatile
  2648  000804  6AFF               	clrf	255,c	;volatile
  2649  000806                     l1774:
  2650                           
  2651                           ;kernel.c: 147:     (INTCONbits.GIE = 1);
  2652  000806  8EF2               	bsf	242,7,c	;volatile
  2653  000808                     
  2654                           ; _RESTORE_CONTEXT: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  2655  000808  52E5               	movf	postdec1,f,c
  2656  00080A  52E5               	movf	postdec1,f,c
  2657  00080C  52E5               	movf	postdec1,f,c
  2658  00080E  52E5               	movf	postdec1,f,c
  2659  000810  0012               	return		;funcret
  2660  000812                     __end_of_RESTORE_CONTEXT:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function _scheduler *****************
  2664 ;; Defined at:
  2665 ;;		line 11 in file "scheduler.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;		None
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  2  [STACK] unsigned int 
  2672 ;; Registers used:
  2673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2679 ;;      Params:         0       0       0       0       0       0       0
  2680 ;;      Locals:         0       0       0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0       0       0
  2682 ;;      Totals:         0       0       0       0       0       0       0
  2683 ;;Total ram usage:        0 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    7
  2686 ;; This function calls:
  2687 ;;		_ROUND_ROBIN_sched
  2688 ;; This function is called by:
  2689 ;;		_RESTORE_CONTEXT
  2690 ;; This function uses a reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text18
  2694  0015A0                     __ptext18:
  2695                           	callstack 0
  2696  0015A0                     _scheduler:
  2697                           	callstack 10
  2698  0015A0                     
  2699                           ;scheduler.c: 14:    return ROUND_ROBIN_sched();
  2700  0015A0  EC2A  F006         	call	_ROUND_ROBIN_sched	;wreg free
  2701  0015A4                     
  2702                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2703  0015A4  0012               	return		;funcret
  2704  0015A6                     __end_of_scheduler:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function _ROUND_ROBIN_sched *****************
  2708 ;; Defined at:
  2709 ;;		line 20 in file "scheduler.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  task_selecte    2  [STACK] unsigned int 
  2714 ;;  try             2  [STACK] unsigned int 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2  [STACK] unsigned int 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2724 ;;      Params:         0       0       0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0
  2727 ;;      Totals:         0       0       0       0       0       0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    6
  2731 ;; This function calls:
  2732 ;;		___lwmod
  2733 ;; This function is called by:
  2734 ;;		_scheduler
  2735 ;; This function uses a reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text19
  2739  000C54                     __ptext19:
  2740                           	callstack 0
  2741  000C54                     _ROUND_ROBIN_sched:
  2742                           	callstack 0
  2743                           
  2744                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2745  000C54  52E6               	movf	postinc1,f,c
  2746  000C56  52E6               	movf	postinc1,f,c
  2747  000C58  52E6               	movf	postinc1,f,c
  2748  000C5A  52E6               	movf	postinc1,f,c
  2749  000C5C                     
  2750                           ;scheduler.c: 22:    u_int task_selected = READY_QUEUE.task_running, try = 0;
  2751                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2752  000C5C  0EFC               	movlw	-4
  2753  000C5E  C3B8  FFE3         	movff	_READY_QUEUE+678,plusw1
  2754  000C62  0EFD               	movlw	-3
  2755  000C64  C3B9  FFE3         	movff	_READY_QUEUE+679,plusw1
  2756                           
  2757                           ;stkvar	ROUND_ROBIN_sched@try @ sp[(-4)+2]
  2758  000C68  0EFE               	movlw	-2
  2759  000C6A  6AE3               	clrf	plusw1,c
  2760  000C6C  0EFF               	movlw	-1
  2761  000C6E  6AE3               	clrf	plusw1,c
  2762  000C70                     l1640:
  2763                           
  2764                           ;scheduler.c: 25:       task_selected = (task_selected+1) % READY_QUEUE.nr_of_tasks;
  2765  000C70  EE23  F0BA         	lfsr	2,_READY_QUEUE+680
  2766  000C74  CFDE F040          	movff	postinc2,btemp+10
  2767  000C78  CFDD F041          	movff	postdec2,btemp+11
  2768  000C7C  C040  FFE6         	movff	btemp+10,postinc1
  2769  000C80  C041  FFE6         	movff	btemp+11,postinc1
  2770                           
  2771                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-6)+0]
  2772  000C84  0EFA               	movlw	-6
  2773  000C86  50E3               	movf	plusw1,w,c
  2774  000C88  0F01               	addlw	1
  2775  000C8A  6E40               	movwf	(btemp+10)^0,c
  2776  000C8C  0EFB               	movlw	-5
  2777  000C8E  CFE3 F041          	movff	plusw1,btemp+11
  2778  000C92  0E00               	movlw	0
  2779  000C94  2241               	addwfc	(btemp+11)^0,f,c
  2780  000C96  C040  FFE6         	movff	btemp+10,postinc1
  2781  000C9A  C041  FFE6         	movff	btemp+11,postinc1
  2782  000C9E  ECD4  F007         	call	___lwmod	;wreg free
  2783                           
  2784                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2785  000CA2  0EFC               	movlw	-4
  2786  000CA4  C036  FFE3         	movff	btemp,plusw1
  2787  000CA8  0EFD               	movlw	-3
  2788  000CAA  C037  FFE3         	movff	btemp+1,plusw1
  2789  000CAE                     
  2790                           ;scheduler.c: 26:       if (try == READY_QUEUE.nr_of_tasks) {
  2791                           ;stkvar	ROUND_ROBIN_sched@try @ sp[(-4)+2]
  2792  000CAE  EE23  F0BA         	lfsr	2,_READY_QUEUE+680
  2793  000CB2  0EFE               	movlw	-2
  2794  000CB4  50E3               	movf	plusw1,w,c
  2795  000CB6  18DE               	xorwf	postinc2,w,c
  2796  000CB8  E108               	bnz	u61_21
  2797  000CBA  0EFF               	movlw	-1
  2798  000CBC  50E3               	movf	plusw1,w,c
  2799  000CBE  18DE               	xorwf	postinc2,w,c
  2800  000CC0  A4D8               	btfss	status,2,c
  2801  000CC2  EF65  F006         	goto	u61_21
  2802  000CC6  EF67  F006         	goto	u61_20
  2803  000CCA                     u61_21:
  2804  000CCA  EF6D  F006         	goto	l1648
  2805  000CCE                     u61_20:
  2806  000CCE                     
  2807                           ;scheduler.c: 27:          return 0;
  2808  000CCE  0E00               	movlw	0
  2809  000CD0  6E36               	movwf	btemp^0,c
  2810  000CD2  0E00               	movlw	0
  2811  000CD4  6E37               	movwf	(btemp+1)^0,c
  2812  000CD6  EFC0  F006         	goto	l51
  2813  000CDA                     l1648:
  2814                           
  2815                           ;scheduler.c: 29:       try++;
  2816                           ;stkvar	ROUND_ROBIN_sched@try @ sp[(-4)+2]
  2817  000CDA  0EFE               	movlw	-2
  2818  000CDC  50E3               	movf	plusw1,w,c
  2819  000CDE  0F01               	addlw	1
  2820  000CE0  6E36               	movwf	btemp^0,c
  2821  000CE2  0EFE               	movlw	-2
  2822  000CE4  C036  FFE3         	movff	btemp,plusw1
  2823  000CE8  6A36               	clrf	btemp^0,c
  2824  000CEA  0EFF               	movlw	-1
  2825  000CEC  50E3               	movf	plusw1,w,c
  2826  000CEE  2036               	addwfc	btemp^0,w,c
  2827  000CF0  6E36               	movwf	btemp^0,c
  2828  000CF2  0EFF               	movlw	-1
  2829  000CF4  C036  FFE3         	movff	btemp,plusw1
  2830  000CF8                     
  2831                           ;scheduler.c: 30:    } while (READY_QUEUE.QUEUE[task_selected].task_state != READY ||
  2832                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2833  000CF8  0EFC               	movlw	-4
  2834  000CFA  CFE3 F040          	movff	plusw1,btemp+10
  2835  000CFE  0EFD               	movlw	-3
  2836  000D00  CFE3 F041          	movff	plusw1,btemp+11
  2837  000D04  0E71               	movlw	113
  2838  000D06  0240               	mulwf	(btemp+10)^0,c
  2839  000D08  CFF3 F03E          	movff	prodl,btemp+8
  2840  000D0C  CFF4 F03F          	movff	prodh,btemp+9
  2841  000D10  0241               	mulwf	(btemp+11)^0,c
  2842  000D12  50F3               	movf	prodl,w,c
  2843  000D14  263F               	addwf	(btemp+9)^0,f,c
  2844  000D16  0E16               	movlw	low (_READY_QUEUE+4)
  2845  000D18  243E               	addwf	(btemp+8)^0,w,c
  2846  000D1A  6ED9               	movwf	fsr2l,c
  2847  000D1C  0E01               	movlw	high (_READY_QUEUE+4)
  2848  000D1E  203F               	addwfc	(btemp+9)^0,w,c
  2849  000D20  6EDA               	movwf	fsr2h,c
  2850  000D22  50DF               	movf	indf2,w,c
  2851  000D24  A4D8               	btfss	status,2,c
  2852  000D26  EF97  F006         	goto	u62_21
  2853  000D2A  EF99  F006         	goto	u62_20
  2854  000D2E                     u62_21:
  2855  000D2E  EF38  F006         	goto	l1640
  2856  000D32                     u62_20:
  2857  000D32                     
  2858                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2859  000D32  0EFC               	movlw	-4
  2860  000D34  CFE3 F040          	movff	plusw1,btemp+10
  2861  000D38  0EFD               	movlw	-3
  2862  000D3A  CFE3 F041          	movff	plusw1,btemp+11
  2863  000D3E  0E71               	movlw	113
  2864  000D40  0240               	mulwf	(btemp+10)^0,c
  2865  000D42  CFF3 F03E          	movff	prodl,btemp+8
  2866  000D46  CFF4 F03F          	movff	prodh,btemp+9
  2867  000D4A  0241               	mulwf	(btemp+11)^0,c
  2868  000D4C  50F3               	movf	prodl,w,c
  2869  000D4E  263F               	addwf	(btemp+9)^0,f,c
  2870  000D50  0E7F               	movlw	low (_READY_QUEUE+109)
  2871  000D52  243E               	addwf	(btemp+8)^0,w,c
  2872  000D54  6ED9               	movwf	fsr2l,c
  2873  000D56  0E01               	movlw	high (_READY_QUEUE+109)
  2874  000D58  203F               	addwfc	(btemp+9)^0,w,c
  2875  000D5A  6EDA               	movwf	fsr2h,c
  2876  000D5C  0EDE               	movlw	low _idle
  2877  000D5E  18DE               	xorwf	postinc2,w,c
  2878  000D60  E109               	bnz	u63_20
  2879  000D62  0E14               	movlw	high _idle
  2880  000D64  18DE               	xorwf	postinc2,w,c
  2881  000D66  B4D8               	btfsc	status,2,c
  2882  000D68  EFB8  F006         	goto	u63_21
  2883  000D6C  EFBA  F006         	goto	u63_20
  2884  000D70                     u63_21:
  2885  000D70  EF38  F006         	goto	l1640
  2886  000D74                     u63_20:
  2887  000D74                     
  2888                           ;scheduler.c: 33:    return task_selected;
  2889                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2890  000D74  0EFC               	movlw	-4
  2891  000D76  CFE3 F036          	movff	plusw1,btemp
  2892  000D7A  0EFD               	movlw	-3
  2893  000D7C  CFE3 F037          	movff	plusw1,btemp+1
  2894  000D80                     l51:
  2895                           
  2896                           ; _ROUND_ROBIN_sched: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  2897  000D80  52E5               	movf	postdec1,f,c
  2898  000D82  52E5               	movf	postdec1,f,c
  2899  000D84  52E5               	movf	postdec1,f,c
  2900  000D86  52E5               	movf	postdec1,f,c
  2901  000D88  0012               	return		;funcret
  2902  000D8A                     __end_of_ROUND_ROBIN_sched:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _sem_post *****************
  2906 ;; Defined at:
  2907 ;;		line 26 in file "semaphore.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  s               2  [STACK] PTR struct semaphore
  2910 ;;		 -> pipe_temperature(26), 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1  [STACK] void 
  2915 ;; Registers used:
  2916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2922 ;;      Params:         0       0       0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    6
  2929 ;; This function calls:
  2930 ;;		___lwmod
  2931 ;; This function is called by:
  2932 ;;		_pipe_read
  2933 ;;		_pipe_write
  2934 ;; This function uses a reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text20
  2938  000D8A                     __ptext20:
  2939                           	callstack 0
  2940  000D8A                     _sem_post:
  2941                           	callstack 18
  2942  000D8A                     
  2943                           ;semaphore.c: 27:     (INTCONbits.GIE = 0);
  2944  000D8A  9EF2               	bcf	242,7,c	;volatile
  2945  000D8C                     
  2946                           ;semaphore.c: 28:     s->s_count++;
  2947                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2948  000D8C  0EFE               	movlw	-2
  2949  000D8E  CFE3 FFD9          	movff	plusw1,fsr2l
  2950  000D92  0EFF               	movlw	-1
  2951  000D94  CFE3 FFDA          	movff	plusw1,fsr2h
  2952  000D98  2ADE               	incf	postinc2,f,c
  2953  000D9A  0E00               	movlw	0
  2954  000D9C  22DD               	addwfc	postdec2,f,c
  2955  000D9E                     
  2956                           ;semaphore.c: 29:     if(s->s_count <= 0) {
  2957                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2958  000D9E  0EFE               	movlw	-2
  2959  000DA0  CFE3 FFD9          	movff	plusw1,fsr2l
  2960  000DA4  0EFF               	movlw	-1
  2961  000DA6  CFE3 FFDA          	movff	plusw1,fsr2h
  2962  000DAA  0E01               	movlw	1
  2963  000DAC  BEDB               	btfsc	plusw2,7,c
  2964  000DAE  EFE4  F006         	goto	u68_20
  2965  000DB2  0E01               	movlw	1
  2966  000DB4  50DB               	movf	plusw2,w,c
  2967  000DB6  E106               	bnz	u68_21
  2968  000DB8  04DE               	decf	postinc2,w,c
  2969  000DBA  B0D8               	btfsc	status,0,c
  2970  000DBC  EFE2  F006         	goto	u68_21
  2971  000DC0  EFE4  F006         	goto	u68_20
  2972  000DC4                     u68_21:
  2973  000DC4  EF57  F007         	goto	l1736
  2974  000DC8                     u68_20:
  2975  000DC8                     
  2976                           ;semaphore.c: 31:         READY_QUEUE.QUEUE[s->s_queue.TASKS[s->s_queue.queue_post_pos]]
      +                          .task_state = READY;
  2977                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2978  000DC8  0EFE               	movlw	-2
  2979  000DCA  CFE3 F040          	movff	plusw1,btemp+10
  2980  000DCE  0EFF               	movlw	-1
  2981  000DD0  CFE3 F041          	movff	plusw1,btemp+11
  2982  000DD4  0E10               	movlw	16
  2983  000DD6  2440               	addwf	(btemp+10)^0,w,c
  2984  000DD8  6ED9               	movwf	fsr2l,c
  2985  000DDA  0E00               	movlw	0
  2986  000DDC  2041               	addwfc	(btemp+11)^0,w,c
  2987  000DDE  6EDA               	movwf	fsr2h,c
  2988  000DE0  CFDE F040          	movff	postinc2,btemp+10
  2989  000DE4  CFDD F041          	movff	postdec2,btemp+11
  2990  000DE8  90D8               	bcf	status,0,c
  2991  000DEA  3440               	rlcf	(btemp+10)^0,w,c
  2992  000DEC  6E3E               	movwf	(btemp+8)^0,c
  2993  000DEE  3441               	rlcf	(btemp+11)^0,w,c
  2994  000DF0  6E3F               	movwf	(btemp+9)^0,c
  2995                           
  2996                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2997  000DF2  0EFE               	movlw	-2
  2998  000DF4  50E3               	movf	plusw1,w,c
  2999  000DF6  263E               	addwf	(btemp+8)^0,f,c
  3000  000DF8  0EFF               	movlw	-1
  3001  000DFA  50E3               	movf	plusw1,w,c
  3002  000DFC  223F               	addwfc	(btemp+9)^0,f,c
  3003  000DFE  0E02               	movlw	2
  3004  000E00  243E               	addwf	(btemp+8)^0,w,c
  3005  000E02  6ED9               	movwf	fsr2l,c
  3006  000E04  0E00               	movlw	0
  3007  000E06  203F               	addwfc	(btemp+9)^0,w,c
  3008  000E08  6EDA               	movwf	fsr2h,c
  3009  000E0A  CFDE F040          	movff	postinc2,btemp+10
  3010  000E0E  CFDD F041          	movff	postdec2,btemp+11
  3011  000E12  0E71               	movlw	113
  3012  000E14  0240               	mulwf	(btemp+10)^0,c
  3013  000E16  CFF3 F03E          	movff	prodl,btemp+8
  3014  000E1A  CFF4 F03F          	movff	prodh,btemp+9
  3015  000E1E  0241               	mulwf	(btemp+11)^0,c
  3016  000E20  50F3               	movf	prodl,w,c
  3017  000E22  263F               	addwf	(btemp+9)^0,f,c
  3018  000E24  0E16               	movlw	low (_READY_QUEUE+4)
  3019  000E26  243E               	addwf	(btemp+8)^0,w,c
  3020  000E28  6ED9               	movwf	fsr2l,c
  3021  000E2A  0E01               	movlw	high (_READY_QUEUE+4)
  3022  000E2C  203F               	addwfc	(btemp+9)^0,w,c
  3023  000E2E  6EDA               	movwf	fsr2h,c
  3024  000E30  0E00               	movlw	0
  3025  000E32  6EDF               	movwf	indf2,c
  3026  000E34                     
  3027                           ;semaphore.c: 32:         s->s_queue.queue_post_pos = (s->s_queue.queue_post_pos+1)%5;
  3028  000E34  0E05               	movlw	5
  3029  000E36  6EE6               	movwf	postinc1,c
  3030  000E38  0E00               	movlw	0
  3031  000E3A  6EE6               	movwf	postinc1,c
  3032                           
  3033                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  3034  000E3C  0EFC               	movlw	-4
  3035  000E3E  CFE3 F040          	movff	plusw1,btemp+10
  3036  000E42  0EFD               	movlw	-3
  3037  000E44  CFE3 F041          	movff	plusw1,btemp+11
  3038  000E48  0E10               	movlw	16
  3039  000E4A  2440               	addwf	(btemp+10)^0,w,c
  3040  000E4C  6ED9               	movwf	fsr2l,c
  3041  000E4E  0E00               	movlw	0
  3042  000E50  2041               	addwfc	(btemp+11)^0,w,c
  3043  000E52  6EDA               	movwf	fsr2h,c
  3044  000E54  CFDE F040          	movff	postinc2,btemp+10
  3045  000E58  CFDD F041          	movff	postdec2,btemp+11
  3046  000E5C  0E01               	movlw	1
  3047  000E5E  2640               	addwf	(btemp+10)^0,f,c
  3048  000E60  0E00               	movlw	0
  3049  000E62  2241               	addwfc	(btemp+11)^0,f,c
  3050  000E64  C040  FFE6         	movff	btemp+10,postinc1
  3051  000E68  C041  FFE6         	movff	btemp+11,postinc1
  3052  000E6C  ECD4  F007         	call	___lwmod	;wreg free
  3053                           
  3054                           ;stkvar	sem_post@s @ sp[(0)+-2]
  3055  000E70  0EFE               	movlw	-2
  3056  000E72  CFE3 F040          	movff	plusw1,btemp+10
  3057  000E76  0EFF               	movlw	-1
  3058  000E78  CFE3 F041          	movff	plusw1,btemp+11
  3059  000E7C  0E10               	movlw	16
  3060  000E7E  2440               	addwf	(btemp+10)^0,w,c
  3061  000E80  6ED9               	movwf	fsr2l,c
  3062  000E82  0E00               	movlw	0
  3063  000E84  2041               	addwfc	(btemp+11)^0,w,c
  3064  000E86  6EDA               	movwf	fsr2h,c
  3065  000E88  C036  FFDE         	movff	btemp,postinc2
  3066  000E8C  C037  FFDD         	movff	btemp+1,postdec2
  3067  000E90                     
  3068                           ;semaphore.c: 33:         s->s_queue.queue_size--;
  3069                           ;stkvar	sem_post@s @ sp[(0)+-2]
  3070  000E90  0EFE               	movlw	-2
  3071  000E92  CFE3 F040          	movff	plusw1,btemp+10
  3072  000E96  0EFF               	movlw	-1
  3073  000E98  CFE3 F041          	movff	plusw1,btemp+11
  3074  000E9C  0E0C               	movlw	12
  3075  000E9E  2440               	addwf	(btemp+10)^0,w,c
  3076  000EA0  6ED9               	movwf	fsr2l,c
  3077  000EA2  0E00               	movlw	0
  3078  000EA4  2041               	addwfc	(btemp+11)^0,w,c
  3079  000EA6  6EDA               	movwf	fsr2h,c
  3080  000EA8  06DE               	decf	postinc2,f,c
  3081  000EAA  0E00               	movlw	0
  3082  000EAC  5ADD               	subwfb	postdec2,f,c
  3083  000EAE                     l1736:
  3084                           
  3085                           ;semaphore.c: 35:     (INTCONbits.GIE = 1);
  3086  000EAE  8EF2               	bsf	242,7,c	;volatile
  3087  000EB0                     
  3088                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3089  000EB0  52E5               	movf	postdec1,f,c
  3090  000EB2  52E5               	movf	postdec1,f,c
  3091  000EB4  0012               	return		;funcret
  3092  000EB6                     __end_of_sem_post:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function ___lwmod *****************
  3096 ;; Defined at:
  3097 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwmod.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  dividend        2  [STACK] unsigned int 
  3100 ;;  divisor         2  [STACK] unsigned int 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  counter         1  [STACK] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  2  [STACK] unsigned int 
  3105 ;; Registers used:
  3106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3112 ;;      Params:         0       0       0       0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0
  3115 ;;      Totals:         0       0       0       0       0       0       0
  3116 ;;Total ram usage:        0 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    5
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_ROUND_ROBIN_sched
  3123 ;;		_sem_wait
  3124 ;;		_sem_post
  3125 ;;		_PRIORITY_sched
  3126 ;; This function uses a reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text21
  3130  000FA8                     __ptext21:
  3131                           	callstack 0
  3132  000FA8                     ___lwmod:
  3133                           	callstack 0
  3134                           
  3135                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3136  000FA8  52E6               	movf	postinc1,f,c
  3137  000FAA                     
  3138                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3139  000FAA  0EFB               	movlw	-5
  3140  000FAC  CFE3 F036          	movff	plusw1,btemp
  3141  000FB0  0EFC               	movlw	-4
  3142  000FB2  50E3               	movf	plusw1,w,c
  3143  000FB4  1036               	iorwf	btemp^0,w,c
  3144  000FB6  B4D8               	btfsc	status,2,c
  3145  000FB8  EFE0  F007         	goto	u57_21
  3146  000FBC  EFE2  F007         	goto	u57_20
  3147  000FC0                     u57_21:
  3148  000FC0  EF3D  F008         	goto	l1634
  3149  000FC4                     u57_20:
  3150  000FC4                     
  3151                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3152  000FC4  0EFF               	movlw	-1
  3153  000FC6  6AE3               	clrf	plusw1,c
  3154  000FC8  2AE3               	incf	plusw1,f,c
  3155  000FCA  EFF8  F007         	goto	l1624
  3156  000FCE                     l1620:
  3157                           
  3158                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3159  000FCE  0EFB               	movlw	-5
  3160  000FD0  50E3               	movf	plusw1,w,c
  3161  000FD2  90D8               	bcf	status,0,c
  3162  000FD4  34E8               	rlcf	wreg,w,c
  3163  000FD6  6E36               	movwf	btemp^0,c
  3164  000FD8  0EFB               	movlw	-5
  3165  000FDA  C036  FFE3         	movff	btemp,plusw1
  3166  000FDE  0EFC               	movlw	-4
  3167  000FE0  50E3               	movf	plusw1,w,c
  3168  000FE2  34E8               	rlcf	wreg,w,c
  3169  000FE4  6E36               	movwf	btemp^0,c
  3170  000FE6  0EFC               	movlw	-4
  3171  000FE8  C036  FFE3         	movff	btemp,plusw1
  3172  000FEC                     
  3173                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3174  000FEC  0EFF               	movlw	-1
  3175  000FEE  2AE3               	incf	plusw1,f,c
  3176  000FF0                     l1624:
  3177                           
  3178                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3179  000FF0  0EFC               	movlw	-4
  3180  000FF2  AEE3               	btfss	plusw1,7,c
  3181  000FF4  EFFE  F007         	goto	u58_21
  3182  000FF8  EF00  F008         	goto	u58_20
  3183  000FFC                     u58_21:
  3184  000FFC  EFE7  F007         	goto	l1620
  3185  001000                     u58_20:
  3186  001000                     l1626:
  3187                           
  3188                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3189  001000  0EFB               	movlw	-5
  3190  001002  CFE3 F040          	movff	plusw1,btemp+10
  3191  001006  0EFC               	movlw	-4
  3192  001008  CFE3 F041          	movff	plusw1,btemp+11
  3193                           
  3194                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3195  00100C  0EFD               	movlw	-3
  3196  00100E  CFE3 F03E          	movff	plusw1,btemp+8
  3197  001012  0EFE               	movlw	-2
  3198  001014  CFE3 F03F          	movff	plusw1,btemp+9
  3199  001018  5040               	movf	(btemp+10)^0,w,c
  3200  00101A  5C3E               	subwf	(btemp+8)^0,w,c
  3201  00101C  5041               	movf	(btemp+11)^0,w,c
  3202  00101E  583F               	subwfb	(btemp+9)^0,w,c
  3203  001020  A0D8               	btfss	status,0,c
  3204  001022  EF15  F008         	goto	u59_21
  3205  001026  EF17  F008         	goto	u59_20
  3206  00102A                     u59_21:
  3207  00102A  EF29  F008         	goto	l1630
  3208  00102E                     u59_20:
  3209  00102E                     
  3210                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3211                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3212  00102E  0EFD               	movlw	-3
  3213  001030  50E3               	movf	plusw1,w,c
  3214  001032  6E36               	movwf	btemp^0,c
  3215  001034  0EFB               	movlw	-5
  3216  001036  50E3               	movf	plusw1,w,c
  3217  001038  5E36               	subwf	btemp^0,f,c
  3218  00103A  0EFD               	movlw	-3
  3219  00103C  C036  FFE3         	movff	btemp,plusw1
  3220  001040  0EFE               	movlw	-2
  3221  001042  50E3               	movf	plusw1,w,c
  3222  001044  6E36               	movwf	btemp^0,c
  3223  001046  0EFC               	movlw	-4
  3224  001048  50E3               	movf	plusw1,w,c
  3225  00104A  5A36               	subwfb	btemp^0,f,c
  3226  00104C  0EFE               	movlw	-2
  3227  00104E  C036  FFE3         	movff	btemp,plusw1
  3228  001052                     l1630:
  3229                           
  3230                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3231  001052  90D8               	bcf	status,0,c
  3232  001054  0EFC               	movlw	-4
  3233  001056  32E3               	rrcf	plusw1,f,c
  3234  001058  0EFB               	movlw	-5
  3235  00105A  32E3               	rrcf	plusw1,f,c
  3236  00105C                     
  3237                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3238  00105C  0EFF               	movlw	-1
  3239  00105E  50E3               	movf	plusw1,w,c
  3240  001060  6E36               	movwf	btemp^0,c
  3241  001062  0E01               	movlw	1
  3242  001064  5E36               	subwf	btemp^0,f,c
  3243  001066  0EFF               	movlw	-1
  3244  001068  C036  FFE3         	movff	btemp,plusw1
  3245  00106C  A4D8               	btfss	status,2,c
  3246  00106E  EF3B  F008         	goto	u60_21
  3247  001072  EF3D  F008         	goto	u60_20
  3248  001076                     u60_21:
  3249  001076  EF00  F008         	goto	l1626
  3250  00107A                     u60_20:
  3251  00107A                     l1634:
  3252                           
  3253                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3254  00107A  0EFD               	movlw	-3
  3255  00107C  CFE3 F036          	movff	plusw1,btemp
  3256  001080  0EFE               	movlw	-2
  3257  001082  CFE3 F037          	movff	plusw1,btemp+1
  3258  001086                     
  3259                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  3260  001086  0EFB               	movlw	251
  3261  001088  26E1               	addwf	fsr1l,f,c
  3262  00108A  0EFF               	movlw	255
  3263  00108C  22E2               	addwfc	fsr1h,f,c
  3264  00108E  0012               	return		;funcret
  3265  001090                     __end_of___lwmod:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _sem_get_value *****************
  3269 ;; Defined at:
  3270 ;;		line 38 in file "semaphore.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  s              18  [STACK] struct semaphore
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  2  [STACK] int 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3284 ;;      Params:         0       0       0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0
  3287 ;;      Totals:         0       0       0       0       0       0       0
  3288 ;;Total ram usage:        0 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    5
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_pipe_read
  3295 ;;		_pipe_write
  3296 ;; This function uses a reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text22
  3300  001572                     __ptext22:
  3301                           	callstack 0
  3302  001572                     _sem_get_value:
  3303                           	callstack 19
  3304  001572                     
  3305                           ;semaphore.c: 39:     return s.s_count;
  3306                           ;stkvar	sem_get_value@s @ sp[(0)+-18]
  3307  001572  0EEE               	movlw	-18
  3308  001574  CFE3 F036          	movff	plusw1,btemp
  3309  001578  0EEF               	movlw	-17
  3310  00157A  CFE3 F037          	movff	plusw1,btemp+1
  3311  00157E                     
  3312                           ; _sem_get_value: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18
      +                          , argsize = 18, vargsize = 0
  3313  00157E  0EEE               	movlw	238
  3314  001580  26E1               	addwf	fsr1l,f,c
  3315  001582  0EFF               	movlw	255
  3316  001584  22E2               	addwfc	fsr1h,f,c
  3317  001586  0012               	return		;funcret
  3318  001588                     __end_of_sem_get_value:
  3319                           	callstack 0
  3320                           
  3321 ;; *************** function _ac_controller_1 *****************
  3322 ;; Defined at:
  3323 ;;		line 31 in file "user_tasks.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  room_tempera    2  [STACK] int 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1  [STACK] void 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3337 ;;      Params:         0       0       0       0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0
  3340 ;;      Totals:         0       0       0       0       0       0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:   11
  3344 ;; This function calls:
  3345 ;;		_pipe_read
  3346 ;;		_turn_off_ac
  3347 ;;		_turn_on_ac
  3348 ;; This function is called by:
  3349 ;;		_main
  3350 ;; This function uses a reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text23
  3354  0011B6                     __ptext23:
  3355                           	callstack 0
  3356  0011B6                     _ac_controller_1:
  3357                           	callstack 0
  3358                           
  3359                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3360  0011B6  52E6               	movf	postinc1,f,c
  3361  0011B8  52E6               	movf	postinc1,f,c
  3362  0011BA                     l228:
  3363  0011BA                     
  3364                           ;user_tasks.c: 35:       pipe_read(&pipe_temperature, &room_temperature);
  3365                           ;stkvar	ac_controller_1@room_temperature @ sp[(-2)+0]
  3366  0011BA  0EFE               	movlw	254
  3367  0011BC  24E1               	addwf	fsr1l,w,c
  3368  0011BE  6E36               	movwf	btemp^0,c
  3369  0011C0  0EFF               	movlw	255
  3370  0011C2  20E2               	addwfc	fsr1h,w,c
  3371  0011C4  6E37               	movwf	(btemp+1)^0,c
  3372  0011C6  C036  FFE6         	movff	btemp,postinc1
  3373  0011CA  C037  FFE6         	movff	btemp+1,postinc1
  3374  0011CE  0E0A               	movlw	low _pipe_temperature
  3375  0011D0  6EE6               	movwf	postinc1,c
  3376  0011D2  0E00               	movlw	high _pipe_temperature
  3377  0011D4  6EE6               	movwf	postinc1,c
  3378  0011D6  EC79  F005         	call	_pipe_read	;wreg free
  3379  0011DA                     
  3380                           ;user_tasks.c: 37:       if(room_temperature < (32 - 2)){
  3381                           ;stkvar	ac_controller_1@room_temperature @ sp[(-2)+0]
  3382  0011DA  0EFF               	movlw	-1
  3383  0011DC  BEE3               	btfsc	plusw1,7,c
  3384  0011DE  EF00  F009         	goto	u98_20
  3385  0011E2  0EFF               	movlw	-1
  3386  0011E4  50E3               	movf	plusw1,w,c
  3387  0011E6  E10A               	bnz	u98_21
  3388  0011E8  0EFE               	movlw	-2
  3389  0011EA  CFE3 F036          	movff	plusw1,btemp
  3390  0011EE  0E1E               	movlw	30
  3391  0011F0  5E36               	subwf	btemp^0,f,c
  3392  0011F2  B0D8               	btfsc	status,0,c
  3393  0011F4  EFFE  F008         	goto	u98_21
  3394  0011F8  EF00  F009         	goto	u98_20
  3395  0011FC                     u98_21:
  3396  0011FC  EF04  F009         	goto	l2026
  3397  001200                     u98_20:
  3398  001200                     
  3399                           ;user_tasks.c: 38:          turn_off_ac();
  3400  001200  ECD5  F00A         	call	_turn_off_ac	;wreg free
  3401                           
  3402                           ;user_tasks.c: 39:       }else if(room_temperature > (32 + 2)){
  3403  001204  EFDD  F008         	goto	l228
  3404  001208                     l2026:
  3405                           
  3406                           ;stkvar	ac_controller_1@room_temperature @ sp[(-2)+0]
  3407  001208  0EFF               	movlw	-1
  3408  00120A  BEE3               	btfsc	plusw1,7,c
  3409  00120C  EF15  F009         	goto	u99_21
  3410  001210  0EFF               	movlw	-1
  3411  001212  50E3               	movf	plusw1,w,c
  3412  001214  E10C               	bnz	u99_20
  3413  001216  0EFE               	movlw	-2
  3414  001218  CFE3 F036          	movff	plusw1,btemp
  3415  00121C  0E23               	movlw	35
  3416  00121E  5E36               	subwf	btemp^0,f,c
  3417  001220  A0D8               	btfss	status,0,c
  3418  001222  EF15  F009         	goto	u99_21
  3419  001226  EF17  F009         	goto	u99_20
  3420  00122A                     u99_21:
  3421  00122A  EFDD  F008         	goto	l228
  3422  00122E                     u99_20:
  3423  00122E                     
  3424                           ;user_tasks.c: 40:          turn_on_ac();
  3425  00122E  ECD3  F00A         	call	_turn_on_ac	;wreg free
  3426  001232  EFDD  F008         	goto	l228
  3427                           
  3428                           ; _ac_controller_1: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  3429  001236  52E5               	movf	postdec1,f,c
  3430  001238  52E5               	movf	postdec1,f,c
  3431  00123A  0012               	return		;funcret
  3432  00123C                     __end_of_ac_controller_1:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _turn_on_ac *****************
  3436 ;; Defined at:
  3437 ;;		line 9 in file "motores.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1  [STACK] void 
  3444 ;; Registers used:
  3445 ;;		None
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3451 ;;      Params:         0       0       0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    5
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_ac_controller_1
  3462 ;;		_ac_controller_2
  3463 ;; This function uses a reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text24
  3467  0015A6                     __ptext24:
  3468                           	callstack 0
  3469  0015A6                     _turn_on_ac:
  3470                           	callstack 20
  3471  0015A6                     
  3472                           ;motores.c: 10:     PORTDbits.RD0 = 1;
  3473  0015A6  8083               	bsf	131,0,c	;volatile
  3474  0015A8                     
  3475                           ; _turn_on_ac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3476  0015A8  0012               	return		;funcret
  3477  0015AA                     __end_of_turn_on_ac:
  3478                           	callstack 0
  3479                           
  3480 ;; *************** function _turn_off_ac *****************
  3481 ;; Defined at:
  3482 ;;		line 5 in file "motores.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1  [STACK] void 
  3489 ;; Registers used:
  3490 ;;		None
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3496 ;;      Params:         0       0       0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0
  3499 ;;      Totals:         0       0       0       0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    5
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_ac_controller_1
  3507 ;;		_ac_controller_2
  3508 ;; This function uses a reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text25
  3512  0015AA                     __ptext25:
  3513                           	callstack 0
  3514  0015AA                     _turn_off_ac:
  3515                           	callstack 20
  3516  0015AA                     
  3517                           ;motores.c: 6:     PORTDbits.RD0 = 0;
  3518  0015AA  9083               	bcf	131,0,c	;volatile
  3519  0015AC                     
  3520                           ; _turn_off_ac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  3521  0015AC  0012               	return		;funcret
  3522  0015AE                     __end_of_turn_off_ac:
  3523                           	callstack 0
  3524                           
  3525 ;; *************** function _pipe_read *****************
  3526 ;; Defined at:
  3527 ;;		line 10 in file "pipe.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  pipe            2  [STACK] PTR struct pipe
  3530 ;;		 -> pipe_temperature(26), 
  3531 ;;  dado            2  [STACK] PTR int 
  3532 ;;		 -> ac_controller_1@room_temperature(2), 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  read_flag       1  [STACK] unsigned char 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1  [STACK] void 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3544 ;;      Params:         0       0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:   10
  3551 ;; This function calls:
  3552 ;;		_sem_get_value
  3553 ;;		_sem_post
  3554 ;;		_sem_wait
  3555 ;; This function is called by:
  3556 ;;		_ac_controller_1
  3557 ;; This function uses a reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text26
  3561  000AF2                     __ptext26:
  3562                           	callstack 0
  3563  000AF2                     _pipe_read:
  3564                           	callstack 0
  3565                           
  3566                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3567  000AF2  52E6               	movf	postinc1,f,c
  3568  000AF4                     
  3569                           ;pipe.c: 11: (INTCONbits.GIE = 0);
  3570  000AF4  9EF2               	bcf	242,7,c	;volatile
  3571  000AF6                     
  3572                           ;pipe.c: 13:     bool read_flag = 0;
  3573                           ;stkvar	pipe_read@read_flag @ sp[(-1)+0]
  3574  000AF6  0EFF               	movlw	-1
  3575  000AF8  6AE3               	clrf	plusw1,c
  3576  000AFA                     l1816:
  3577                           
  3578                           ;pipe.c: 16:         if (pipe->size > 0){
  3579                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3580  000AFA  0EFD               	movlw	-3
  3581  000AFC  CFE3 F040          	movff	plusw1,btemp+10
  3582  000B00  0EFE               	movlw	-2
  3583  000B02  CFE3 F041          	movff	plusw1,btemp+11
  3584  000B06  0E02               	movlw	2
  3585  000B08  2440               	addwf	(btemp+10)^0,w,c
  3586  000B0A  6ED9               	movwf	fsr2l,c
  3587  000B0C  0E00               	movlw	0
  3588  000B0E  2041               	addwfc	(btemp+11)^0,w,c
  3589  000B10  6EDA               	movwf	fsr2h,c
  3590  000B12  50DE               	movf	postinc2,w,c
  3591  000B14  10DE               	iorwf	postinc2,w,c
  3592  000B16  B4D8               	btfsc	status,2,c
  3593  000B18  EF90  F005         	goto	u78_21
  3594  000B1C  EF92  F005         	goto	u78_20
  3595  000B20                     u78_21:
  3596  000B20  EF0B  F006         	goto	l318
  3597  000B24                     u78_20:
  3598  000B24                     
  3599                           ;pipe.c: 17:             *dado = pipe->msg[pipe->read_pos];
  3600                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3601  000B24  0EFD               	movlw	-3
  3602  000B26  CFE3 F040          	movff	plusw1,btemp+10
  3603  000B2A  0EFE               	movlw	-2
  3604  000B2C  CFE3 F041          	movff	plusw1,btemp+11
  3605  000B30  0E04               	movlw	4
  3606  000B32  2440               	addwf	(btemp+10)^0,w,c
  3607  000B34  6ED9               	movwf	fsr2l,c
  3608  000B36  0E00               	movlw	0
  3609  000B38  2041               	addwfc	(btemp+11)^0,w,c
  3610  000B3A  6EDA               	movwf	fsr2h,c
  3611  000B3C  CFDE F040          	movff	postinc2,btemp+10
  3612  000B40  CFDD F041          	movff	postdec2,btemp+11
  3613  000B44  90D8               	bcf	status,0,c
  3614  000B46  3440               	rlcf	(btemp+10)^0,w,c
  3615  000B48  6E3E               	movwf	(btemp+8)^0,c
  3616  000B4A  3441               	rlcf	(btemp+11)^0,w,c
  3617  000B4C  6E3F               	movwf	(btemp+9)^0,c
  3618                           
  3619                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3620  000B4E  0EFD               	movlw	-3
  3621  000B50  CFE3 F040          	movff	plusw1,btemp+10
  3622  000B54  0EFE               	movlw	-2
  3623  000B56  CFE3 F041          	movff	plusw1,btemp+11
  3624  000B5A  503E               	movf	(btemp+8)^0,w,c
  3625  000B5C  2440               	addwf	(btemp+10)^0,w,c
  3626  000B5E  6ED9               	movwf	fsr2l,c
  3627  000B60  503F               	movf	(btemp+9)^0,w,c
  3628  000B62  2041               	addwfc	(btemp+11)^0,w,c
  3629  000B64  6EDA               	movwf	fsr2h,c
  3630                           
  3631                           ;stkvar	pipe_read@dado @ sp[(-1)+-4]
  3632  000B66  0EFB               	movlw	-5
  3633  000B68  CFE3 FFE9          	movff	plusw1,fsr0l
  3634  000B6C  0EFC               	movlw	-4
  3635  000B6E  CFE3 FFEA          	movff	plusw1,fsr0h
  3636  000B72  CFDE FFEE          	movff	postinc2,postinc0
  3637  000B76  CFDD FFED          	movff	postdec2,postdec0
  3638  000B7A                     
  3639                           ;pipe.c: 18:             pipe->read_pos = (pipe->read_pos + 1) % 1;
  3640                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3641  000B7A  0EFD               	movlw	-3
  3642  000B7C  CFE3 F040          	movff	plusw1,btemp+10
  3643  000B80  0EFE               	movlw	-2
  3644  000B82  CFE3 F041          	movff	plusw1,btemp+11
  3645  000B86  0E04               	movlw	4
  3646  000B88  2440               	addwf	(btemp+10)^0,w,c
  3647  000B8A  6ED9               	movwf	fsr2l,c
  3648  000B8C  0E00               	movlw	0
  3649  000B8E  2041               	addwfc	(btemp+11)^0,w,c
  3650  000B90  6EDA               	movwf	fsr2h,c
  3651  000B92  0E00               	movlw	0
  3652  000B94  6EDE               	movwf	postinc2,c
  3653  000B96  0E00               	movlw	0
  3654  000B98  6EDD               	movwf	postdec2,c
  3655  000B9A                     
  3656                           ;pipe.c: 19:             pipe->size--;
  3657                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3658  000B9A  0EFD               	movlw	-3
  3659  000B9C  CFE3 F040          	movff	plusw1,btemp+10
  3660  000BA0  0EFE               	movlw	-2
  3661  000BA2  CFE3 F041          	movff	plusw1,btemp+11
  3662  000BA6  0E02               	movlw	2
  3663  000BA8  2440               	addwf	(btemp+10)^0,w,c
  3664  000BAA  6ED9               	movwf	fsr2l,c
  3665  000BAC  0E00               	movlw	0
  3666  000BAE  2041               	addwfc	(btemp+11)^0,w,c
  3667  000BB0  6EDA               	movwf	fsr2h,c
  3668  000BB2  06DE               	decf	postinc2,f,c
  3669  000BB4  0E00               	movlw	0
  3670  000BB6  5ADD               	subwfb	postdec2,f,c
  3671  000BB8                     
  3672                           ;pipe.c: 20:             read_flag = 1;
  3673                           ;stkvar	pipe_read@read_flag @ sp[(-1)+0]
  3674  000BB8  0EFF               	movlw	-1
  3675  000BBA  6AE3               	clrf	plusw1,c
  3676  000BBC  2AE3               	incf	plusw1,f,c
  3677  000BBE                     
  3678                           ;pipe.c: 21:             if(sem_get_value(pipe->sem) < 0){
  3679                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3680  000BBE  0EFD               	movlw	-3
  3681  000BC0  CFE3 F040          	movff	plusw1,btemp+10
  3682  000BC4  0EFE               	movlw	-2
  3683  000BC6  CFE3 F041          	movff	plusw1,btemp+11
  3684  000BCA  0E08               	movlw	8
  3685  000BCC  2440               	addwf	(btemp+10)^0,w,c
  3686  000BCE  6ED9               	movwf	fsr2l,c
  3687  000BD0  0E00               	movlw	0
  3688  000BD2  2041               	addwfc	(btemp+11)^0,w,c
  3689  000BD4  6EDA               	movwf	fsr2h,c
  3690  000BD6  0E12               	movlw	18
  3691  000BD8                     u79_21:
  3692  000BD8  CFDE FFE6          	movff	postinc2,postinc1
  3693  000BDC  2CE8               	decfsz	wreg,w,c
  3694  000BDE  EFEC  F005         	goto	u79_21
  3695  000BE2  ECB9  F00A         	call	_sem_get_value	;wreg free
  3696  000BE6  BE37               	btfsc	(btemp+1)^0,7,c
  3697  000BE8  EFFA  F005         	goto	u80_20
  3698  000BEC  EFF8  F005         	goto	u80_21
  3699  000BF0                     u80_21:
  3700  000BF0  EF1B  F006         	goto	l1832
  3701  000BF4                     u80_20:
  3702  000BF4                     
  3703                           ;pipe.c: 22:                 sem_post(&pipe->sem);
  3704                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3705  000BF4  0EFD               	movlw	-3
  3706  000BF6  50E3               	movf	plusw1,w,c
  3707  000BF8  0F08               	addlw	8
  3708  000BFA  6E40               	movwf	(btemp+10)^0,c
  3709  000BFC  0EFE               	movlw	-2
  3710  000BFE  CFE3 F041          	movff	plusw1,btemp+11
  3711  000C02  0E00               	movlw	0
  3712  000C04  2241               	addwfc	(btemp+11)^0,f,c
  3713  000C06  C040  FFE6         	movff	btemp+10,postinc1
  3714  000C0A  C041  FFE6         	movff	btemp+11,postinc1
  3715  000C0E  ECC5  F006         	call	_sem_post	;wreg free
  3716  000C12  EF1B  F006         	goto	l1832
  3717  000C16                     l318:
  3718                           
  3719                           ;pipe.c: 26:             (INTCONbits.GIE = 1);
  3720  000C16  8EF2               	bsf	242,7,c	;volatile
  3721  000C18                     
  3722                           ;pipe.c: 27:             sem_wait(&pipe->sem);
  3723                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3724  000C18  0EFD               	movlw	-3
  3725  000C1A  50E3               	movf	plusw1,w,c
  3726  000C1C  0F08               	addlw	8
  3727  000C1E  6E40               	movwf	(btemp+10)^0,c
  3728  000C20  0EFE               	movlw	-2
  3729  000C22  CFE3 F041          	movff	plusw1,btemp+11
  3730  000C26  0E00               	movlw	0
  3731  000C28  2241               	addwfc	(btemp+11)^0,f,c
  3732  000C2A  C040  FFE6         	movff	btemp+10,postinc1
  3733  000C2E  C041  FFE6         	movff	btemp+11,postinc1
  3734  000C32  EC0A  F000         	call	_sem_wait	;wreg free
  3735  000C36                     l1832:
  3736                           
  3737                           ;pipe.c: 29:     }while(!read_flag);
  3738                           ;stkvar	pipe_read@read_flag @ sp[(-1)+0]
  3739  000C36  0EFF               	movlw	-1
  3740  000C38  50E3               	movf	plusw1,w,c
  3741  000C3A  B4D8               	btfsc	status,2,c
  3742  000C3C  EF22  F006         	goto	u81_21
  3743  000C40  EF24  F006         	goto	u81_20
  3744  000C44                     u81_21:
  3745  000C44  EF7D  F005         	goto	l1816
  3746  000C48                     u81_20:
  3747  000C48                     
  3748                           ;pipe.c: 30:     (INTCONbits.GIE = 1);
  3749  000C48  8EF2               	bsf	242,7,c	;volatile
  3750  000C4A                     
  3751                           ; _pipe_read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3752  000C4A  0EFB               	movlw	251
  3753  000C4C  26E1               	addwf	fsr1l,f,c
  3754  000C4E  0EFF               	movlw	255
  3755  000C50  22E2               	addwfc	fsr1h,f,c
  3756  000C52  0012               	return		;funcret
  3757  000C54                     __end_of_pipe_read:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function _thermostat_sensing_2 *****************
  3761 ;; Defined at:
  3762 ;;		line 10 in file "user_tasks_2.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1  [STACK] void 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3776 ;;      Params:         0       0       0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0
  3779 ;;      Totals:         0       0       0       0       0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    7
  3783 ;; This function calls:
  3784 ;;		_thermostat_value
  3785 ;; This function is called by:
  3786 ;;		_main
  3787 ;; This function uses a reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text27
  3791  001534                     __ptext27:
  3792                           	callstack 0
  3793  001534                     _thermostat_sensing_2:
  3794                           	callstack 19
  3795  001534                     l375:
  3796  001534                     
  3797                           ;user_tasks_2.c: 13:    {;user_tasks_2.c: 14:       if(bsem_room_temperature == 0)
  3798  001534  5009               	movf	_bsem_room_temperature^0,w,c
  3799  001536  A4D8               	btfss	status,2,c
  3800  001538  EFA0  F00A         	goto	u53_21
  3801  00153C  EFA2  F00A         	goto	u53_20
  3802  001540                     u53_21:
  3803  001540  EF9A  F00A         	goto	l375
  3804  001544                     u53_20:
  3805  001544                     
  3806                           ;user_tasks_2.c: 15:       {;user_tasks_2.c: 17:          room_temperature = thermostat_
      +                          value();
  3807  001544  EC93  F008         	call	_thermostat_value	;wreg free
  3808  001548  C036  F001         	movff	btemp,_room_temperature
  3809  00154C  C037  F002         	movff	btemp+1,_room_temperature+1
  3810  001550                     
  3811                           ;user_tasks_2.c: 18:          bsem_room_temperature = 1;
  3812  001550  0E01               	movlw	1
  3813  001552  6E09               	movwf	_bsem_room_temperature^0,c
  3814  001554  EF9A  F00A         	goto	l375
  3815                           
  3816                           ; _thermostat_sensing_2: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3817  001558  0012               	return		;funcret
  3818  00155A                     __end_of_thermostat_sensing_2:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _ac_controller_2 *****************
  3822 ;; Defined at:
  3823 ;;		line 23 in file "user_tasks_2.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;		None
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1  [STACK] void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3837 ;;      Params:         0       0       0       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0
  3840 ;;      Totals:         0       0       0       0       0       0       0
  3841 ;;Total ram usage:        0 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    6
  3844 ;; This function calls:
  3845 ;;		_turn_off_ac
  3846 ;;		_turn_on_ac
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;; This function uses a reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text28
  3853  001300                     __ptext28:
  3854                           	callstack 0
  3855  001300                     _ac_controller_2:
  3856                           	callstack 20
  3857  001300                     l382:
  3858  001300                     
  3859                           ;user_tasks_2.c: 26:    {;user_tasks_2.c: 27:       if(bsem_room_temperature == 1)
  3860  001300  0409               	decf	_bsem_room_temperature^0,w,c
  3861  001302  A4D8               	btfss	status,2,c
  3862  001304  EF86  F009         	goto	u54_21
  3863  001308  EF88  F009         	goto	u54_20
  3864  00130C                     u54_21:
  3865  00130C  EF80  F009         	goto	l382
  3866  001310                     u54_20:
  3867  001310                     
  3868                           ;user_tasks_2.c: 28:       {;user_tasks_2.c: 29:          if(room_temperature >= (32 + 2
      +                          ))
  3869  001310  BE02               	btfsc	(_room_temperature+1)^0,7,c
  3870  001312  EF94  F009         	goto	u55_21
  3871  001316  5002               	movf	(_room_temperature+1)^0,w,c
  3872  001318  E109               	bnz	u55_20
  3873  00131A  0E22               	movlw	34
  3874  00131C  5C01               	subwf	_room_temperature^0,w,c
  3875  00131E  A0D8               	btfss	status,0,c
  3876  001320  EF94  F009         	goto	u55_21
  3877  001324  EF96  F009         	goto	u55_20
  3878  001328                     u55_21:
  3879  001328  EF98  F009         	goto	l1604
  3880  00132C                     u55_20:
  3881  00132C                     
  3882                           ;user_tasks_2.c: 30:          {;user_tasks_2.c: 31:             turn_on_ac();
  3883  00132C  ECD3  F00A         	call	_turn_on_ac	;wreg free
  3884  001330                     l1604:
  3885                           
  3886                           ;user_tasks_2.c: 34:          if(room_temperature <= (32 - 2))
  3887  001330  BE02               	btfsc	(_room_temperature+1)^0,7,c
  3888  001332  EFA6  F009         	goto	u56_20
  3889  001336  5002               	movf	(_room_temperature+1)^0,w,c
  3890  001338  E107               	bnz	u56_21
  3891  00133A  0E1F               	movlw	31
  3892  00133C  5C01               	subwf	_room_temperature^0,w,c
  3893  00133E  B0D8               	btfsc	status,0,c
  3894  001340  EFA4  F009         	goto	u56_21
  3895  001344  EFA6  F009         	goto	u56_20
  3896  001348                     u56_21:
  3897  001348  EFA8  F009         	goto	l385
  3898  00134C                     u56_20:
  3899  00134C                     
  3900                           ;user_tasks_2.c: 35:          {;user_tasks_2.c: 36:             turn_off_ac();
  3901  00134C  ECD5  F00A         	call	_turn_off_ac	;wreg free
  3902  001350                     l385:
  3903                           
  3904                           ;user_tasks_2.c: 39:          bsem_room_temperature = 0;
  3905  001350  6A09               	clrf	_bsem_room_temperature^0,c
  3906  001352  EF80  F009         	goto	l382
  3907                           
  3908                           ; _ac_controller_2: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  3909  001356  0012               	return		;funcret
  3910  001358                     __end_of_ac_controller_2:
  3911                           	callstack 0
  3912                           
  3913 ;; *************** function _ISR_timer *****************
  3914 ;; Defined at:
  3915 ;;		line 95 in file "kernel.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3929 ;;      Params:         0       0       0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0
  3931 ;;      Temps:         18       0       0       0       0       0       0
  3932 ;;      Totals:        18       0       0       0       0       0       0
  3933 ;;Total ram usage:       18 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    4
  3936 ;; This function calls:
  3937 ;;		_RESTORE_CONTEXT
  3938 ;;		___wmul
  3939 ;;		_delay_release
  3940 ;; This function is called by:
  3941 ;;		Interrupt level 2
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	intcode
  3946  000008                     __pintcode:
  3947                           	callstack 0
  3948  000008                     _ISR_timer:
  3949                           	callstack 15
  3950                           
  3951                           ;incstack = 0
  3952  000008  ED89  F001         	call	int_func,f	;refresh shadow registers
  3953                           
  3954                           	psect	intcode_body
  3955  000312                     __pintcode_body:
  3956                           	callstack 15
  3957  000312                     int_func:
  3958                           	callstack 15
  3959  000312  0006               	pop		; remove dummy address from shadow register refresh
  3960  000314  CFE1 F062          	movff	fsr1l,??_ISR_timer+4
  3961  000318  CFE2 F063          	movff	fsr1h,??_ISR_timer+5
  3962  00031C  CFD9 F064          	movff	fsr2l,??_ISR_timer+6
  3963  000320  CFDA F065          	movff	fsr2h,??_ISR_timer+7
  3964  000324  CFF3 F066          	movff	prodl,??_ISR_timer+8
  3965  000328  CFF4 F067          	movff	prodh,??_ISR_timer+9
  3966  00032C  C036  F068         	movff	btemp,??_ISR_timer+10
  3967  000330  C037  F069         	movff	btemp+1,??_ISR_timer+11
  3968  000334  C03C  F06A         	movff	btemp+6,??_ISR_timer+12
  3969  000338  C03D  F06B         	movff	btemp+7,??_ISR_timer+13
  3970  00033C  C03E  F06C         	movff	btemp+8,??_ISR_timer+14
  3971  000340  C03F  F06D         	movff	btemp+9,??_ISR_timer+15
  3972  000344  C040  F06E         	movff	btemp+10,??_ISR_timer+16
  3973  000348  C041  F06F         	movff	btemp+11,??_ISR_timer+17
  3974  00034C  EE14  F07E         	lfsr	1,___inthi_sp
  3975  000350                     
  3976                           ;kernel.c: 98:     TMR0L = 0;
  3977  000350  0E00               	movlw	0
  3978  000352  6ED6               	movwf	214,c	;volatile
  3979  000354                     
  3980                           ;kernel.c: 99:     INTCONbits.TMR0IF = 0;
  3981  000354  94F2               	bcf	242,2,c	;volatile
  3982  000356                     
  3983                           ;kernel.c: 100:     rr_quantum--;
  3984  000356  0670               	decf	_rr_quantum^0,f,c
  3985  000358  A0D8               	btfss	status,0,c
  3986  00035A  0671               	decf	(_rr_quantum+1)^0,f,c
  3987  00035C                     
  3988                           ;kernel.c: 102:     if (delay_release() && 1 == 2) {
  3989  00035C  EC5B  F007         	call	_delay_release	;wreg free
  3990  000360                     
  3991                           ;kernel.c: 113:         if(rr_quantum == 0){
  3992  000360  5070               	movf	_rr_quantum^0,w,c
  3993  000362  1071               	iorwf	(_rr_quantum+1)^0,w,c
  3994  000364  A4D8               	btfss	status,2,c
  3995  000366  EFB7  F001         	goto	i2u95_41
  3996  00036A  EFB9  F001         	goto	i2u95_40
  3997  00036E                     i2u95_41:
  3998  00036E  EFC3  F002         	goto	i2l181
  3999  000372                     i2u95_40:
  4000  000372                     
  4001                           ;kernel.c: 114:             rr_quantum = 8;
  4002  000372  0E00               	movlw	0
  4003  000374  6E71               	movwf	(_rr_quantum+1)^0,c
  4004  000376  0E08               	movlw	8
  4005  000378  6E70               	movwf	_rr_quantum^0,c
  4006  00037A  9EF2               	bcf	242,7,c	;volatile
  4007  00037C  0E71               	movlw	113
  4008  00037E  6EE6               	movwf	postinc1,c
  4009  000380  0E00               	movlw	0
  4010  000382  6EE6               	movwf	postinc1,c
  4011  000384  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  4012  000388  CFDE F05E          	movff	postinc2,??_ISR_timer
  4013  00038C  CFDD F05F          	movff	postdec2,??_ISR_timer+1
  4014  000390  C05E  FFE6         	movff	??_ISR_timer,postinc1
  4015  000394  C05F  FFE6         	movff	??_ISR_timer+1,postinc1
  4016  000398  EC48  F008         	call	___wmul	;wreg free
  4017  00039C  0E7D               	movlw	low (_READY_QUEUE+107)
  4018  00039E  2436               	addwf	btemp^0,w,c
  4019  0003A0  6ED9               	movwf	fsr2l,c
  4020  0003A2  0E01               	movlw	high (_READY_QUEUE+107)
  4021  0003A4  2037               	addwfc	(btemp+1)^0,w,c
  4022  0003A6  6EDA               	movwf	fsr2h,c
  4023  0003A8  50DE               	movf	postinc2,w,c
  4024  0003AA  10DE               	iorwf	postinc2,w,c
  4025  0003AC  B4D8               	btfsc	status,2,c
  4026  0003AE  EFDB  F001         	goto	i2u96_41
  4027  0003B2  EFDD  F001         	goto	i2u96_40
  4028  0003B6                     i2u96_41:
  4029  0003B6  EFA8  F002         	goto	i2l2010
  4030  0003BA                     i2u96_40:
  4031  0003BA  0E00               	movlw	0
  4032  0003BC  6E08               	movwf	(_index+1)^0,c
  4033  0003BE  0E00               	movlw	0
  4034  0003C0  6E07               	movwf	_index^0,c
  4035  0003C2  0E71               	movlw	113
  4036  0003C4  6EE6               	movwf	postinc1,c
  4037  0003C6  0E00               	movlw	0
  4038  0003C8  6EE6               	movwf	postinc1,c
  4039  0003CA  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  4040  0003CE  CFDE F05E          	movff	postinc2,??_ISR_timer
  4041  0003D2  CFDD F05F          	movff	postdec2,??_ISR_timer+1
  4042  0003D6  C05E  FFE6         	movff	??_ISR_timer,postinc1
  4043  0003DA  C05F  FFE6         	movff	??_ISR_timer+1,postinc1
  4044  0003DE  EC48  F008         	call	___wmul	;wreg free
  4045  0003E2  0E16               	movlw	low (_READY_QUEUE+4)
  4046  0003E4  2436               	addwf	btemp^0,w,c
  4047  0003E6  6ED9               	movwf	fsr2l,c
  4048  0003E8  0E01               	movlw	high (_READY_QUEUE+4)
  4049  0003EA  2037               	addwfc	(btemp+1)^0,w,c
  4050  0003EC  6EDA               	movwf	fsr2h,c
  4051  0003EE  0E00               	movlw	0
  4052  0003F0  6EDF               	movwf	indf2,c
  4053  0003F2  6E5E               	movwf	??_ISR_timer^0,c
  4054  0003F4  6A5F               	clrf	(??_ISR_timer+1)^0,c
  4055  0003F6  0E71               	movlw	113
  4056  0003F8  6EE6               	movwf	postinc1,c
  4057  0003FA  0E00               	movlw	0
  4058  0003FC  6EE6               	movwf	postinc1,c
  4059  0003FE  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  4060  000402  CFDE F060          	movff	postinc2,??_ISR_timer+2
  4061  000406  CFDD F061          	movff	postdec2,??_ISR_timer+3
  4062  00040A  C060  FFE6         	movff	??_ISR_timer+2,postinc1
  4063  00040E  C061  FFE6         	movff	??_ISR_timer+3,postinc1
  4064  000412  EC48  F008         	call	___wmul	;wreg free
  4065  000416  0E19               	movlw	low (_READY_QUEUE+7)
  4066  000418  2436               	addwf	btemp^0,w,c
  4067  00041A  6ED9               	movwf	fsr2l,c
  4068  00041C  0E01               	movlw	high (_READY_QUEUE+7)
  4069  00041E  2037               	addwfc	(btemp+1)^0,w,c
  4070  000420  6EDA               	movwf	fsr2h,c
  4071  000422  C05E  FFDE         	movff	??_ISR_timer,postinc2
  4072  000426  C05F  FFDD         	movff	??_ISR_timer+1,postdec2
  4073  00042A  50E0               	movf	224,w,c	;volatile
  4074  00042C  6E5E               	movwf	??_ISR_timer^0,c
  4075  00042E  6A5F               	clrf	(??_ISR_timer+1)^0,c
  4076  000430  0E71               	movlw	113
  4077  000432  6EE6               	movwf	postinc1,c
  4078  000434  0E00               	movlw	0
  4079  000436  6EE6               	movwf	postinc1,c
  4080  000438  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  4081  00043C  CFDE F060          	movff	postinc2,??_ISR_timer+2
  4082  000440  CFDD F061          	movff	postdec2,??_ISR_timer+3
  4083  000444  C060  FFE6         	movff	??_ISR_timer+2,postinc1
  4084  000448  C061  FFE6         	movff	??_ISR_timer+3,postinc1
  4085  00044C  EC48  F008         	call	___wmul	;wreg free
  4086  000450  0E1B               	movlw	low (_READY_QUEUE+9)
  4087  000452  2436               	addwf	btemp^0,w,c
  4088  000454  6ED9               	movwf	fsr2l,c
  4089  000456  0E01               	movlw	high (_READY_QUEUE+9)
  4090  000458  2037               	addwfc	(btemp+1)^0,w,c
  4091  00045A  6EDA               	movwf	fsr2h,c
  4092  00045C  C05E  FFDE         	movff	??_ISR_timer,postinc2
  4093  000460  C05F  FFDD         	movff	??_ISR_timer+1,postdec2
  4094  000464  50D8               	movf	216,w,c	;volatile
  4095  000466  6E5E               	movwf	??_ISR_timer^0,c
  4096  000468  6A5F               	clrf	(??_ISR_timer+1)^0,c
  4097  00046A  0E71               	movlw	113
  4098  00046C  6EE6               	movwf	postinc1,c
  4099  00046E  0E00               	movlw	0
  4100  000470  6EE6               	movwf	postinc1,c
  4101  000472  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  4102  000476  CFDE F060          	movff	postinc2,??_ISR_timer+2
  4103  00047A  CFDD F061          	movff	postdec2,??_ISR_timer+3
  4104  00047E  C060  FFE6         	movff	??_ISR_timer+2,postinc1
  4105  000482  C061  FFE6         	movff	??_ISR_timer+3,postinc1
  4106  000486  EC48  F008         	call	___wmul	;wreg free
  4107  00048A  0E17               	movlw	low (_READY_QUEUE+5)
  4108  00048C  2436               	addwf	btemp^0,w,c
  4109  00048E  6ED9               	movwf	fsr2l,c
  4110  000490  0E01               	movlw	high (_READY_QUEUE+5)
  4111  000492  2037               	addwfc	(btemp+1)^0,w,c
  4112  000494  6EDA               	movwf	fsr2h,c
  4113  000496  C05E  FFDE         	movff	??_ISR_timer,postinc2
  4114  00049A  C05F  FFDD         	movff	??_ISR_timer+1,postdec2
  4115  00049E  0E71               	movlw	113
  4116  0004A0  6EE6               	movwf	postinc1,c
  4117  0004A2  0E00               	movlw	0
  4118  0004A4  6EE6               	movwf	postinc1,c
  4119  0004A6  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  4120  0004AA  CFDE F05E          	movff	postinc2,??_ISR_timer
  4121  0004AE  CFDD F05F          	movff	postdec2,??_ISR_timer+1
  4122  0004B2  C05E  FFE6         	movff	??_ISR_timer,postinc1
  4123  0004B6  C05F  FFE6         	movff	??_ISR_timer+1,postinc1
  4124  0004BA  EC48  F008         	call	___wmul	;wreg free
  4125  0004BE  0E7D               	movlw	low (_READY_QUEUE+107)
  4126  0004C0  2436               	addwf	btemp^0,w,c
  4127  0004C2  6ED9               	movwf	fsr2l,c
  4128  0004C4  0E01               	movlw	high (_READY_QUEUE+107)
  4129  0004C6  2037               	addwfc	(btemp+1)^0,w,c
  4130  0004C8  6EDA               	movwf	fsr2h,c
  4131  0004CA  0E00               	movlw	0
  4132  0004CC  6EDE               	movwf	postinc2,c
  4133  0004CE  0E00               	movlw	0
  4134  0004D0  6EDD               	movwf	postdec2,c
  4135  0004D2                     i2l2004:
  4136  0004D2  0E71               	movlw	113
  4137  0004D4  6EE6               	movwf	postinc1,c
  4138  0004D6  0E00               	movlw	0
  4139  0004D8  6EE6               	movwf	postinc1,c
  4140  0004DA  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  4141  0004DE  CFDE F05E          	movff	postinc2,??_ISR_timer
  4142  0004E2  CFDD F05F          	movff	postdec2,??_ISR_timer+1
  4143  0004E6  C05E  FFE6         	movff	??_ISR_timer,postinc1
  4144  0004EA  C05F  FFE6         	movff	??_ISR_timer+1,postinc1
  4145  0004EE  EC48  F008         	call	___wmul	;wreg free
  4146  0004F2  0E12               	movlw	low _READY_QUEUE
  4147  0004F4  6E60               	movwf	(??_ISR_timer+2)^0,c
  4148  0004F6  0E01               	movlw	high _READY_QUEUE
  4149  0004F8  6E61               	movwf	(??_ISR_timer+3)^0,c
  4150  0004FA  0E0B               	movlw	11
  4151  0004FC  2660               	addwf	(??_ISR_timer+2)^0,f,c
  4152  0004FE  0E00               	movlw	0
  4153  000500  2261               	addwfc	(??_ISR_timer+3)^0,f,c
  4154  000502  5036               	movf	btemp^0,w,c
  4155  000504  2660               	addwf	(??_ISR_timer+2)^0,f,c
  4156  000506  5037               	movf	(btemp+1)^0,w,c
  4157  000508  2261               	addwfc	(??_ISR_timer+3)^0,f,c
  4158  00050A  0E03               	movlw	3
  4159  00050C  6EE6               	movwf	postinc1,c
  4160  00050E  0E00               	movlw	0
  4161  000510  6EE6               	movwf	postinc1,c
  4162  000512  C007  FFE6         	movff	_index,postinc1
  4163  000516  C008  FFE6         	movff	_index+1,postinc1
  4164  00051A  EC48  F008         	call	___wmul	;wreg free
  4165  00051E  5036               	movf	btemp^0,w,c
  4166  000520  2460               	addwf	(??_ISR_timer+2)^0,w,c
  4167  000522  6ED9               	movwf	fsr2l,c
  4168  000524  5037               	movf	(btemp+1)^0,w,c
  4169  000526  2061               	addwfc	(??_ISR_timer+3)^0,w,c
  4170  000528  6EDA               	movwf	fsr2h,c
  4171  00052A  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4172  00052E  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4173  000532  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4174  000536  4A07               	infsnz	_index^0,f,c
  4175  000538  2A08               	incf	(_index+1)^0,f,c
  4176  00053A  0006               	pop		;# 
  4177  00053C  50FC               	movf	252,w,c	;volatile
  4178  00053E  A4D8               	btfss	status,2,c
  4179  000540  EFA4  F002         	goto	i2u97_41
  4180  000544  EFA6  F002         	goto	i2u97_40
  4181  000548                     i2u97_41:
  4182  000548  EF69  F002         	goto	i2l2004
  4183  00054C                     i2u97_40:
  4184  00054C  EFC0  F002         	goto	i2l2012
  4185  000550                     i2l2010:
  4186  000550  0E71               	movlw	113
  4187  000552  6EE6               	movwf	postinc1,c
  4188  000554  0E00               	movlw	0
  4189  000556  6EE6               	movwf	postinc1,c
  4190  000558  EE23  F0B8         	lfsr	2,_READY_QUEUE+678
  4191  00055C  CFDE F05E          	movff	postinc2,??_ISR_timer
  4192  000560  CFDD F05F          	movff	postdec2,??_ISR_timer+1
  4193  000564  C05E  FFE6         	movff	??_ISR_timer,postinc1
  4194  000568  C05F  FFE6         	movff	??_ISR_timer+1,postinc1
  4195  00056C  EC48  F008         	call	___wmul	;wreg free
  4196  000570  0E16               	movlw	low (_READY_QUEUE+4)
  4197  000572  2436               	addwf	btemp^0,w,c
  4198  000574  6ED9               	movwf	fsr2l,c
  4199  000576  0E01               	movlw	high (_READY_QUEUE+4)
  4200  000578  2037               	addwfc	(btemp+1)^0,w,c
  4201  00057A  6EDA               	movwf	fsr2h,c
  4202  00057C  0E00               	movlw	0
  4203  00057E  6EDF               	movwf	indf2,c
  4204  000580                     i2l2012:
  4205  000580  8EF2               	bsf	242,7,c	;volatile
  4206  000582                     
  4207                           ;kernel.c: 116:             RESTORE_CONTEXT();
  4208  000582  ECE0  F002         	call	_RESTORE_CONTEXT	;wreg free
  4209  000586                     i2l181:
  4210  000586  C06F  F041         	movff	??_ISR_timer+17,btemp+11
  4211  00058A  C06E  F040         	movff	??_ISR_timer+16,btemp+10
  4212  00058E  C06D  F03F         	movff	??_ISR_timer+15,btemp+9
  4213  000592  C06C  F03E         	movff	??_ISR_timer+14,btemp+8
  4214  000596  C06B  F03D         	movff	??_ISR_timer+13,btemp+7
  4215  00059A  C06A  F03C         	movff	??_ISR_timer+12,btemp+6
  4216  00059E  C069  F037         	movff	??_ISR_timer+11,btemp+1
  4217  0005A2  C068  F036         	movff	??_ISR_timer+10,btemp
  4218  0005A6  C067  FFF4         	movff	??_ISR_timer+9,prodh
  4219  0005AA  C066  FFF3         	movff	??_ISR_timer+8,prodl
  4220  0005AE  C065  FFDA         	movff	??_ISR_timer+7,fsr2h
  4221  0005B2  C064  FFD9         	movff	??_ISR_timer+6,fsr2l
  4222  0005B6  C063  FFE2         	movff	??_ISR_timer+5,fsr1h
  4223  0005BA  C062  FFE1         	movff	??_ISR_timer+4,fsr1l
  4224  0005BE  0011               	retfie		f
  4225  0005C0                     __end_of_ISR_timer:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function _delay_release *****************
  4229 ;; Defined at:
  4230 ;;		line 81 in file "kernel.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  i               2    6[COMRAM] unsigned int 
  4235 ;;  task_release    2    4[COMRAM] unsigned int 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  2    0[COMRAM] unsigned int 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4245 ;;      Params:         2       0       0       0       0       0       0
  4246 ;;      Locals:         4       0       0       0       0       0       0
  4247 ;;      Temps:          2       0       0       0       0       0       0
  4248 ;;      Totals:         8       0       0       0       0       0       0
  4249 ;;Total ram usage:        8 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    1
  4252 ;; This function calls:
  4253 ;;		___wmul
  4254 ;; This function is called by:
  4255 ;;		_ISR_timer
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text30
  4260  000EB6                     __ptext30:
  4261                           	callstack 0
  4262  000EB6                     _delay_release:
  4263                           	callstack 17
  4264  000EB6                     
  4265                           ;kernel.c: 82:     u_int i, task_released = 0;
  4266  000EB6  0E00               	movlw	0
  4267  000EB8  6E5B               	movwf	(delay_release@task_released+1)^0,c
  4268  000EBA  0E00               	movlw	0
  4269  000EBC  6E5A               	movwf	delay_release@task_released^0,c
  4270                           
  4271                           ;kernel.c: 83:     for(i = 0; i < READY_QUEUE.nr_of_tasks; i++){
  4272  000EBE  0E00               	movlw	0
  4273  000EC0  6E5D               	movwf	(delay_release@i+1)^0,c
  4274  000EC2  0E00               	movlw	0
  4275  000EC4  6E5C               	movwf	delay_release@i^0,c
  4276  000EC6  EFC2  F007         	goto	i2l1788
  4277  000ECA                     i2l1778:
  4278                           
  4279                           ;kernel.c: 84:         if(READY_QUEUE.QUEUE[i].task_state == WAITING) {
  4280  000ECA  0E71               	movlw	113
  4281  000ECC  6EE6               	movwf	postinc1,c
  4282  000ECE  0E00               	movlw	0
  4283  000ED0  6EE6               	movwf	postinc1,c
  4284  000ED2  C05C  FFE6         	movff	delay_release@i,postinc1
  4285  000ED6  C05D  FFE6         	movff	delay_release@i+1,postinc1
  4286  000EDA  EC48  F008         	call	___wmul	;wreg free
  4287  000EDE  0E16               	movlw	low (_READY_QUEUE+4)
  4288  000EE0  2436               	addwf	btemp^0,w,c
  4289  000EE2  6ED9               	movwf	fsr2l,c
  4290  000EE4  0E01               	movlw	high (_READY_QUEUE+4)
  4291  000EE6  2037               	addwfc	(btemp+1)^0,w,c
  4292  000EE8  6EDA               	movwf	fsr2h,c
  4293  000EEA  0E02               	movlw	2
  4294  000EEC  18DE               	xorwf	postinc2,w,c
  4295  000EEE  A4D8               	btfss	status,2,c
  4296  000EF0  EF7C  F007         	goto	i2u71_41
  4297  000EF4  EF7E  F007         	goto	i2u71_40
  4298  000EF8                     i2u71_41:
  4299  000EF8  EFC0  F007         	goto	i2l1786
  4300  000EFC                     i2u71_40:
  4301  000EFC                     
  4302                           ;kernel.c: 85:             READY_QUEUE.QUEUE[i].task_delay_time--;
  4303  000EFC  0E71               	movlw	113
  4304  000EFE  6EE6               	movwf	postinc1,c
  4305  000F00  0E00               	movlw	0
  4306  000F02  6EE6               	movwf	postinc1,c
  4307  000F04  C05C  FFE6         	movff	delay_release@i,postinc1
  4308  000F08  C05D  FFE6         	movff	delay_release@i+1,postinc1
  4309  000F0C  EC48  F008         	call	___wmul	;wreg free
  4310  000F10  0E81               	movlw	low (_READY_QUEUE+111)
  4311  000F12  2436               	addwf	btemp^0,w,c
  4312  000F14  6ED9               	movwf	fsr2l,c
  4313  000F16  0E01               	movlw	high (_READY_QUEUE+111)
  4314  000F18  2037               	addwfc	(btemp+1)^0,w,c
  4315  000F1A  6EDA               	movwf	fsr2h,c
  4316  000F1C  06DE               	decf	postinc2,f,c
  4317  000F1E  0E00               	movlw	0
  4318  000F20  5ADD               	subwfb	postdec2,f,c
  4319                           
  4320                           ;kernel.c: 86:             if(READY_QUEUE.QUEUE[i].task_delay_time == 0) {
  4321  000F22  0E71               	movlw	113
  4322  000F24  6EE6               	movwf	postinc1,c
  4323  000F26  0E00               	movlw	0
  4324  000F28  6EE6               	movwf	postinc1,c
  4325  000F2A  C05C  FFE6         	movff	delay_release@i,postinc1
  4326  000F2E  C05D  FFE6         	movff	delay_release@i+1,postinc1
  4327  000F32  EC48  F008         	call	___wmul	;wreg free
  4328  000F36  0E81               	movlw	low (_READY_QUEUE+111)
  4329  000F38  2436               	addwf	btemp^0,w,c
  4330  000F3A  6ED9               	movwf	fsr2l,c
  4331  000F3C  0E01               	movlw	high (_READY_QUEUE+111)
  4332  000F3E  2037               	addwfc	(btemp+1)^0,w,c
  4333  000F40  6EDA               	movwf	fsr2h,c
  4334  000F42  50DE               	movf	postinc2,w,c
  4335  000F44  10DE               	iorwf	postinc2,w,c
  4336  000F46  A4D8               	btfss	status,2,c
  4337  000F48  EFA8  F007         	goto	i2u72_41
  4338  000F4C  EFAA  F007         	goto	i2u72_40
  4339  000F50                     i2u72_41:
  4340  000F50  EFC0  F007         	goto	i2l1786
  4341  000F54                     i2u72_40:
  4342  000F54                     
  4343                           ;kernel.c: 87:                 READY_QUEUE.QUEUE[i].task_state = READY;
  4344  000F54  0E71               	movlw	113
  4345  000F56  6EE6               	movwf	postinc1,c
  4346  000F58  0E00               	movlw	0
  4347  000F5A  6EE6               	movwf	postinc1,c
  4348  000F5C  C05C  FFE6         	movff	delay_release@i,postinc1
  4349  000F60  C05D  FFE6         	movff	delay_release@i+1,postinc1
  4350  000F64  EC48  F008         	call	___wmul	;wreg free
  4351  000F68  0E16               	movlw	low (_READY_QUEUE+4)
  4352  000F6A  2436               	addwf	btemp^0,w,c
  4353  000F6C  6ED9               	movwf	fsr2l,c
  4354  000F6E  0E01               	movlw	high (_READY_QUEUE+4)
  4355  000F70  2037               	addwfc	(btemp+1)^0,w,c
  4356  000F72  6EDA               	movwf	fsr2h,c
  4357  000F74  0E00               	movlw	0
  4358  000F76  6EDF               	movwf	indf2,c
  4359  000F78                     
  4360                           ;kernel.c: 88:                 task_released = 1;
  4361  000F78  0E00               	movlw	0
  4362  000F7A  6E5B               	movwf	(delay_release@task_released+1)^0,c
  4363  000F7C  0E01               	movlw	1
  4364  000F7E  6E5A               	movwf	delay_release@task_released^0,c
  4365  000F80                     i2l1786:
  4366                           
  4367                           ;kernel.c: 91:     }
  4368  000F80  4A5C               	infsnz	delay_release@i^0,f,c
  4369  000F82  2A5D               	incf	(delay_release@i+1)^0,f,c
  4370  000F84                     i2l1788:
  4371  000F84  EE23  F0BA         	lfsr	2,_READY_QUEUE+680
  4372  000F88  50DE               	movf	postinc2,w,c
  4373  000F8A  5C5C               	subwf	delay_release@i^0,w,c
  4374  000F8C  50DE               	movf	postinc2,w,c
  4375  000F8E  585D               	subwfb	(delay_release@i+1)^0,w,c
  4376  000F90  A0D8               	btfss	status,0,c
  4377  000F92  EFCD  F007         	goto	i2u73_41
  4378  000F96  EFCF  F007         	goto	i2u73_40
  4379  000F9A                     i2u73_41:
  4380  000F9A  EF65  F007         	goto	i2l1778
  4381  000F9E                     i2u73_40:
  4382  000F9E                     
  4383                           ;kernel.c: 92:     return task_released;
  4384  000F9E  C05A  F056         	movff	delay_release@task_released,?_delay_release
  4385  000FA2  C05B  F057         	movff	delay_release@task_released+1,?_delay_release+1
  4386  000FA6  0012               	return		;funcret
  4387  000FA8                     __end_of_delay_release:
  4388                           	callstack 0
  4389  0000                     
  4390                           	psect	text31
  4391  000000                     __ptext31:
  4392                           	callstack 0
  4393  000000                     
  4394                           	psect	rparam
  4395  0000                     
  4396                           	psect	temp
  4397  000036                     btemp:
  4398                           	callstack 0
  4399  000036                     	ds	32
  4400  0000                     wtemp0	set	btemp
  4401  0000                     wtemp1	set	btemp+2
  4402  0000                     wtemp2	set	btemp+4
  4403  0000                     wtemp3	set	btemp+6
  4404  0000                     wtemp4	set	btemp+8
  4405  0000                     wtemp5	set	btemp+10
  4406  0000                     wtemp8	set	btemp+1
  4407  0000                     ttemp0	set	btemp
  4408  0000                     ttemp1	set	btemp+3
  4409  0000                     ttemp2	set	btemp+6
  4410  0000                     ttemp3	set	btemp+9
  4411  0000                     ttemp5	set	btemp+1
  4412  0000                     ttemp6	set	btemp+4
  4413  0000                     ttemp7	set	btemp+8
  4414  0000                     ltemp0	set	btemp
  4415  0000                     ltemp1	set	btemp+4
  4416  0000                     ltemp2	set	btemp+8
  4417  0000                     lltemp0	set	btemp
  4418  0000                     lltemp1	set	btemp+8
  4419  0000                     lltemp2	set	btemp+16
  4420  0000                     lltemp3	set	btemp+24
  4421                           
  4422                           	psect	idloc
  4423                           
  4424                           ;Config register IDLOC0 @ 0x200000
  4425                           ;	unspecified, using default values
  4426  200000                     	org	2097152
  4427  200000  FF                 	db	255
  4428                           
  4429                           ;Config register IDLOC1 @ 0x200001
  4430                           ;	unspecified, using default values
  4431  200001                     	org	2097153
  4432  200001  FF                 	db	255
  4433                           
  4434                           ;Config register IDLOC2 @ 0x200002
  4435                           ;	unspecified, using default values
  4436  200002                     	org	2097154
  4437  200002  FF                 	db	255
  4438                           
  4439                           ;Config register IDLOC3 @ 0x200003
  4440                           ;	unspecified, using default values
  4441  200003                     	org	2097155
  4442  200003  FF                 	db	255
  4443                           
  4444                           ;Config register IDLOC4 @ 0x200004
  4445                           ;	unspecified, using default values
  4446  200004                     	org	2097156
  4447  200004  FF                 	db	255
  4448                           
  4449                           ;Config register IDLOC5 @ 0x200005
  4450                           ;	unspecified, using default values
  4451  200005                     	org	2097157
  4452  200005  FF                 	db	255
  4453                           
  4454                           ;Config register IDLOC6 @ 0x200006
  4455                           ;	unspecified, using default values
  4456  200006                     	org	2097158
  4457  200006  FF                 	db	255
  4458                           
  4459                           ;Config register IDLOC7 @ 0x200007
  4460                           ;	unspecified, using default values
  4461  200007                     	org	2097159
  4462  200007  FF                 	db	255
  4463                           
  4464                           	psect	config
  4465                           
  4466                           ; Padding undefined space
  4467  300000                     	org	3145728
  4468  300000  FF                 	db	255
  4469                           
  4470                           ;Config register CONFIG1H @ 0x300001
  4471                           ;	Oscillator Selection bits
  4472                           ;	OSC = 0x7, unprogrammed default
  4473                           ;	Fail-Safe Clock Monitor Enable bit
  4474                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4475                           ;	Internal/External Oscillator Switchover bit
  4476                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4477  300001                     	org	3145729
  4478  300001  07                 	db	7
  4479                           
  4480                           ;Config register CONFIG2L @ 0x300002
  4481                           ;	Power-up Timer Enable bit
  4482                           ;	PWRT = 0x1, unprogrammed default
  4483                           ;	Brown-out Reset Enable bits
  4484                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  4485                           ;	Brown Out Reset Voltage bits
  4486                           ;	BORV = 0x3, unprogrammed default
  4487  300002                     	org	3145730
  4488  300002  1B                 	db	27
  4489                           
  4490                           ;Config register CONFIG2H @ 0x300003
  4491                           ;	Watchdog Timer Enable bit
  4492                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4493                           ;	Watchdog Timer Postscale Select bits
  4494                           ;	WDTPS = 0xF, unprogrammed default
  4495  300003                     	org	3145731
  4496  300003  1E                 	db	30
  4497                           
  4498                           ; Padding undefined space
  4499  300004                     	org	3145732
  4500  300004  FF                 	db	255
  4501                           
  4502                           ;Config register CONFIG3H @ 0x300005
  4503                           ;	CCP2 MUX bit
  4504                           ;	CCP2MX = 0x1, unprogrammed default
  4505                           ;	PORTB A/D Enable bit
  4506                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4507                           ;	Low-Power Timer1 Oscillator Enable bit
  4508                           ;	LPT1OSC = 0x0, unprogrammed default
  4509                           ;	MCLR Pin Enable bit
  4510                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4511  300005                     	org	3145733
  4512  300005  81                 	db	129
  4513                           
  4514                           ;Config register CONFIG4L @ 0x300006
  4515                           ;	Stack Full/Underflow Reset Enable bit
  4516                           ;	STVREN = 0x1, unprogrammed default
  4517                           ;	Single-Supply ICSP Enable bit
  4518                           ;	LVP = OFF, Single-Supply ICSP disabled
  4519                           ;	Extended Instruction Set Enable bit
  4520                           ;	XINST = 0x0, unprogrammed default
  4521                           ;	Background Debugger Enable bit
  4522                           ;	DEBUG = 0x1, unprogrammed default
  4523  300006                     	org	3145734
  4524  300006  81                 	db	129
  4525                           
  4526                           ; Padding undefined space
  4527  300007                     	org	3145735
  4528  300007  FF                 	db	255
  4529                           
  4530                           ;Config register CONFIG5L @ 0x300008
  4531                           ;	unspecified, using default values
  4532                           ;	Code Protection bit
  4533                           ;	CP0 = 0x1, unprogrammed default
  4534                           ;	Code Protection bit
  4535                           ;	CP1 = 0x1, unprogrammed default
  4536                           ;	Code Protection bit
  4537                           ;	CP2 = 0x1, unprogrammed default
  4538                           ;	Code Protection bit
  4539                           ;	CP3 = 0x1, unprogrammed default
  4540  300008                     	org	3145736
  4541  300008  0F                 	db	15
  4542                           
  4543                           ;Config register CONFIG5H @ 0x300009
  4544                           ;	Boot Block Code Protection bit
  4545                           ;	CPB = 0x1, unprogrammed default
  4546                           ;	Data EEPROM Code Protection bit
  4547                           ;	CPD = OFF, Data EEPROM not code-protected
  4548  300009                     	org	3145737
  4549  300009  C0                 	db	192
  4550                           
  4551                           ;Config register CONFIG6L @ 0x30000A
  4552                           ;	unspecified, using default values
  4553                           ;	Write Protection bit
  4554                           ;	WRT0 = 0x1, unprogrammed default
  4555                           ;	Write Protection bit
  4556                           ;	WRT1 = 0x1, unprogrammed default
  4557                           ;	Write Protection bit
  4558                           ;	WRT2 = 0x1, unprogrammed default
  4559                           ;	Write Protection bit
  4560                           ;	WRT3 = 0x1, unprogrammed default
  4561  30000A                     	org	3145738
  4562  30000A  0F                 	db	15
  4563                           
  4564                           ;Config register CONFIG6H @ 0x30000B
  4565                           ;	unspecified, using default values
  4566                           ;	Configuration Register Write Protection bit
  4567                           ;	WRTC = 0x1, unprogrammed default
  4568                           ;	Boot Block Write Protection bit
  4569                           ;	WRTB = 0x1, unprogrammed default
  4570                           ;	Data EEPROM Write Protection bit
  4571                           ;	WRTD = 0x1, unprogrammed default
  4572  30000B                     	org	3145739
  4573  30000B  E0                 	db	224
  4574                           
  4575                           ;Config register CONFIG7L @ 0x30000C
  4576                           ;	unspecified, using default values
  4577                           ;	Table Read Protection bit
  4578                           ;	EBTR0 = 0x1, unprogrammed default
  4579                           ;	Table Read Protection bit
  4580                           ;	EBTR1 = 0x1, unprogrammed default
  4581                           ;	Table Read Protection bit
  4582                           ;	EBTR2 = 0x1, unprogrammed default
  4583                           ;	Table Read Protection bit
  4584                           ;	EBTR3 = 0x1, unprogrammed default
  4585  30000C                     	org	3145740
  4586  30000C  0F                 	db	15
  4587                           
  4588                           ;Config register CONFIG7H @ 0x30000D
  4589                           ;	unspecified, using default values
  4590                           ;	Boot Block Table Read Protection bit
  4591                           ;	EBTRB = 0x1, unprogrammed default
  4592  30000D                     	org	3145741
  4593  30000D  40                 	db	64
  4594                           tosu	equ	0xFFF
  4595                           tosh	equ	0xFFE
  4596                           tosl	equ	0xFFD
  4597                           stkptr	equ	0xFFC
  4598                           pclatu	equ	0xFFB
  4599                           pclath	equ	0xFFA
  4600                           pcl	equ	0xFF9
  4601                           tblptru	equ	0xFF8
  4602                           tblptrh	equ	0xFF7
  4603                           tblptrl	equ	0xFF6
  4604                           tablat	equ	0xFF5
  4605                           prodh	equ	0xFF4
  4606                           prodl	equ	0xFF3
  4607                           indf0	equ	0xFEF
  4608                           postinc0	equ	0xFEE
  4609                           postdec0	equ	0xFED
  4610                           preinc0	equ	0xFEC
  4611                           plusw0	equ	0xFEB
  4612                           fsr0h	equ	0xFEA
  4613                           fsr0l	equ	0xFE9
  4614                           wreg	equ	0xFE8
  4615                           indf1	equ	0xFE7
  4616                           postinc1	equ	0xFE6
  4617                           postdec1	equ	0xFE5
  4618                           preinc1	equ	0xFE4
  4619                           plusw1	equ	0xFE3
  4620                           fsr1h	equ	0xFE2
  4621                           fsr1l	equ	0xFE1
  4622                           bsr	equ	0xFE0
  4623                           indf2	equ	0xFDF
  4624                           postinc2	equ	0xFDE
  4625                           postdec2	equ	0xFDD
  4626                           preinc2	equ	0xFDC
  4627                           plusw2	equ	0xFDB
  4628                           fsr2h	equ	0xFDA
  4629                           fsr2l	equ	0xFD9
  4630                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         753
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      81
    BANK0           128    119     119
    BANK1           256      0      18
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pipe_write@pipe	PTR struct pipe size(2) Largest target is 26
		 -> pipe_temperature(COMRAM[26]), 

    pipe_read@dado	PTR int  size(2) Largest target is 2
		 -> ac_controller_1@room_temperature(UNKNOWN), 

    pipe_read@pipe	PTR struct pipe size(2) Largest target is 26
		 -> pipe_temperature(COMRAM[26]), 

    pipe_init@pipe	PTR struct pipe size(2) Largest target is 26
		 -> pipe_temperature(COMRAM[26]), 

    sem_post@s	PTR struct semaphore size(2) Largest target is 26
		 -> pipe_temperature(COMRAM[26]), 

    sem_wait@s	PTR struct semaphore size(2) Largest target is 26
		 -> pipe_temperature(COMRAM[26]), 

    sem_init@s	PTR struct semaphore size(2) Largest target is 26
		 -> sem_temp_r(BANK1[18]), sem_temp_w(COMRAM[18]), pipe_temperature(COMRAM[26]), 

    OS_create_task@func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), ac_controller_2(), thermostat_sensing_2(), ac_controller_1(), 
		 -> thermostat_sensing_1(), 

    new_task.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), ac_controller_2(), thermostat_sensing_2(), ac_controller_1(), 
		 -> thermostat_sensing_1(), 

    aux.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), ac_controller_2(), thermostat_sensing_2(), ac_controller_1(), 
		 -> thermostat_sensing_1(), 

    S103tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), ac_controller_2(), thermostat_sensing_2(), ac_controller_1(), 
		 -> thermostat_sensing_1(), 

    READY_QUEUE.QUEUE.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), ac_controller_2(), thermostat_sensing_2(), ac_controller_1(), 
		 -> thermostat_sensing_1(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _thermostat_sensing_1 in COMRAM

    None.

Critical Paths under _ac_controller_1 in COMRAM

    None.

Critical Paths under _thermostat_sensing_2 in COMRAM

    None.

Critical Paths under _ac_controller_2 in COMRAM

    None.

Critical Paths under _thermostat_sensing_1 in COMRAM

    None.

Critical Paths under _ac_controller_1 in COMRAM

    None.

Critical Paths under _thermostat_sensing_2 in COMRAM

    None.

Critical Paths under _ac_controller_2 in COMRAM

    None.

Critical Paths under _ISR_timer in COMRAM

    _ISR_timer->_delay_release

Critical Paths under _main in BANK0

    _main->_OS_create_task
    _OS_config->_OS_create_task
    _config_user_tasks->_pipe_init
    _pipe_init->_sem_init

Critical Paths under _idle in BANK0

    None.

Critical Paths under _thermostat_sensing_1 in BANK0

    None.

Critical Paths under _ac_controller_1 in BANK0

    None.

Critical Paths under _thermostat_sensing_2 in BANK0

    None.

Critical Paths under _ac_controller_2 in BANK0

    None.

Critical Paths under _thermostat_sensing_1 in BANK0

    None.

Critical Paths under _ac_controller_1 in BANK0

    None.

Critical Paths under _thermostat_sensing_2 in BANK0

    None.

Critical Paths under _ac_controller_2 in BANK0

    None.

Critical Paths under _ISR_timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _idle in BANK1

    None.

Critical Paths under _thermostat_sensing_1 in BANK1

    None.

Critical Paths under _ac_controller_1 in BANK1

    None.

Critical Paths under _thermostat_sensing_2 in BANK1

    None.

Critical Paths under _ac_controller_2 in BANK1

    None.

Critical Paths under _thermostat_sensing_1 in BANK1

    None.

Critical Paths under _ac_controller_1 in BANK1

    None.

Critical Paths under _thermostat_sensing_2 in BANK1

    None.

Critical Paths under _ac_controller_2 in BANK1

    None.

Critical Paths under _ISR_timer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _thermostat_sensing_1 in BANK2

    None.

Critical Paths under _ac_controller_1 in BANK2

    None.

Critical Paths under _thermostat_sensing_2 in BANK2

    None.

Critical Paths under _ac_controller_2 in BANK2

    None.

Critical Paths under _thermostat_sensing_1 in BANK2

    None.

Critical Paths under _ac_controller_1 in BANK2

    None.

Critical Paths under _thermostat_sensing_2 in BANK2

    None.

Critical Paths under _ac_controller_2 in BANK2

    None.

Critical Paths under _ISR_timer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _thermostat_sensing_1 in BANK3

    None.

Critical Paths under _ac_controller_1 in BANK3

    None.

Critical Paths under _thermostat_sensing_2 in BANK3

    None.

Critical Paths under _ac_controller_2 in BANK3

    None.

Critical Paths under _thermostat_sensing_1 in BANK3

    None.

Critical Paths under _ac_controller_1 in BANK3

    None.

Critical Paths under _thermostat_sensing_2 in BANK3

    None.

Critical Paths under _ac_controller_2 in BANK3

    None.

Critical Paths under _ISR_timer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _thermostat_sensing_1 in BANK4

    None.

Critical Paths under _ac_controller_1 in BANK4

    None.

Critical Paths under _thermostat_sensing_2 in BANK4

    None.

Critical Paths under _ac_controller_2 in BANK4

    None.

Critical Paths under _thermostat_sensing_1 in BANK4

    None.

Critical Paths under _ac_controller_1 in BANK4

    None.

Critical Paths under _thermostat_sensing_2 in BANK4

    None.

Critical Paths under _ac_controller_2 in BANK4

    None.

Critical Paths under _ISR_timer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _thermostat_sensing_1 in BANK5

    None.

Critical Paths under _ac_controller_1 in BANK5

    None.

Critical Paths under _thermostat_sensing_2 in BANK5

    None.

Critical Paths under _ac_controller_2 in BANK5

    None.

Critical Paths under _thermostat_sensing_1 in BANK5

    None.

Critical Paths under _ac_controller_1 in BANK5

    None.

Critical Paths under _thermostat_sensing_2 in BANK5

    None.

Critical Paths under _ac_controller_2 in BANK5

    None.

Critical Paths under _ISR_timer in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8016
                          _OS_config
                     _OS_create_task
                           _OS_start
 ---------------------------------------------------------------------------------
 (1) _OS_start                                             0     0      0       0
                _config_ad_conversor
                    _config_flywheel
                      _config_timer0
 ---------------------------------------------------------------------------------
 (2) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_flywheel                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ad_conversor                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OS_config                                            0     0      0    4855
                     _OS_create_task
                  _config_user_tasks
 ---------------------------------------------------------------------------------
 (2) _config_user_tasks                                    0     0      0    1694
                          _pipe_init
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _pipe_init                                            4     0      4     999
                                              4 BANK0      4     0      4
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _sem_init                                             4     0      4     695
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _OS_create_task                                     119   115      4    3161
                                              0 BANK0    119   115      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1983
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _thermostat_sensing_1                                 2     2      0    2011
                         _pipe_write
                   _thermostat_value
 ---------------------------------------------------------------------------------
 (6) _thermostat_value                                     4     4      0     247
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     217
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           5     1      4    1741
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1025
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2     433
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      37
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ac_controller_1                                      2     2      0    1809
                          _pipe_read
                        _turn_off_ac
                         _turn_on_ac
 ---------------------------------------------------------------------------------
 (6) _turn_on_ac                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _turn_off_ac                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            5     1      4    1741
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1025
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2     433
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      37
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _thermostat_sensing_2                                 0     0      0     247
                   _thermostat_value
 ---------------------------------------------------------------------------------
 (6) _thermostat_value                                     4     4      0     247
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     217
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ac_controller_2                                      0     0      0       0
                        _turn_off_ac
                         _turn_on_ac
 ---------------------------------------------------------------------------------
 (6) _turn_on_ac                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _turn_off_ac                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _thermostat_sensing_1                                 2     2      0    2011
                         _pipe_write
                   _thermostat_value
 ---------------------------------------------------------------------------------
 (6) _thermostat_value                                     4     4      0     247
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     217
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           5     1      4    1741
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1025
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2     433
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      37
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ac_controller_1                                      2     2      0    1809
                          _pipe_read
                        _turn_off_ac
                         _turn_on_ac
 ---------------------------------------------------------------------------------
 (6) _turn_on_ac                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _turn_off_ac                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            5     1      4    1741
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1025
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2     433
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      37
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _thermostat_sensing_2                                 0     0      0     247
                   _thermostat_value
 ---------------------------------------------------------------------------------
 (6) _thermostat_value                                     4     4      0     247
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     217
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ac_controller_2                                      0     0      0       0
                        _turn_off_ac
                         _turn_on_ac
 ---------------------------------------------------------------------------------
 (6) _turn_on_ac                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _turn_off_ac                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer                                          18    18      0    4694
                                              8 COMRAM    18    18      0
                    _RESTORE_CONTEXT
                             ___wmul
                      _delay_release
 ---------------------------------------------------------------------------------
 (13) _delay_release                                       8     6      2    2119
                                              0 COMRAM     8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1983
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OS_config
     _OS_create_task
       ___wmul
     _config_user_tasks
       _pipe_init
         _sem_init
       _sem_init
   _OS_create_task
     ___wmul
   _OS_start
     _config_ad_conversor
     _config_flywheel
     _config_timer0

 _idle (ROOT)

 _thermostat_sensing_1 (ROOT)
   _pipe_write
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod
   _thermostat_value
     ___awdiv

 _ac_controller_1 (ROOT)
   _pipe_read
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod
   _turn_off_ac
   _turn_on_ac

 _thermostat_sensing_2 (ROOT)
   _thermostat_value
     ___awdiv

 _ac_controller_2 (ROOT)
   _turn_off_ac
   _turn_on_ac

 _thermostat_sensing_1 (ROOT)
   _pipe_write
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod
   _thermostat_value
     ___awdiv

 _ac_controller_1 (ROOT)
   _pipe_read
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod
   _turn_off_ac
   _turn_on_ac

 _thermostat_sensing_2 (ROOT)
   _thermostat_value
     ___awdiv

 _ac_controller_2 (ROOT)
   _turn_off_ac
   _turn_on_ac

 _ISR_timer (ROOT)
   _RESTORE_CONTEXT
     _scheduler
       _ROUND_ROBIN_sched
         ___lwmod
   ___wmul
   _delay_release
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     2AA      17       44.4%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      12       7        7.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     77      77       5       93.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      51       1       85.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0      24       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DA      15        0.0%
DATA                 0      0     3A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Feb 16 09:31:39 2022

    __end_of_config_user_tasks 143A                             l51 0D80                             l28 146E  
                           l29 146E                             l46 15A4                    _prox_tarefa 0005  
                          l132 1598                            l222 14AE                            l144 12A6  
                          l216 1438                            l321 0C48                            l129 14A8  
                          l322 0C4A                            l330 0AE8                            l314 12FE  
                          l219 1438                            l228 11BA                            l261 159E  
                          l318 0C16                            l326 0AB4                            l335 15AC  
                          l191 0808                            l255 1570                            l184 05C8  
                          l185 07C8                            l329 0AE6                            l353 1146  
                          l338 15A8                            l282 13AA                            l258 1532  
                          l187 071C                            l292 030C                            l356 11AC  
                          l382 1300                            l622 0984                            l375 1534  
                          l391 111C                            l296 0EB0                            l288 0254  
                          l385 1350                            l299 157E                            l899 1086  
                          _BSR 000FE0       __end_of_thermostat_value 11B6        fp__thermostat_sensing_1 0000  
      fp__thermostat_sensing_2 0000                            _TOS 000FFD                            wreg 000FE8  
                         l2020 11BA                           l1212 1572                           l2022 11DA  
                         l1230 082E                           l2030 1358                           l2024 1200  
                         l1240 0860                           l1232 083A                           l1320 112E  
                         l2016 14AE                           l2032 135A                           l2040 12E6  
                         l2026 1208                           l1250 08AE                           l1242 0868  
                         l1234 0840                           l1226 081A                           l1330 1144  
                         l1322 1132                           l2018 14BE                           l2050 125A  
                         l2042 123C                           l2034 136A                           l2028 122E  
                         l1260 0932                           l1252 08BE                           l1244 0882  
                         l1236 0850                           l1228 081E                           l1332 1154  
                         l1324 1136                           l2052 1262                           l2044 1244  
                         l2036 13A8                           l2060 155A                           l1262 093C  
                         l1254 08DC                           l1246 088C                           l1238 085C  
                         l1334 1160                           l1326 1138                           l2054 129C  
                         l2046 124C                           l2038 12A8                           l2070 1516  
                         l2062 1562                           l1600 1310                           l1256 090A  
                         l1248 08AA                           l1264 095A                           l1336 1162  
                         l1328 1142                           l1440 1506                           l2048 1252  
                         l2056 13F6                           l2080 148E                           l2072 1518  
                         l2064 156A                           l1602 132C                           l1266 096C  
                         l1258 092E                           l1338 11A0                           l2082 14A4  
                         l2074 1522                           l2066 159A                           l2090 143A  
                         l1604 1330                           l1620 0FCE                           l1700 014A  
                         l1268 0978                           l1436 14DE                           l2076 1528  
                         l2068 150E                           l2084 1588                           l1606 134C  
                         l1630 1052                           l1622 0FEC                           l1710 0222  
                         l1702 014E                           l1438 14E0                           l2078 1476  
                         l2086 1594                           l2094 143E                           l1632 105C  
                         l1624 0FF0                           l1616 0FAA                           l1640 0C70  
                         l1720 0306                           l1712 02BC                           l1704 017C  
                         l1800 0A38                           l2088 1596                           l2096 146A  
                         l1386 15AA                           l1626 1000                           l1618 0FC4  
                         l1634 107A                           l1730 0DC8                           l1650 0CF8  
                         l1642 0CAE                           l1714 02C2                           l1706 01B2  
                         l1722 030A                           l1810 0AD4                           l1802 0A56  
                         l1820 0B7A                           l1812 0AF4                           l1388 15A6  
                         l1628 102E                           l1732 0E34                           l1724 0D8A  
                         l1652 0D32                           l1644 0CCE                           l1708 01EA  
                         l1716 02D6                           l1804 0A5C                           l1740 10AC  
                         l1830 0C18                           l1822 0B9A                           l1814 0AF6  
                         l1734 0E90                           l1726 0D8C                           l1654 0D74  
                         l1638 0C5C                           l1718 0304                           l1806 0A92  
                         l1742 10DE                           l1592 1534                           l1832 0C36  
                         l1824 0BB8                           l1816 0AFA                           l1736 0EAE  
                         l1728 0D9E                           l1648 0CDA                           l1760 0610  
                         l1808 0AB6                           l1744 1110                           l1594 1544  
                         l1826 0BBE                           l1818 0B24                           l1770 07AA  
                         l1762 0612                           l1754 05CA                           l1690 0044  
                         l1738 1094                           l1596 1550                           l1828 0BF4  
                         l1676 15A0                           l1772 07CA                           l1764 064E  
                         l1756 05D6                           l1692 0092                           l1684 0014  
                         l1598 1300                           l1774 0806                           l1766 071E  
                         l1758 05E2                           l1694 00EE                           l1686 0016  
                         l1790 0990                           l1768 078A                           l1696 010C  
                         l1688 0028                           l1792 0992                           l1698 010E  
                         l1794 0996                           l1796 09C0                           l1798 0A18  
                         u1001 1294                           _WREG 000FE8                           _idle 14DE  
                         _main 143A                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr2h 000FDA                           fsr0l 000FE9                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 0036  
                         prodh 000FF4                           prodl 000FF3                           start 000C  
                 ___param_bank 000000                          ?_main 0056                __end_of___awdiv 098E  
                        _ADRES 000FC3                __end_of___lwmod 1090                          i2l154 0F9E  
                        i2l155 0FA6                          i2l181 0586                          u13_20 082E  
                        u13_21 082A                          u14_20 0850                          u14_21 084C  
                        u15_20 0882                          u15_21 087E                          u16_20 08BE  
                        u16_21 08BA                          u17_20 090A                          u25_20 1154  
                        u17_21 0906                          u25_21 1150                          _TMR0L 000FD6  
                        u18_20 095A                          u18_21 0956                          u19_20 096C  
                        u19_21 0968                          u60_20 107A                          u60_21 1076  
                        u53_20 1544                          u61_20 0CCE                          u45_20 14F0  
                        u53_21 1540                          u61_21 0CCA                          u45_21 14EA  
                        u45_26 14F2                          u54_20 1310                          u62_20 0D32  
                        u70_20 07C4                          u54_21 130C                          u62_21 0D2E  
                        u70_21 07C0                          u55_20 132C                          u63_20 0D74  
                        u55_21 1328                          u63_21 0D70                          u56_20 134C  
                        u80_20 0BF4                          u56_21 1348                          u80_21 0BF0  
                        u81_20 0C48                          u57_20 0FC4                          u65_20 0044  
                        u81_21 0C44                          u57_21 0FC0                          u65_21 0040  
                        _TRISA 000F92                          _TRISD 000F95                          u58_20 1000  
                        u66_20 014A                          u74_20 09C0                          u58_21 0FFC  
                        u66_21 0146                          u74_21 09BC                          u59_20 102E  
                        u67_20 02D2                          u59_21 102A                          u67_21 02CE  
                        u75_21 0A76                          u68_20 0DC8                          u76_20 0A92  
                        u68_21 0DC4                          u76_21 0A8E                          u69_20 064E  
                        u77_20 0AE6                          u69_21 064A                          u77_21 0AE2  
                        u78_20 0B24                          u78_21 0B20                          u79_21 0BD8  
                        u98_20 1200                          u98_21 11FC                          u99_20 122E  
                        u99_21 122A                    _turn_off_ac 15AA               _room_temperature 0001  
           __size_of_ISR_timer 05B8                          _index 0007                          tablat 000FF5  
                        ltemp0 0036                          ltemp1 003A                          ltemp2 003E  
                        plusw0 000FEB                          plusw1 000FE3                          plusw2 000FDB  
                        ttemp0 0036                          ttemp1 0039                          ttemp2 003C  
                        ttemp3 003F                          ttemp5 0037                          ttemp6 003A  
                        ttemp7 003E                          status 000FD8                ??_config_timer0 0080  
                        wtemp0 0036                          wtemp1 0038                          wtemp2 003A  
                        wtemp3 003C                          wtemp4 003E                          wtemp5 0040  
                        wtemp8 0037               __end_of_OS_start 159A                 delay_release@i 005C  
        __end_of_sem_get_value 1588                __initialization 13AC                   __end_of_idle 150E  
                 __end_of_main 1476     __size_of_config_user_tasks 0044             __size_of_OS_config 0034  
             ??_OS_create_task 0084  __size_of_thermostat_sensing_1 0034  __size_of_thermostat_sensing_2 0026  
                       ??_main 00F7                _RESTORE_CONTEXT 05C0                  __activetblptr 000000  
                       _ADCON1 000FC1          __end_of_delay_release 0FA8                         i2l2000 0464  
                       i2l2002 049E                         i2l2010 0550                         i2l2012 0580  
                       i2l2004 04D2                         i2l2014 0582                         i2l2006 0536  
                       i2l2008 053C                         i2l1920 035C                         i2l1914 0350  
                       i2l1780 0EFC                         i2l1916 0354                         i2l1782 0F54  
                       i2l1918 0356                         i2l1784 0F78                         i2l1776 0EB6  
                       i2l1786 0F80                         i2l1778 0ECA                         i2l1788 0F84  
                       i2l1990 037C                         i2l1992 03BA                         i2l1984 0360  
                       i2l1994 03C2                         i2l1986 0372                         i2l1996 03F2  
                       i2l1988 037A                         i2l1998 042A                         _STATUS 000FD8  
                       _STKPTR 000FFC    __end_of_config_ad_conversor 1534              __end_of_ISR_timer 05C0  
                       ___wmul 1090             OS_create_task@func 0082                         clear_0 13CC  
                       clear_1 13DE                         clear_2 13EA               __end_of_sem_init 13AC  
             __end_of_sem_wait 0312               __end_of_sem_post 0EB6                   __pdataCOMRAM 0070  
                       lltemp0 0036                         lltemp1 003E                         lltemp2 0046  
                       lltemp3 004E                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8              __end_of_OS_config 14AA                     __accesstop 0080  
      __end_of__initialization 13F0                  ___rparam_used 000001                 __pcstackCOMRAM 0056  
                   ___inthi_sp 047E        __end_of_RESTORE_CONTEXT 0812       __size_of_ac_controller_1 0086  
     __size_of_ac_controller_2 0058                      ?_OS_start 0056             fp__ac_controller_1 0000  
           fp__ac_controller_2 0000                     __pbssBANK1 0100       __size_of_config_flywheel 0006  
           __size_of_scheduler 0006             __size_of_pipe_init 0058             __size_of_pipe_read 0162  
       OS_create_task@new_task 0086                     ??_OS_start 0080                        i2u71_40 0EFC  
                      i2u71_41 0EF8                        i2u72_40 0F54                        i2u72_41 0F50  
                      i2u73_40 0F9E                        i2u73_41 0F9A                        i2u95_40 0372  
                      i2u95_41 036E                        i2u96_40 03BA                        i2u96_41 03B6  
                      i2u97_40 054C                        i2u97_41 0548                    sem_init@val 0082  
                      __Hparam 0000                      ?_sem_init 0080                        __Lparam 0000  
                      ___awdiv 0812                __size_of___wmul 0096                        ___lwmod 0FA8  
                      __pcinit 13AC                        __ramtop 0600                        __ptext0 143A  
                      __ptext1 1588                        __ptext2 155A                        __ptext3 159A  
                      __ptext4 150E                        __ptext5 1476                        __ptext6 13F6  
                      __ptext7 12A8                        __ptext8 1358                        __ptext9 123C  
                    _T0CONbits 000FD5            OS_create_task@prior 0080                        fp__idle 0000  
            __end_of_scheduler 15A6                 __pintcode_body 0312           end_of_initialization 13F0  
            __end_of_pipe_init 1300              __end_of_pipe_read 0C54   __end_of_thermostat_sensing_1 14DE  
 __end_of_thermostat_sensing_2 155A                        int_func 0312                     _pipe_write 098E  
                   _sem_temp_r 0100                     _sem_temp_w 0024          __end_of_config_timer0 1572  
                   ??_sem_init 0084              ??_config_flywheel 0080                        postdec0 000FED  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                  pipe_init@pipe 0084  
                    _ISR_timer 0008                      _PORTDbits 000F83                     _rr_quantum 0070  
                    _TRISDbits 000F95         __size_of_sem_get_value 0016                      _OS_config 1476  
               __end_of___wmul 1126         __size_of_delay_release 00F2                  __pidataCOMRAM 15AE  
                   _turn_on_ac 15A6                     ?_ISR_timer 0056              _ROUND_ROBIN_sched 0C54  
 __size_of_config_ad_conversor 0026            start_initialization 13AC        __size_of_OS_create_task 006C  
         __size_of_turn_off_ac 0004              __size_of_OS_start 0012      __size_of_thermostat_value 0090  
                   ?_OS_config 0056                  _sem_get_value 1572      __end_of_ROUND_ROBIN_sched 0D8A  
         _thermostat_sensing_1 14AA           _thermostat_sensing_2 1534                    __pbssBIGRAM 0112  
                  __pbssCOMRAM 0001                  __pcstackBANK0 0080                  _delay_release 0EB6  
                    __pintcode 0008              __size_of_sem_init 0054              __size_of_sem_wait 02FE  
            __size_of_sem_post 012C                    ??_ISR_timer 005E            __size_of_pipe_write 0164  
              _ac_controller_1 11B6                _ac_controller_2 1300                 ?_delay_release 0056  
              _config_flywheel 159A                      _scheduler 15A0                       _LATDbits 000F8C  
                  ??_OS_config 00F7                      _pipe_init 12A8                      _pipe_read 0AF2  
   __size_of_ROUND_ROBIN_sched 0136                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0       __size_of_RESTORE_CONTEXT 0252                       _OS_start 1588  
               _OS_create_task 123C            __size_of_turn_on_ac 0004            _config_ad_conversor 150E  
   delay_release@task_released 005A               _thermostat_value 1126                     ?_pipe_init 0084  
                  _READY_QUEUE 0112                       __Hrparam 0000          _bsem_room_temperature 0009  
                     __Lrparam 0000        __end_of_ac_controller_1 123C        __end_of_ac_controller_2 1358  
             __size_of___awdiv 017C               __size_of___lwmod 00E8               pipe_init@tamanho 0086  
         ?_config_ad_conversor 0056         __end_of_OS_create_task 12A8        __end_of_config_flywheel 15A0  
       __size_of_config_timer0 0018                ??_delay_release 0058                       __ptext10 1090  
                     __ptext11 14DE                       __ptext20 0D8A                       __ptext12 14AA  
                     __ptext21 0FA8                       __ptext13 1126                       __ptext30 0EB6  
                     __ptext22 1572                       __ptext14 0812                       __ptext31 0000  
                     __ptext23 11B6                       __ptext15 098E                       __ptext24 15A6  
                     __ptext16 0014                       __ptext25 15AA                       __ptext17 05C0  
                     __ptext26 0AF2                       __ptext18 15A0                       __ptext27 1534  
                     __ptext19 0C54                       __ptext28 1300                      sem_init@s 0080  
                __size_of_idle 0030                  __size_of_main 003C                       _sem_init 1358  
                     _sem_wait 0014                       _sem_post 0D8A                       _possivel 0003  
        ??_config_ad_conversor 0080                ?_OS_create_task 0080                     _INTCONbits 000FF2  
           __end_of_pipe_write 0AF2                       intlevel1 0000                       intlevel2 0000  
                  ??_pipe_init 0088                  _config_timer0 155A              _config_user_tasks 13F6  
           ?_config_user_tasks 0056               ?_config_flywheel 0056            ??_config_user_tasks 0088  
          __end_of_turn_off_ac 15AE               _pipe_temperature 000A             __end_of_turn_on_ac 15AA  
               ?_config_timer0 0056  
