

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Feb 15 14:57:55 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4520 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84 ;;___wmul@product	offset	0
    85 ;;___wmul@multiplier	offset=-2 (param)
    86 ;;___wmul@multiplicand	offset=-4 (param)
    87 ;;rot_read@valor_rot_lido	offset	0
    88 ;;rot_ad_read@temperatura_ambiente	offset	0
    89 ;;rot_ad_read@resultadoAD	offset	2
    90 ;;___awdiv@quotient	offset	0
    91 ;;___awdiv@sign	offset	2
    92 ;;___awdiv@counter	offset	3
    93 ;;___awdiv@dividend	offset=-2 (param)
    94 ;;___awdiv@divisor	offset=-4 (param)
    95 ;;pipe_write@write_flag	offset	0
    96 ;;pipe_write@pipe	offset=-2 (param)
    97 ;;pipe_write@dado	offset=-4 (param)
    98 ;;sem_wait@s	offset=-2 (param)
    99 ;;RESTORE_CONTEXT@stack_size	offset	0
   100 ;;RESTORE_CONTEXT@task_running	offset	2
   101 ;;ROUND_ROBIN_sched@task_selected	offset	0
   102 ;;ROUND_ROBIN_sched@try	offset	2
   103 ;;sem_post@s	offset=-2 (param)
   104 ;;___lwmod@counter	offset	0
   105 ;;___lwmod@dividend	offset=-2 (param)
   106 ;;___lwmod@divisor	offset=-4 (param)
   107 ;;sem_get_value@s	offset=-18 (param)
   108 ;;rot_process@room_temperature	offset	0
   109 ;;pipe_read@read_flag	offset	0
   110 ;;pipe_read@pipe	offset=-2 (param)
   111 ;;pipe_read@dado	offset=-4 (param)
   112 ;;___wmul@product	offset	0
   113 ;;___wmul@multiplier	offset=-2 (param)
   114 ;;___wmul@multiplicand	offset=-4 (param)
   115 ;;RESTORE_CONTEXT@stack_size	offset	0
   116 ;;RESTORE_CONTEXT@task_running	offset	2
   117 ;;ROUND_ROBIN_sched@task_selected	offset	0
   118 ;;ROUND_ROBIN_sched@try	offset	2
   119 ;;___lwmod@counter	offset	0
   120 ;;___lwmod@dividend	offset=-2 (param)
   121 ;;___lwmod@divisor	offset=-4 (param)
   122                           
   123                           	psect	idataCOMRAM
   124  001576                     __pidataCOMRAM:
   125                           	callstack 0
   126                           
   127                           ;initializer for _rr_quantum
   128  001576  0008               	dw	8
   129  0000                     _TOS	set	4093
   130  0000                     _ADRES	set	4035
   131  0000                     _TRISD	set	3989
   132  0000                     _ADCON2bits	set	4032
   133  0000                     _ADCON1	set	4033
   134  0000                     _ADCON1bits	set	4033
   135  0000                     _ADCON0bits	set	4034
   136  0000                     _TRISA	set	3986
   137  0000                     _TMR0L	set	4054
   138  0000                     _STKPTR	set	4092
   139  0000                     _STATUS	set	4056
   140  0000                     _BSR	set	4064
   141  0000                     _WREG	set	4072
   142  0000                     _T0CONbits	set	4053
   143  0000                     _INTCONbits	set	4082
   144  0000                     _PORTDbits	set	3971
   145  0000                     _LATDbits	set	3980
   146  0000                     _TRISDbits	set	3989
   147                           
   148                           ; #config settings
   149                           
   150                           	psect	cinit
   151  001408                     __pcinit:
   152                           	callstack 0
   153  001408                     start_initialization:
   154                           	callstack 0
   155  001408                     __initialization:
   156                           	callstack 0
   157                           
   158                           ; Initialize objects allocated to COMRAM (2 bytes)
   159                           ; load TBLPTR registers with __pidataCOMRAM
   160  001408  0E76               	movlw	low __pidataCOMRAM
   161  00140A  6EF6               	movwf	tblptrl,c
   162  00140C  0E15               	movlw	high __pidataCOMRAM
   163  00140E  6EF7               	movwf	tblptrh,c
   164  001410  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   165  001412  6EF8               	movwf	tblptru,c
   166  001414  0009               	tblrd		*+	;fetch initializer
   167  001416  CFF5 F063          	movff	tablat,__pdataCOMRAM
   168  00141A  0009               	tblrd		*+	;fetch initializer
   169  00141C  CFF5 F064          	movff	tablat,__pdataCOMRAM+1
   170                           
   171                           ; Clear objects allocated to BIGRAM (682 bytes)
   172  001420  EE00  F0F3         	lfsr	0,__pbssBIGRAM
   173  001424  EE22 F0AA          	lfsr	2,682
   174  001428                     clear_0:
   175  001428  6AEE               	clrf	postinc0,c
   176  00142A  50DD               	movf	postdec2,w,c
   177  00142C  50D9               	movf	fsr2l,w,c
   178  00142E  E1FC               	bnz	clear_0
   179  001430  50DA               	movf	fsr2h,w,c
   180  001432  E1FA               	bnz	clear_0
   181                           
   182                           ; Clear objects allocated to COMRAM (34 bytes)
   183  001434  EE00  F001         	lfsr	0,__pbssCOMRAM
   184  001438  0E22               	movlw	34
   185  00143A                     clear_1:
   186  00143A  6AEE               	clrf	postinc0,c
   187  00143C  06E8               	decf	wreg,f,c
   188  00143E  E1FD               	bnz	clear_1
   189  001440                     end_of_initialization:
   190                           	callstack 0
   191  001440                     __end_of__initialization:
   192                           	callstack 0
   193  001440  0100               	movlb	0
   194  001442  EFE0  F009         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197  000001                     __pbssCOMRAM:
   198                           	callstack 0
   199  000001                     _possivel:
   200                           	callstack 0
   201  000001                     	ds	2
   202  000003                     _prox_tarefa:
   203                           	callstack 0
   204  000003                     	ds	2
   205  000005                     _index:
   206                           	callstack 0
   207  000005                     	ds	2
   208  000007                     _pipe_attitude:
   209                           	callstack 0
   210  000007                     	ds	28
   211                           
   212                           	psect	dataCOMRAM
   213  000063                     __pdataCOMRAM:
   214                           	callstack 0
   215  000063                     _rr_quantum:
   216                           	callstack 0
   217  000063                     	ds	2
   218                           
   219                           	psect	bssBIGRAM
   220  0000F3                     __pbssBIGRAM:
   221                           	callstack 0
   222  0000F3                     _READY_QUEUE:
   223                           	callstack 0
   224  0000F3                     	ds	682
   225                           
   226                           	psect	cstackBANK0
   227  000080                     __pcstackBANK0:
   228                           	callstack 0
   229  000080                     ??_OS_create_task:
   230  000080                     pipe_init@pipe:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x0
   234  000080                     	ds	2
   235  000082                     pipe_init@tamanho:
   236                           	callstack 0
   237  000082                     OS_create_task@new_task:
   238                           	callstack 0
   239                           
   240                           ; 113 bytes @ 0x2
   241  000082                     	ds	113
   242                           
   243                           	psect	cstackCOMRAM
   244  000023                     __pcstackCOMRAM:
   245                           	callstack 0
   246  000023                     ?_delay_release:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x0
   250  000023                     	ds	2
   251  000025                     
   252                           ; 1 bytes @ 0x2
   253  000025                     	ds	2
   254  000027                     delay_release@task_released:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x4
   258  000027                     	ds	2
   259  000029                     delay_release@i:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x6
   263  000029                     	ds	2
   264  00002B                     ??_ISR_timer:
   265                           
   266                           ; 1 bytes @ 0x8
   267  00002B                     	ds	18
   268  00003D                     OS_create_task@id:
   269                           	callstack 0
   270  00003D                     sem_init@s:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x1A
   274  00003D                     	ds	2
   275  00003F                     OS_create_task@prior:
   276                           	callstack 0
   277  00003F                     sem_init@val:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x1C
   281  00003F                     	ds	2
   282  000041                     OS_create_task@func:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x1E
   286  000041                     	ds	2
   287  000043                     
   288                           ; 1 bytes @ 0x20
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 14 in file "main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  2   16[None  ] int 
   301 ;; Registers used:
   302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   308 ;;      Params:         0       0       0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0       0       0
   311 ;;      Totals:         0       0       0       0       0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels required when called:   16
   314 ;; This function calls:
   315 ;;		_OS_config
   316 ;;		_OS_create_task
   317 ;;		_OS_start
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text0
   324  0013C0                     __ptext0:
   325                           	callstack 0
   326  0013C0                     _main:
   327                           	callstack 15
   328  0013C0                     
   329                           ;main.c: 16:     OS_config();
   330  0013C0  EC23  F00A         	call	_OS_config	;wreg free
   331                           
   332                           ;main.c: 20:     OS_create_task(1, 4, rot_read);
   333  0013C4  0E00               	movlw	0
   334  0013C6  6E3E               	movwf	(OS_create_task@id+1)^0,c
   335  0013C8  0E01               	movlw	1
   336  0013CA  6E3D               	movwf	OS_create_task@id^0,c
   337  0013CC  0E00               	movlw	0
   338  0013CE  6E40               	movwf	(OS_create_task@prior+1)^0,c
   339  0013D0  0E04               	movlw	4
   340  0013D2  6E3F               	movwf	OS_create_task@prior^0,c
   341  0013D4  0E80               	movlw	low _rot_read
   342  0013D6  6E41               	movwf	OS_create_task@func^0,c
   343  0013D8  0E14               	movlw	high _rot_read
   344  0013DA  6E42               	movwf	(OS_create_task@func+1)^0,c
   345  0013DC  EC51  F009         	call	_OS_create_task	;wreg free
   346                           
   347                           ;main.c: 21:     OS_create_task(2, 4, rot_process);
   348  0013E0  0E00               	movlw	0
   349  0013E2  6E3E               	movwf	(OS_create_task@id+1)^0,c
   350  0013E4  0E02               	movlw	2
   351  0013E6  6E3D               	movwf	OS_create_task@id^0,c
   352  0013E8  0E00               	movlw	0
   353  0013EA  6E40               	movwf	(OS_create_task@prior+1)^0,c
   354  0013EC  0E04               	movlw	4
   355  0013EE  6E3F               	movwf	OS_create_task@prior^0,c
   356  0013F0  0E1C               	movlw	low _rot_process
   357  0013F2  6E41               	movwf	OS_create_task@func^0,c
   358  0013F4  0E12               	movlw	high _rot_process
   359  0013F6  6E42               	movwf	(OS_create_task@func+1)^0,c
   360  0013F8  EC51  F009         	call	_OS_create_task	;wreg free
   361  0013FC                     
   362                           ;main.c: 23:     OS_start();
   363  0013FC  ECA8  F00A         	call	_OS_start	;wreg free
   364  001400                     l17:
   365  001400  EF00  F00A         	goto	l17
   366  001404  EF06  F000         	goto	start
   367  001408                     __end_of_main:
   368                           	callstack 0
   369                           
   370 ;; *************** function _OS_start *****************
   371 ;; Defined at:
   372 ;;		line 32 in file "kernel.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   386 ;;      Params:         0       0       0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0
   389 ;;      Totals:         0       0       0       0       0       0       0
   390 ;;Total ram usage:        0 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; Hardware stack levels required when called:   13
   393 ;; This function calls:
   394 ;;		_config_ad_conversor
   395 ;;		_config_flywheel
   396 ;;		_config_timer0
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text1
   403  001550                     __ptext1:
   404                           	callstack 0
   405  001550                     _OS_start:
   406                           	callstack 17
   407  001550                     
   408                           ;kernel.c: 33:     config_timer0();
   409  001550  EC85  F00A         	call	_config_timer0	;wreg free
   410                           
   411                           ;kernel.c: 36:     config_flywheel();
   412  001554  ECB1  F00A         	call	_config_flywheel	;wreg free
   413                           
   414                           ;kernel.c: 40:     config_ad_conversor();
   415  001558  EC72  F00A         	call	_config_ad_conversor	;wreg free
   416  00155C                     
   417                           ;kernel.c: 43:     (INTCONbits.GIE = 1);
   418  00155C  8EF2               	bsf	242,7,c	;volatile
   419  00155E                     
   420                           ;kernel.c: 44:     T0CONbits.TMR0ON;
   421  00155E  50D5               	movf	213,w,c	;volatile
   422  001560  0012               	return		;funcret
   423  001562                     __end_of_OS_start:
   424                           	callstack 0
   425                           
   426 ;; *************** function _config_timer0 *****************
   427 ;; Defined at:
   428 ;;		line 7 in file "config_hw.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   442 ;;      Params:         0       0       0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0
   445 ;;      Totals:         0       0       0       0       0       0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels used:    1
   448 ;; Hardware stack levels required when called:   12
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_OS_start
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text2
   457  00150A                     __ptext2:
   458                           	callstack 0
   459  00150A                     _config_timer0:
   460                           	callstack 17
   461  00150A                     
   462                           ;config_hw.c: 10:    INTCONbits.PEIE = 1;
   463  00150A  8CF2               	bsf	242,6,c	;volatile
   464                           
   465                           ;config_hw.c: 11:    INTCONbits.TMR0IE = 1;
   466  00150C  8AF2               	bsf	242,5,c	;volatile
   467                           
   468                           ;config_hw.c: 12:    INTCONbits.TMR0IF = 0;
   469  00150E  94F2               	bcf	242,2,c	;volatile
   470                           
   471                           ;config_hw.c: 13:    T0CONbits.PSA = 0;
   472  001510  96D5               	bcf	213,3,c	;volatile
   473  001512                     
   474                           ;config_hw.c: 14:    T0CONbits.T0PS = 0b010;
   475  001512  50D5               	movf	213,w,c	;volatile
   476  001514  0BF8               	andlw	-8
   477  001516  0902               	iorlw	2
   478  001518  6ED5               	movwf	213,c	;volatile
   479  00151A                     
   480                           ;config_hw.c: 15:    T0CONbits.T0CS = 0;
   481  00151A  9AD5               	bcf	213,5,c	;volatile
   482                           
   483                           ;config_hw.c: 16:    TMR0L = 0;
   484  00151C  0E00               	movlw	0
   485  00151E  6ED6               	movwf	214,c	;volatile
   486  001520  0012               	return		;funcret
   487  001522                     __end_of_config_timer0:
   488                           	callstack 0
   489                           
   490 ;; *************** function _config_flywheel *****************
   491 ;; Defined at:
   492 ;;		line 38 in file "config_hw.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, status,2
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   506 ;;      Params:         0       0       0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0       0       0
   509 ;;      Totals:         0       0       0       0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels used:    1
   512 ;; Hardware stack levels required when called:   12
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_OS_start
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           	psect	text3
   521  001562                     __ptext3:
   522                           	callstack 0
   523  001562                     _config_flywheel:
   524                           	callstack 17
   525  001562                     
   526                           ;config_hw.c: 40:     TRISD = 0x00;
   527  001562  0E00               	movlw	0
   528  001564  6E95               	movwf	149,c	;volatile
   529  001566  0012               	return		;funcret
   530  001568                     __end_of_config_flywheel:
   531                           	callstack 0
   532                           
   533 ;; *************** function _config_ad_conversor *****************
   534 ;; Defined at:
   535 ;;		line 19 in file "config_hw.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, status,2
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   549 ;;      Params:         0       0       0       0       0       0       0
   550 ;;      Locals:         0       0       0       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0       0       0
   552 ;;      Totals:         0       0       0       0       0       0       0
   553 ;;Total ram usage:        0 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:   12
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_OS_start
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text4
   564  0014E4                     __ptext4:
   565                           	callstack 0
   566  0014E4                     _config_ad_conversor:
   567                           	callstack 17
   568  0014E4                     
   569                           ;config_hw.c: 21:     TRISA = 0b00000001;
   570  0014E4  0E01               	movlw	1
   571  0014E6  6E92               	movwf	146,c	;volatile
   572                           
   573                           ;config_hw.c: 22:     ADCON0bits.CHS = 0b0000;
   574  0014E8  0EC3               	movlw	-61
   575  0014EA  16C2               	andwf	194,f,c	;volatile
   576  0014EC                     
   577                           ;config_hw.c: 24:     ADCON1bits.VCFG1 = 0;
   578  0014EC  9AC1               	bcf	193,5,c	;volatile
   579  0014EE                     
   580                           ;config_hw.c: 25:     ADCON1bits.VCFG0 = 0;
   581  0014EE  98C1               	bcf	193,4,c	;volatile
   582                           
   583                           ;config_hw.c: 27:     ADCON1bits.PCFG = 0b0000;
   584  0014F0  0EF0               	movlw	-16
   585  0014F2  16C1               	andwf	193,f,c	;volatile
   586                           
   587                           ;config_hw.c: 28:     ADCON1 = 0x0E;
   588  0014F4  0E0E               	movlw	14
   589  0014F6  6EC1               	movwf	193,c	;volatile
   590  0014F8                     
   591                           ;config_hw.c: 31:     ADCON2bits.ADFM = 1;
   592  0014F8  8EC0               	bsf	192,7,c	;volatile
   593                           
   594                           ;config_hw.c: 33:     ADCON2bits.ACQT = 0b111;
   595  0014FA  0E38               	movlw	56
   596  0014FC  12C0               	iorwf	192,f,c	;volatile
   597  0014FE                     
   598                           ;config_hw.c: 34:     ADCON0bits.ADON = 1;
   599  0014FE  80C2               	bsf	194,0,c	;volatile
   600                           
   601                           ;config_hw.c: 35:     ADCON2bits.ADCS = 0b110;
   602  001500  50C0               	movf	192,w,c	;volatile
   603  001502  0BF8               	andlw	-8
   604  001504  0906               	iorlw	6
   605  001506  6EC0               	movwf	192,c	;volatile
   606  001508  0012               	return		;funcret
   607  00150A                     __end_of_config_ad_conversor:
   608                           	callstack 0
   609                           
   610 ;; *************** function _OS_config *****************
   611 ;; Defined at:
   612 ;;		line 19 in file "kernel.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   626 ;;      Params:         0       0       0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:   15
   633 ;; This function calls:
   634 ;;		_OS_create_task
   635 ;;		_config_user_tasks
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text5
   642  001446                     __ptext5:
   643                           	callstack 0
   644  001446                     _OS_config:
   645                           	callstack 15
   646  001446                     
   647                           ;kernel.c: 21:     READY_QUEUE.nr_of_tasks = 0;
   648  001446  0E00               	movlw	0
   649  001448  CFE8 F39B          	movff	wreg,_READY_QUEUE+680
   650  00144C  0E00               	movlw	0
   651  00144E  CFE8 F39C          	movff	wreg,_READY_QUEUE+681
   652                           
   653                           ;kernel.c: 22:     READY_QUEUE.task_running = 0;
   654  001452  0E00               	movlw	0
   655  001454  CFE8 F399          	movff	wreg,_READY_QUEUE+678
   656  001458  0E00               	movlw	0
   657  00145A  CFE8 F39A          	movff	wreg,_READY_QUEUE+679
   658  00145E                     
   659                           ;kernel.c: 25:     OS_create_task(1, 1, idle);
   660  00145E  0E00               	movlw	0
   661  001460  6E3E               	movwf	(OS_create_task@id+1)^0,c
   662  001462  0E01               	movlw	1
   663  001464  6E3D               	movwf	OS_create_task@id^0,c
   664  001466  0E00               	movlw	0
   665  001468  6E40               	movwf	(OS_create_task@prior+1)^0,c
   666  00146A  0E01               	movlw	1
   667  00146C  6E3F               	movwf	OS_create_task@prior^0,c
   668  00146E  0EB4               	movlw	low _idle
   669  001470  6E41               	movwf	OS_create_task@func^0,c
   670  001472  0E14               	movlw	high _idle
   671  001474  6E42               	movwf	(OS_create_task@func+1)^0,c
   672  001476  EC51  F009         	call	_OS_create_task	;# 
   673  00147A                     
   674                           ;kernel.c: 29:     config_user_tasks();
   675  00147A  EC91  F00A         	call	_config_user_tasks	;wreg free
   676  00147E  0012               	return		;funcret
   677  001480                     __end_of_OS_config:
   678                           	callstack 0
   679                           
   680 ;; *************** function _config_user_tasks *****************
   681 ;; Defined at:
   682 ;;		line 5 in file "user_tasks.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   696 ;;      Params:         0       0       0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:   14
   703 ;; This function calls:
   704 ;;		_pipe_init
   705 ;; This function is called by:
   706 ;;		_OS_config
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text6
   711  001522                     __ptext6:
   712                           	callstack 0
   713  001522                     _config_user_tasks:
   714                           	callstack 15
   715  001522                     
   716                           ;user_tasks.c: 8:    pipe_init(&pipe_attitude, 1);
   717  001522  0E07               	movlw	low _pipe_attitude
   718  001524  0100               	movlb	0	; () banked
   719  001526  6F80               	movwf	pipe_init@pipe& (0+255),b
   720  001528  0E00               	movlw	high _pipe_attitude
   721  00152A  6F81               	movwf	(pipe_init@pipe+1)& (0+255),b
   722  00152C  0E00               	movlw	0
   723  00152E  6F83               	movwf	(pipe_init@tamanho+1)& (0+255),b
   724  001530  0E01               	movlw	1
   725  001532  6F82               	movwf	pipe_init@tamanho& (0+255),b
   726  001534  EC8B  F009         	call	_pipe_init	;# 
   727  001538  0012               	return		;funcret
   728  00153A                     __end_of_config_user_tasks:
   729                           	callstack 0
   730                           
   731 ;; *************** function _pipe_init *****************
   732 ;; Defined at:
   733 ;;		line 4 in file "pipe.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  pipe            2    0[BANK0 ] PTR struct pipe
   736 ;;		 -> pipe_attitude(28), 
   737 ;;  tamanho         2    2[BANK0 ] int 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   749 ;;      Params:         0       4       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0
   752 ;;      Totals:         0       4       0       0       0       0       0
   753 ;;Total ram usage:        4 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:   13
   756 ;; This function calls:
   757 ;;		_sem_init
   758 ;; This function is called by:
   759 ;;		_config_user_tasks
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text7
   764  001316                     __ptext7:
   765                           	callstack 0
   766  001316                     _pipe_init:
   767                           	callstack 15
   768  001316                     
   769                           ;pipe.c: 7:     pipe->size = pipe->read_pos = pipe->write_pos = 0;
   770  001316  0100               	movlb	0	; () banked
   771  001318  EE20 F008          	lfsr	2,8
   772  00131C  5180               	movf	pipe_init@pipe& (0+255),w,b
   773  00131E  26D9               	addwf	fsr2l,f,c
   774  001320  5181               	movf	(pipe_init@pipe+1)& (0+255),w,b
   775  001322  22DA               	addwfc	fsr2h,f,c
   776  001324  0E00               	movlw	0
   777  001326  6EDE               	movwf	postinc2,c
   778  001328  0E00               	movlw	0
   779  00132A  6EDD               	movwf	postdec2,c
   780  00132C  EE00 F006          	lfsr	0,6
   781  001330  5180               	movf	pipe_init@pipe& (0+255),w,b
   782  001332  26E9               	addwf	fsr0l,f,c
   783  001334  5181               	movf	(pipe_init@pipe+1)& (0+255),w,b
   784  001336  22EA               	addwfc	fsr0h,f,c
   785  001338  CFDE FFEE          	movff	postinc2,postinc0
   786  00133C  CFDD FFED          	movff	postdec2,postdec0
   787  001340  EE20 F004          	lfsr	2,4
   788  001344  5180               	movf	pipe_init@pipe& (0+255),w,b
   789  001346  26D9               	addwf	fsr2l,f,c
   790  001348  5181               	movf	(pipe_init@pipe+1)& (0+255),w,b
   791  00134A  22DA               	addwfc	fsr2h,f,c
   792  00134C  CFEE FFDE          	movff	postinc0,postinc2
   793  001350  CFED FFDD          	movff	postdec0,postdec2
   794  001354                     
   795                           ; BSR set to: 0
   796                           ;pipe.c: 8:     sem_init(&pipe->sem, 1);
   797  001354  0E0A               	movlw	10
   798  001356  2580               	addwf	pipe_init@pipe& (0+255),w,b
   799  001358  6E3D               	movwf	sem_init@s^0,c
   800  00135A  0E00               	movlw	0
   801  00135C  2181               	addwfc	(pipe_init@pipe+1)& (0+255),w,b
   802  00135E  6E3E               	movwf	(sem_init@s+1)^0,c
   803  001360  0E00               	movlw	0
   804  001362  6E40               	movwf	(sem_init@val+1)^0,c
   805  001364  0E01               	movlw	1
   806  001366  6E3F               	movwf	sem_init@val^0,c
   807  001368  ECB7  F009         	call	_sem_init	;wreg free
   808  00136C  0012               	return		;funcret
   809  00136E                     __end_of_pipe_init:
   810                           	callstack 0
   811                           
   812 ;; *************** function _sem_init *****************
   813 ;; Defined at:
   814 ;;		line 2 in file "semaphore.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  s               2   26[COMRAM] PTR struct semaphore
   817 ;;		 -> pipe_attitude(28), 
   818 ;;  val             2   28[COMRAM] int 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   830 ;;      Params:         4       0       0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0
   833 ;;      Totals:         4       0       0       0       0       0       0
   834 ;;Total ram usage:        4 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:   12
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_pipe_init
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text8
   845  00136E                     __ptext8:
   846                           	callstack 0
   847  00136E                     _sem_init:
   848                           	callstack 15
   849  00136E                     
   850                           ;semaphore.c: 3:     (INTCONbits.GIE = 0);
   851  00136E  9EF2               	bcf	242,7,c	;volatile
   852  001370                     
   853                           ;semaphore.c: 4:     s->s_count = val;
   854  001370  C03D  FFD9         	movff	sem_init@s,fsr2l
   855  001374  C03E  FFDA         	movff	sem_init@s+1,fsr2h
   856  001378  C03F  FFDE         	movff	sem_init@val,postinc2
   857  00137C  C040  FFDD         	movff	sem_init@val+1,postdec2
   858  001380                     
   859                           ;semaphore.c: 5:     s->s_queue.queue_size = s->s_queue.queue_wait_pos = s->s_queue.queu
      +                          e_post_pos = 0;
   860  001380  EE20 F010          	lfsr	2,16
   861  001384  503D               	movf	sem_init@s^0,w,c
   862  001386  26D9               	addwf	fsr2l,f,c
   863  001388  503E               	movf	(sem_init@s+1)^0,w,c
   864  00138A  22DA               	addwfc	fsr2h,f,c
   865  00138C  0E00               	movlw	0
   866  00138E  6EDE               	movwf	postinc2,c
   867  001390  0E00               	movlw	0
   868  001392  6EDD               	movwf	postdec2,c
   869  001394  EE00 F00E          	lfsr	0,14
   870  001398  503D               	movf	sem_init@s^0,w,c
   871  00139A  26E9               	addwf	fsr0l,f,c
   872  00139C  503E               	movf	(sem_init@s+1)^0,w,c
   873  00139E  22EA               	addwfc	fsr0h,f,c
   874  0013A0  CFDE FFEE          	movff	postinc2,postinc0
   875  0013A4  CFDD FFED          	movff	postdec2,postdec0
   876  0013A8  EE20 F00C          	lfsr	2,12
   877  0013AC  503D               	movf	sem_init@s^0,w,c
   878  0013AE  26D9               	addwf	fsr2l,f,c
   879  0013B0  503E               	movf	(sem_init@s+1)^0,w,c
   880  0013B2  22DA               	addwfc	fsr2h,f,c
   881  0013B4  CFEE FFDE          	movff	postinc0,postinc2
   882  0013B8  CFED FFDD          	movff	postdec0,postdec2
   883  0013BC                     
   884                           ;semaphore.c: 7:     (INTCONbits.GIE = 1);
   885  0013BC  8EF2               	bsf	242,7,c	;volatile
   886  0013BE  0012               	return		;funcret
   887  0013C0                     __end_of_sem_init:
   888                           	callstack 0
   889                           
   890 ;; *************** function _OS_create_task *****************
   891 ;; Defined at:
   892 ;;		line 60 in file "kernel.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  id              2   26[COMRAM] unsigned int 
   895 ;;  prior           2   28[COMRAM] unsigned int 
   896 ;;  func            2   30[COMRAM] PTR FTN()void 
   897 ;;		 -> idle(1), rot_process(1), rot_read(1), 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  new_task      113    2[BANK0 ] struct tcb
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   909 ;;      Params:         6       0       0       0       0       0       0
   910 ;;      Locals:         0     113       0       0       0       0       0
   911 ;;      Temps:          0       2       0       0       0       0       0
   912 ;;      Totals:         6     115       0       0       0       0       0
   913 ;;Total ram usage:      121 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; Hardware stack levels required when called:   13
   916 ;; This function calls:
   917 ;;		___wmul
   918 ;; This function is called by:
   919 ;;		_main
   920 ;;		_OS_config
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text9
   925  0012A2                     __ptext9:
   926                           	callstack 0
   927  0012A2                     _OS_create_task:
   928                           	callstack 17
   929  0012A2                     
   930                           ;kernel.c: 62:     tcb_t new_task;;kernel.c: 64:     new_task.task_id = id;
   931  0012A2  C03D  F082         	movff	OS_create_task@id,OS_create_task@new_task
   932  0012A6  C03E  F083         	movff	OS_create_task@id+1,OS_create_task@new_task+1
   933                           
   934                           ;kernel.c: 65:     new_task.task_prior = prior;
   935  0012AA  C03F  F084         	movff	OS_create_task@prior,OS_create_task@new_task+2
   936  0012AE  C040  F085         	movff	OS_create_task@prior+1,OS_create_task@new_task+3
   937  0012B2                     
   938                           ;kernel.c: 66:     new_task.task_func = func;
   939  0012B2  C041  F0EF         	movff	OS_create_task@func,OS_create_task@new_task+109
   940  0012B6  C042  F0F0         	movff	OS_create_task@func+1,OS_create_task@new_task+110
   941  0012BA                     
   942                           ;kernel.c: 67:     new_task.task_state = READY;
   943  0012BA  0E00               	movlw	0
   944  0012BC  0100               	movlb	0	; () banked
   945  0012BE  6F86               	movwf	(OS_create_task@new_task+4)& (0+255),b
   946  0012C0                     
   947                           ; BSR set to: 0
   948                           ;kernel.c: 68:     new_task.task_context.stack_size = 0;
   949  0012C0  0E00               	movlw	0
   950  0012C2  6FEE               	movwf	(OS_create_task@new_task+108)& (0+255),b
   951  0012C4  0E00               	movlw	0
   952  0012C6  6FED               	movwf	(OS_create_task@new_task+107)& (0+255),b
   953  0012C8                     
   954                           ; BSR set to: 0
   955                           ;kernel.c: 69:     new_task.task_delay_time = 0;
   956  0012C8  0E00               	movlw	0
   957  0012CA  6FF2               	movwf	(OS_create_task@new_task+112)& (0+255),b
   958  0012CC  0E00               	movlw	0
   959  0012CE  6FF1               	movwf	(OS_create_task@new_task+111)& (0+255),b
   960  0012D0                     
   961                           ; BSR set to: 0
   962                           ;kernel.c: 73:     READY_QUEUE.QUEUE[READY_QUEUE.nr_of_tasks] = new_task;
   963  0012D0  0E71               	movlw	113
   964  0012D2  6EE6               	movwf	postinc1,c
   965  0012D4  0E00               	movlw	0
   966  0012D6  6EE6               	movwf	postinc1,c
   967  0012D8  EE23  F09B         	lfsr	2,_READY_QUEUE+680
   968  0012DC  CFDE F080          	movff	postinc2,??_OS_create_task
   969  0012E0  CFDD F081          	movff	postdec2,??_OS_create_task+1
   970  0012E4  C080  FFE6         	movff	??_OS_create_task,postinc1
   971  0012E8  C081  FFE6         	movff	??_OS_create_task+1,postinc1
   972  0012EC  EC7B  F008         	call	___wmul	;wreg free
   973  0012F0  0EF3               	movlw	low _READY_QUEUE
   974  0012F2  2443               	addwf	btemp^0,w,c
   975  0012F4  6EE9               	movwf	fsr0l,c
   976  0012F6  0E00               	movlw	high _READY_QUEUE
   977  0012F8  2044               	addwfc	(btemp+1)^0,w,c
   978  0012FA  6EEA               	movwf	fsr0h,c
   979  0012FC  EE20  F082         	lfsr	2,OS_create_task@new_task
   980  001300  0E70               	movlw	112
   981  001302                     u1001:
   982  001302  CFDB FFEB          	movff	plusw2,plusw0
   983  001306  06E8               	decf	wreg,f,c
   984  001308  E2FC               	bc	u1001
   985  00130A                     
   986                           ;kernel.c: 74:     READY_QUEUE.nr_of_tasks++;
   987  00130A  EE23  F09B         	lfsr	2,_READY_QUEUE+680
   988  00130E  2ADE               	incf	postinc2,f,c
   989  001310  0E00               	movlw	0
   990  001312  22DD               	addwfc	postdec2,f,c
   991  001314  0012               	return		;funcret
   992  001316                     __end_of_OS_create_task:
   993                           	callstack 0
   994                           
   995 ;; *************** function ___wmul *****************
   996 ;; Defined at:
   997 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  multiplier      2  [STACK] unsigned int 
  1000 ;;  multiplicand    2  [STACK] unsigned int 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  product         2  [STACK] unsigned int 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  2  [STACK] unsigned int 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1012 ;;      Params:         0       0       0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0
  1015 ;;      Totals:         0       0       0       0       0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:   12
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_OS_create_task
  1023 ;;		_delay_release
  1024 ;;		_ISR_timer
  1025 ;;		_PRIORITY_sched
  1026 ;;		_sort_ready_queue
  1027 ;;		_OS_delay
  1028 ;;		_get_task_id
  1029 ;; This function uses a reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text10
  1033  0010F6                     __ptext10:
  1034                           	callstack 0
  1035  0010F6                     ___wmul:
  1036                           	callstack 0
  1037                           
  1038                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1039  0010F6  52E6               	movf	postinc1,f,c
  1040  0010F8  52E6               	movf	postinc1,f,c
  1041  0010FA                     
  1042                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1043  0010FA  0EFA               	movlw	-6
  1044  0010FC  CFE3 F04E          	movff	plusw1,btemp+11
  1045                           
  1046                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1047  001100  0EFC               	movlw	-4
  1048  001102  50E3               	movf	plusw1,w,c
  1049  001104  024E               	mulwf	(btemp+11)^0,c
  1050                           
  1051                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1052  001106  0EFE               	movlw	-2
  1053  001108  CFF3 FFE3          	movff	prodl,plusw1
  1054  00110C  0EFF               	movlw	-1
  1055  00110E  CFF4 FFE3          	movff	prodh,plusw1
  1056  001112                     
  1057                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1058  001112  0EFB               	movlw	251
  1059  001114  24E1               	addwf	fsr1l,w,c
  1060  001116  6ED9               	movwf	fsr2l,c
  1061  001118  0EFF               	movlw	255
  1062  00111A  20E2               	addwfc	fsr1h,w,c
  1063  00111C  6EDA               	movwf	fsr2h,c
  1064  00111E  50DF               	movf	indf2,w,c
  1065  001120  6E4E               	movwf	(btemp+11)^0,c
  1066                           
  1067                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1068  001122  0EFC               	movlw	-4
  1069  001124  50E3               	movf	plusw1,w,c
  1070  001126  024E               	mulwf	(btemp+11)^0,c
  1071  001128  CFF3 FFF4          	movff	prodl,prodh
  1072  00112C  6AF3               	clrf	243,c
  1073                           
  1074                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1075  00112E  50E1               	movf	fsr1l,w,c
  1076  001130  0FFE               	addlw	-2
  1077  001132  6ED9               	movwf	fsr2l,c
  1078  001134  50E2               	movf	fsr1h,w,c
  1079  001136  6EDA               	movwf	fsr2h,c
  1080  001138  0EFF               	movlw	255
  1081  00113A  22DA               	addwfc	fsr2h,f,c
  1082  00113C  50F3               	movf	243,w,c
  1083  00113E  26DE               	addwf	postinc2,f,c
  1084  001140  50F4               	movf	244,w,c
  1085  001142  22DD               	addwfc	postdec2,f,c
  1086  001144                     
  1087                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1088  001144  0EFA               	movlw	-6
  1089  001146  CFE3 F04E          	movff	plusw1,btemp+11
  1090                           
  1091                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1092  00114A  0EFD               	movlw	253
  1093  00114C  24E1               	addwf	fsr1l,w,c
  1094  00114E  6ED9               	movwf	fsr2l,c
  1095  001150  0EFF               	movlw	255
  1096  001152  20E2               	addwfc	fsr1h,w,c
  1097  001154  6EDA               	movwf	fsr2h,c
  1098  001156  50DF               	movf	indf2,w,c
  1099  001158  024E               	mulwf	(btemp+11)^0,c
  1100  00115A  CFF3 FFF4          	movff	prodl,prodh
  1101  00115E  6AF3               	clrf	243,c
  1102                           
  1103                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1104  001160  50E1               	movf	fsr1l,w,c
  1105  001162  0FFE               	addlw	-2
  1106  001164  6ED9               	movwf	fsr2l,c
  1107  001166  50E2               	movf	fsr1h,w,c
  1108  001168  6EDA               	movwf	fsr2h,c
  1109  00116A  0EFF               	movlw	255
  1110  00116C  22DA               	addwfc	fsr2h,f,c
  1111  00116E  50F3               	movf	243,w,c
  1112  001170  26DE               	addwf	postinc2,f,c
  1113  001172  50F4               	movf	244,w,c
  1114  001174  22DD               	addwfc	postdec2,f,c
  1115  001176                     
  1116                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1117  001176  0EFE               	movlw	-2
  1118  001178  CFE3 F043          	movff	plusw1,btemp
  1119  00117C  0EFF               	movlw	-1
  1120  00117E  CFE3 F044          	movff	plusw1,btemp+1
  1121  001182                     
  1122                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  1123  001182  0EFA               	movlw	250
  1124  001184  26E1               	addwf	fsr1l,f,c
  1125  001186  0EFF               	movlw	255
  1126  001188  22E2               	addwfc	fsr1h,f,c
  1127  00118A  0012               	return		;funcret
  1128  00118C                     __end_of___wmul:
  1129                           	callstack 0
  1130                           
  1131 ;; *************** function _idle *****************
  1132 ;; Defined at:
  1133 ;;		line 11 in file "kernel.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1  [STACK] void 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, btemp+11
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1147 ;;      Params:         0       0       0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0
  1150 ;;      Totals:         0       0       0       0       0       0       0
  1151 ;;Total ram usage:        0 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    5
  1154 ;; This function calls:
  1155 ;;		Nothing
  1156 ;; This function is called by:
  1157 ;;		_ROUND_ROBIN_sched
  1158 ;;		_OS_config
  1159 ;; This function uses a reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text11
  1163  0014B4                     __ptext11:
  1164                           	callstack 0
  1165  0014B4                     _idle:
  1166                           	callstack 21
  1167  0014B4                     
  1168                           ;kernel.c: 12:     TRISDbits.RD3 = 0;
  1169  0014B4  9695               	bcf	149,3,c	;volatile
  1170  0014B6                     l1413:
  1171                           
  1172                           ;kernel.c: 14:         LATDbits.LATD3 = ~PORTDbits.RD3;
  1173  0014B6  B683               	btfsc	131,3,c	;volatile
  1174  0014B8  EF60  F00A         	goto	u47_21
  1175  0014BC  EF63  F00A         	goto	u47_20
  1176  0014C0                     u47_21:
  1177  0014C0  0E01               	movlw	1
  1178  0014C2  EF64  F00A         	goto	u47_26
  1179  0014C6                     u47_20:
  1180  0014C6  0E00               	movlw	0
  1181  0014C8                     u47_26:
  1182  0014C8  0AFF               	xorlw	255
  1183  0014CA  6E4E               	movwf	(btemp+11)^0,c
  1184  0014CC  464E               	rlncf	(btemp+11)^0,f,c
  1185  0014CE  464E               	rlncf	(btemp+11)^0,f,c
  1186  0014D0  464E               	rlncf	(btemp+11)^0,f,c
  1187  0014D2  508C               	movf	140,w,c	;volatile
  1188  0014D4  184E               	xorwf	(btemp+11)^0,w,c
  1189  0014D6  0BF7               	andlw	-9
  1190  0014D8  184E               	xorwf	(btemp+11)^0,w,c
  1191  0014DA  6E8C               	movwf	140,c	;volatile
  1192  0014DC                     
  1193                           ;kernel.c: 15:         __nop();
  1194  0014DC  F000               	nop	
  1195  0014DE  EF5B  F00A         	goto	l1413
  1196                           
  1197                           ; _idle: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize 
      +                          = 0, vargsize = 0
  1198  0014E2  0012               	return		;funcret
  1199  0014E4                     __end_of_idle:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _rot_read *****************
  1203 ;; Defined at:
  1204 ;;		line 14 in file "user_tasks.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  valor_rot_li    2  [STACK] unsigned int 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1  [STACK] void 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1218 ;;      Params:         0       0       0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:   11
  1225 ;; This function calls:
  1226 ;;		_pipe_write
  1227 ;;		_rot_ad_read
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text12
  1234  001480                     __ptext12:
  1235                           	callstack 0
  1236  001480                     _rot_read:
  1237                           	callstack 0
  1238                           
  1239                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1240  001480  52E6               	movf	postinc1,f,c
  1241  001482  52E6               	movf	postinc1,f,c
  1242  001484                     l198:
  1243  001484                     
  1244                           ;user_tasks.c: 17:         valor_rot_lido = rot_ad_read();
  1245  001484  ECC6  F008         	call	_rot_ad_read	;wreg free
  1246                           
  1247                           ;stkvar	rot_read@valor_rot_lido @ sp[(-2)+0]
  1248  001488  0EFE               	movlw	-2
  1249  00148A  C043  FFE3         	movff	btemp,plusw1
  1250  00148E  0EFF               	movlw	-1
  1251  001490  C044  FFE3         	movff	btemp+1,plusw1
  1252  001494                     
  1253                           ;user_tasks.c: 18:         pipe_write(&pipe_attitude, valor_rot_lido);
  1254                           ;stkvar	rot_read@valor_rot_lido @ sp[(-2)+0]
  1255  001494  0EFE               	movlw	-2
  1256  001496  CFE3 FFE6          	movff	plusw1,postinc1
  1257  00149A  CFE3 FFE6          	movff	plusw1,postinc1
  1258  00149E  0E07               	movlw	low _pipe_attitude
  1259  0014A0  6EE6               	movwf	postinc1,c
  1260  0014A2  0E00               	movlw	high _pipe_attitude
  1261  0014A4  6EE6               	movwf	postinc1,c
  1262  0014A6  EC09  F004         	call	_pipe_write	;wreg free
  1263  0014AA  EF42  F00A         	goto	l198
  1264                           
  1265                           ; _rot_read: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  1266  0014AE  52E5               	movf	postdec1,f,c
  1267  0014B0  52E5               	movf	postdec1,f,c
  1268  0014B2  0012               	return		;funcret
  1269  0014B4                     __end_of_rot_read:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _rot_ad_read *****************
  1273 ;; Defined at:
  1274 ;;		line 3 in file "conversor.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  temperatura_    2  [STACK] int 
  1279 ;;  resultadoAD     2  [STACK] int 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  2  [STACK] int 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1289 ;;      Params:         0       0       0       0       0       0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0
  1292 ;;      Totals:         0       0       0       0       0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    6
  1296 ;; This function calls:
  1297 ;;		___awdiv
  1298 ;; This function is called by:
  1299 ;;		_rot_read
  1300 ;; This function uses a reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text13
  1304  00118C                     __ptext13:
  1305                           	callstack 0
  1306  00118C                     _rot_ad_read:
  1307                           	callstack 0
  1308                           
  1309                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1310  00118C  52E6               	movf	postinc1,f,c
  1311  00118E  52E6               	movf	postinc1,f,c
  1312  001190  52E6               	movf	postinc1,f,c
  1313  001192  52E6               	movf	postinc1,f,c
  1314  001194                     
  1315                           ;conversor.c: 4:     (INTCONbits.GIE = 0);
  1316  001194  9EF2               	bcf	242,7,c	;volatile
  1317                           
  1318                           ;conversor.c: 6:     ADCON0bits.ADON = 1;
  1319  001196  80C2               	bsf	194,0,c	;volatile
  1320  001198                     
  1321                           ;conversor.c: 7:     ADCON0bits.CHS = 0b0000;
  1322  001198  0EC3               	movlw	-61
  1323  00119A  16C2               	andwf	194,f,c	;volatile
  1324  00119C                     
  1325                           ;conversor.c: 10:     ADCON1bits.VCFG1 = 0;
  1326  00119C  9AC1               	bcf	193,5,c	;volatile
  1327  00119E                     
  1328                           ;conversor.c: 11:     ADCON1bits.VCFG0 = 0;
  1329  00119E  98C1               	bcf	193,4,c	;volatile
  1330                           
  1331                           ;conversor.c: 14:     ADCON1bits.PCFG = 0b1110;
  1332  0011A0  50C1               	movf	193,w,c	;volatile
  1333  0011A2  0BF0               	andlw	-16
  1334  0011A4  090E               	iorlw	14
  1335  0011A6  6EC1               	movwf	193,c	;volatile
  1336  0011A8                     
  1337                           ;conversor.c: 17:     ADCON2bits.ADFM = 1;
  1338  0011A8  8EC0               	bsf	192,7,c	;volatile
  1339  0011AA                     
  1340                           ;conversor.c: 20:     ADCON0bits.GODONE = 1;
  1341  0011AA  82C2               	bsf	194,1,c	;volatile
  1342  0011AC                     l328:
  1343  0011AC  B2C2               	btfsc	194,1,c	;volatile
  1344  0011AE  EFDB  F008         	goto	u27_21
  1345  0011B2  EFDD  F008         	goto	u27_20
  1346  0011B6                     u27_21:
  1347  0011B6  EFD6  F008         	goto	l328
  1348  0011BA                     u27_20:
  1349  0011BA                     
  1350                           ;conversor.c: 26:     int resultadoAD = ADRES;
  1351                           ;stkvar	rot_ad_read@resultadoAD @ sp[(-4)+2]
  1352  0011BA  0EFE               	movlw	-2
  1353  0011BC  CFC3 FFE3          	movff	4035,plusw1	;volatile
  1354  0011C0  0EFF               	movlw	-1
  1355  0011C2  CFC4 FFE3          	movff	4036,plusw1	;volatile
  1356  0011C6                     
  1357                           ;conversor.c: 28:     (INTCONbits.GIE = 1);
  1358  0011C6  8EF2               	bsf	242,7,c	;volatile
  1359  0011C8                     
  1360                           ;conversor.c: 30:     int temperatura_ambiente = (150*resultadoAD)/307;
  1361  0011C8  0E33               	movlw	51
  1362  0011CA  6EE6               	movwf	postinc1,c
  1363  0011CC  0E01               	movlw	1
  1364  0011CE  6EE6               	movwf	postinc1,c
  1365                           
  1366                           ;stkvar	rot_ad_read@resultadoAD @ sp[(-6)+2]
  1367  0011D0  0EFC               	movlw	-4
  1368  0011D2  CFE3 F04D          	movff	plusw1,btemp+10
  1369  0011D6  0EFD               	movlw	-3
  1370  0011D8  CFE3 F04E          	movff	plusw1,btemp+11
  1371  0011DC  0E96               	movlw	150
  1372  0011DE  024D               	mulwf	(btemp+10)^0,c
  1373  0011E0  CFF3 F04B          	movff	prodl,btemp+8
  1374  0011E4  CFF4 F04C          	movff	prodh,btemp+9
  1375  0011E8  024E               	mulwf	(btemp+11)^0,c
  1376  0011EA  50F3               	movf	prodl,w,c
  1377  0011EC  264C               	addwf	(btemp+9)^0,f,c
  1378  0011EE  C04B  FFE6         	movff	btemp+8,postinc1
  1379  0011F2  C04C  FFE6         	movff	btemp+9,postinc1
  1380  0011F6  EC9F  F005         	call	___awdiv	;wreg free
  1381                           
  1382                           ;stkvar	rot_ad_read@temperatura_ambiente @ sp[(-4)+0]
  1383  0011FA  0EFC               	movlw	-4
  1384  0011FC  C043  FFE3         	movff	btemp,plusw1
  1385  001200  0EFD               	movlw	-3
  1386  001202  C044  FFE3         	movff	btemp+1,plusw1
  1387  001206                     
  1388                           ;conversor.c: 32:     return temperatura_ambiente;
  1389                           ;stkvar	rot_ad_read@temperatura_ambiente @ sp[(-4)+0]
  1390  001206  0EFC               	movlw	-4
  1391  001208  CFE3 F043          	movff	plusw1,btemp
  1392  00120C  0EFD               	movlw	-3
  1393  00120E  CFE3 F044          	movff	plusw1,btemp+1
  1394  001212                     
  1395                           ; _rot_ad_read: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  1396  001212  52E5               	movf	postdec1,f,c
  1397  001214  52E5               	movf	postdec1,f,c
  1398  001216  52E5               	movf	postdec1,f,c
  1399  001218  52E5               	movf	postdec1,f,c
  1400  00121A  0012               	return		;funcret
  1401  00121C                     __end_of_rot_ad_read:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function ___awdiv *****************
  1405 ;; Defined at:
  1406 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  dividend        2  [STACK] int 
  1409 ;;  divisor         2  [STACK] int 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  quotient        2  [STACK] int 
  1412 ;;  sign            1  [STACK] unsigned char 
  1413 ;;  counter         1  [STACK] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  2  [STACK] int 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1423 ;;      Params:         0       0       0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0
  1426 ;;      Totals:         0       0       0       0       0       0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    5
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_rot_ad_read
  1434 ;; This function uses a reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text14
  1438  000B3E                     __ptext14:
  1439                           	callstack 0
  1440  000B3E                     ___awdiv:
  1441                           	callstack 0
  1442                           
  1443                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1444  000B3E  52E6               	movf	postinc1,f,c
  1445  000B40  52E6               	movf	postinc1,f,c
  1446  000B42  52E6               	movf	postinc1,f,c
  1447  000B44  52E6               	movf	postinc1,f,c
  1448  000B46                     
  1449                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1450  000B46  0EFE               	movlw	-2
  1451  000B48  6AE3               	clrf	plusw1,c
  1452  000B4A                     
  1453                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1454  000B4A  0EF9               	movlw	-7
  1455  000B4C  BEE3               	btfsc	plusw1,7,c
  1456  000B4E  EFAD  F005         	goto	u13_20
  1457  000B52  EFAB  F005         	goto	u13_21
  1458  000B56                     u13_21:
  1459  000B56  EFB6  F005         	goto	l1183
  1460  000B5A                     u13_20:
  1461  000B5A                     
  1462                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1463                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1464  000B5A  0EF8               	movlw	-8
  1465  000B5C  6CE3               	negf	plusw1,c
  1466  000B5E  0EF9               	movlw	-7
  1467  000B60  1EE3               	comf	plusw1,f,c
  1468  000B62  B0D8               	btfsc	status,0,c
  1469  000B64  2AE3               	incf	plusw1,f,c
  1470  000B66                     
  1471                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1472  000B66  0EFE               	movlw	-2
  1473  000B68  6AE3               	clrf	plusw1,c
  1474  000B6A  2AE3               	incf	plusw1,f,c
  1475  000B6C                     l1183:
  1476                           
  1477                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1478  000B6C  0EFB               	movlw	-5
  1479  000B6E  BEE3               	btfsc	plusw1,7,c
  1480  000B70  EFBE  F005         	goto	u14_20
  1481  000B74  EFBC  F005         	goto	u14_21
  1482  000B78                     u14_21:
  1483  000B78  EFC6  F005         	goto	l1189
  1484  000B7C                     u14_20:
  1485  000B7C                     
  1486                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1487                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1488  000B7C  0EFA               	movlw	-6
  1489  000B7E  6CE3               	negf	plusw1,c
  1490  000B80  0EFB               	movlw	-5
  1491  000B82  1EE3               	comf	plusw1,f,c
  1492  000B84  B0D8               	btfsc	status,0,c
  1493  000B86  2AE3               	incf	plusw1,f,c
  1494  000B88                     
  1495                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1496  000B88  0EFE               	movlw	-2
  1497  000B8A  70E3               	btg	plusw1,0,c
  1498  000B8C                     l1189:
  1499                           
  1500                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1501  000B8C  0EFC               	movlw	-4
  1502  000B8E  6AE3               	clrf	plusw1,c
  1503  000B90  0EFD               	movlw	-3
  1504  000B92  6AE3               	clrf	plusw1,c
  1505  000B94                     
  1506                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1507  000B94  0EF8               	movlw	-8
  1508  000B96  CFE3 F043          	movff	plusw1,btemp
  1509  000B9A  0EF9               	movlw	-7
  1510  000B9C  50E3               	movf	plusw1,w,c
  1511  000B9E  1043               	iorwf	btemp^0,w,c
  1512  000BA0  B4D8               	btfsc	status,2,c
  1513  000BA2  EFD5  F005         	goto	u15_21
  1514  000BA6  EFD7  F005         	goto	u15_20
  1515  000BAA                     u15_21:
  1516  000BAA  EF43  F006         	goto	l1213
  1517  000BAE                     u15_20:
  1518  000BAE                     
  1519                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  1520  000BAE  0EFF               	movlw	-1
  1521  000BB0  6AE3               	clrf	plusw1,c
  1522  000BB2  2AE3               	incf	plusw1,f,c
  1523  000BB4  EFED  F005         	goto	l1199
  1524  000BB8                     l1195:
  1525                           
  1526                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1527  000BB8  0EF8               	movlw	-8
  1528  000BBA  50E3               	movf	plusw1,w,c
  1529  000BBC  90D8               	bcf	status,0,c
  1530  000BBE  34E8               	rlcf	wreg,w,c
  1531  000BC0  6E43               	movwf	btemp^0,c
  1532  000BC2  0EF8               	movlw	-8
  1533  000BC4  C043  FFE3         	movff	btemp,plusw1
  1534  000BC8  0EF9               	movlw	-7
  1535  000BCA  50E3               	movf	plusw1,w,c
  1536  000BCC  34E8               	rlcf	wreg,w,c
  1537  000BCE  6E43               	movwf	btemp^0,c
  1538  000BD0  0EF9               	movlw	-7
  1539  000BD2  C043  FFE3         	movff	btemp,plusw1
  1540  000BD6                     
  1541                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  1542  000BD6  0EFF               	movlw	-1
  1543  000BD8  2AE3               	incf	plusw1,f,c
  1544  000BDA                     l1199:
  1545                           
  1546                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1547  000BDA  0EF9               	movlw	-7
  1548  000BDC  AEE3               	btfss	plusw1,7,c
  1549  000BDE  EFF3  F005         	goto	u16_21
  1550  000BE2  EFF5  F005         	goto	u16_20
  1551  000BE6                     u16_21:
  1552  000BE6  EFDC  F005         	goto	l1195
  1553  000BEA                     u16_20:
  1554  000BEA                     l1201:
  1555                           
  1556                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1557  000BEA  0EFC               	movlw	-4
  1558  000BEC  50E3               	movf	plusw1,w,c
  1559  000BEE  90D8               	bcf	status,0,c
  1560  000BF0  34E8               	rlcf	wreg,w,c
  1561  000BF2  6E43               	movwf	btemp^0,c
  1562  000BF4  0EFC               	movlw	-4
  1563  000BF6  C043  FFE3         	movff	btemp,plusw1
  1564  000BFA  0EFD               	movlw	-3
  1565  000BFC  50E3               	movf	plusw1,w,c
  1566  000BFE  34E8               	rlcf	wreg,w,c
  1567  000C00  6E43               	movwf	btemp^0,c
  1568  000C02  0EFD               	movlw	-3
  1569  000C04  C043  FFE3         	movff	btemp,plusw1
  1570  000C08                     
  1571                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1572  000C08  0EF8               	movlw	-8
  1573  000C0A  CFE3 F04D          	movff	plusw1,btemp+10
  1574  000C0E  0EF9               	movlw	-7
  1575  000C10  CFE3 F04E          	movff	plusw1,btemp+11
  1576                           
  1577                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1578  000C14  0EFA               	movlw	-6
  1579  000C16  CFE3 F04B          	movff	plusw1,btemp+8
  1580  000C1A  0EFB               	movlw	-5
  1581  000C1C  CFE3 F04C          	movff	plusw1,btemp+9
  1582  000C20  504D               	movf	(btemp+10)^0,w,c
  1583  000C22  5C4B               	subwf	(btemp+8)^0,w,c
  1584  000C24  504E               	movf	(btemp+11)^0,w,c
  1585  000C26  584C               	subwfb	(btemp+9)^0,w,c
  1586  000C28  A0D8               	btfss	status,0,c
  1587  000C2A  EF19  F006         	goto	u17_21
  1588  000C2E  EF1B  F006         	goto	u17_20
  1589  000C32                     u17_21:
  1590  000C32  EF2F  F006         	goto	l1209
  1591  000C36                     u17_20:
  1592  000C36                     
  1593                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1594                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1595  000C36  0EFA               	movlw	-6
  1596  000C38  50E3               	movf	plusw1,w,c
  1597  000C3A  6E43               	movwf	btemp^0,c
  1598  000C3C  0EF8               	movlw	-8
  1599  000C3E  50E3               	movf	plusw1,w,c
  1600  000C40  5E43               	subwf	btemp^0,f,c
  1601  000C42  0EFA               	movlw	-6
  1602  000C44  C043  FFE3         	movff	btemp,plusw1
  1603  000C48  0EFB               	movlw	-5
  1604  000C4A  50E3               	movf	plusw1,w,c
  1605  000C4C  6E43               	movwf	btemp^0,c
  1606  000C4E  0EF9               	movlw	-7
  1607  000C50  50E3               	movf	plusw1,w,c
  1608  000C52  5A43               	subwfb	btemp^0,f,c
  1609  000C54  0EFB               	movlw	-5
  1610  000C56  C043  FFE3         	movff	btemp,plusw1
  1611  000C5A                     
  1612                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1613  000C5A  0EFC               	movlw	-4
  1614  000C5C  80E3               	bsf	plusw1,0,c
  1615  000C5E                     l1209:
  1616                           
  1617                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1618  000C5E  90D8               	bcf	status,0,c
  1619  000C60  0EF9               	movlw	-7
  1620  000C62  32E3               	rrcf	plusw1,f,c
  1621  000C64  0EF8               	movlw	-8
  1622  000C66  32E3               	rrcf	plusw1,f,c
  1623  000C68                     
  1624                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  1625  000C68  0EFF               	movlw	-1
  1626  000C6A  50E3               	movf	plusw1,w,c
  1627  000C6C  6E43               	movwf	btemp^0,c
  1628  000C6E  0E01               	movlw	1
  1629  000C70  5E43               	subwf	btemp^0,f,c
  1630  000C72  0EFF               	movlw	-1
  1631  000C74  C043  FFE3         	movff	btemp,plusw1
  1632  000C78  A4D8               	btfss	status,2,c
  1633  000C7A  EF41  F006         	goto	u18_21
  1634  000C7E  EF43  F006         	goto	u18_20
  1635  000C82                     u18_21:
  1636  000C82  EFF5  F005         	goto	l1201
  1637  000C86                     u18_20:
  1638  000C86                     l1213:
  1639                           
  1640                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1641  000C86  0EFE               	movlw	-2
  1642  000C88  50E3               	movf	plusw1,w,c
  1643  000C8A  B4D8               	btfsc	status,2,c
  1644  000C8C  EF4A  F006         	goto	u19_21
  1645  000C90  EF4C  F006         	goto	u19_20
  1646  000C94                     u19_21:
  1647  000C94  EF52  F006         	goto	l1217
  1648  000C98                     u19_20:
  1649  000C98                     
  1650                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1651                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1652  000C98  0EFC               	movlw	-4
  1653  000C9A  6CE3               	negf	plusw1,c
  1654  000C9C  0EFD               	movlw	-3
  1655  000C9E  1EE3               	comf	plusw1,f,c
  1656  000CA0  B0D8               	btfsc	status,0,c
  1657  000CA2  2AE3               	incf	plusw1,f,c
  1658  000CA4                     l1217:
  1659                           
  1660                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1661  000CA4  0EFC               	movlw	-4
  1662  000CA6  CFE3 F043          	movff	plusw1,btemp
  1663  000CAA  0EFD               	movlw	-3
  1664  000CAC  CFE3 F044          	movff	plusw1,btemp+1
  1665  000CB0                     
  1666                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  1667  000CB0  0EF8               	movlw	248
  1668  000CB2  26E1               	addwf	fsr1l,f,c
  1669  000CB4  0EFF               	movlw	255
  1670  000CB6  22E2               	addwfc	fsr1h,f,c
  1671  000CB8  0012               	return		;funcret
  1672  000CBA                     __end_of___awdiv:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function _pipe_write *****************
  1676 ;; Defined at:
  1677 ;;		line 32 in file "pipe.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  pipe            2  [STACK] PTR struct pipe
  1680 ;;		 -> pipe_attitude(28), 
  1681 ;;  dado            2  [STACK] int 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  write_flag      1  [STACK] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1  [STACK] void 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1693 ;;      Params:         0       0       0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0       0       0
  1696 ;;      Totals:         0       0       0       0       0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:   10
  1700 ;; This function calls:
  1701 ;;		_sem_get_value
  1702 ;;		_sem_post
  1703 ;;		_sem_wait
  1704 ;; This function is called by:
  1705 ;;		_rot_read
  1706 ;; This function uses a reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text15
  1710  000812                     __ptext15:
  1711                           	callstack 0
  1712  000812                     _pipe_write:
  1713                           	callstack 0
  1714                           
  1715                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1716  000812  52E6               	movf	postinc1,f,c
  1717  000814                     
  1718                           ;pipe.c: 33:     (INTCONbits.GIE = 0);
  1719  000814  9EF2               	bcf	242,7,c	;volatile
  1720  000816                     
  1721                           ;pipe.c: 35:     bool write_flag = 0;
  1722                           ;stkvar	pipe_write@write_flag @ sp[(-1)+0]
  1723  000816  0EFF               	movlw	-1
  1724  000818  6AE3               	clrf	plusw1,c
  1725  00081A                     l1761:
  1726                           
  1727                           ;pipe.c: 38:         if(pipe->size < 2) {
  1728                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1729  00081A  0EFD               	movlw	-3
  1730  00081C  CFE3 F04D          	movff	plusw1,btemp+10
  1731  000820  0EFE               	movlw	-2
  1732  000822  CFE3 F04E          	movff	plusw1,btemp+11
  1733  000826  0E04               	movlw	4
  1734  000828  244D               	addwf	(btemp+10)^0,w,c
  1735  00082A  6ED9               	movwf	fsr2l,c
  1736  00082C  0E00               	movlw	0
  1737  00082E  204E               	addwfc	(btemp+11)^0,w,c
  1738  000830  6EDA               	movwf	fsr2h,c
  1739  000832  0E01               	movlw	1
  1740  000834  50DB               	movf	plusw2,w,c
  1741  000836  E107               	bnz	u74_21
  1742  000838  0E02               	movlw	2
  1743  00083A  5CDE               	subwf	postinc2,w,c
  1744  00083C  B0D8               	btfsc	status,0,c
  1745  00083E  EF23  F004         	goto	u74_21
  1746  000842  EF25  F004         	goto	u74_20
  1747  000846                     u74_21:
  1748  000846  EFB7  F004         	goto	l309
  1749  00084A                     u74_20:
  1750  00084A                     
  1751                           ;pipe.c: 39:             pipe->msg[pipe->write_pos] = dado;
  1752                           ;stkvar	pipe_write@dado @ sp[(-1)+-4]
  1753  00084A  50E1               	movf	fsr1l,w,c
  1754  00084C  0FFB               	addlw	-5
  1755  00084E  6ED9               	movwf	fsr2l,c
  1756  000850  50E2               	movf	fsr1h,w,c
  1757  000852  6EDA               	movwf	fsr2h,c
  1758  000854  0EFF               	movlw	255
  1759  000856  22DA               	addwfc	fsr2h,f,c
  1760                           
  1761                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1762  000858  0EFD               	movlw	-3
  1763  00085A  CFE3 F04D          	movff	plusw1,btemp+10
  1764  00085E  0EFE               	movlw	-2
  1765  000860  CFE3 F04E          	movff	plusw1,btemp+11
  1766  000864  0E08               	movlw	8
  1767  000866  244D               	addwf	(btemp+10)^0,w,c
  1768  000868  6EE9               	movwf	fsr0l,c
  1769  00086A  0E00               	movlw	0
  1770  00086C  204E               	addwfc	(btemp+11)^0,w,c
  1771  00086E  6EEA               	movwf	fsr0h,c
  1772  000870  CFEE F04D          	movff	postinc0,btemp+10
  1773  000874  CFED F04E          	movff	postdec0,btemp+11
  1774  000878  90D8               	bcf	status,0,c
  1775  00087A  344D               	rlcf	(btemp+10)^0,w,c
  1776  00087C  6E4B               	movwf	(btemp+8)^0,c
  1777  00087E  344E               	rlcf	(btemp+11)^0,w,c
  1778  000880  6E4C               	movwf	(btemp+9)^0,c
  1779                           
  1780                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1781  000882  0EFD               	movlw	-3
  1782  000884  CFE3 F04D          	movff	plusw1,btemp+10
  1783  000888  0EFE               	movlw	-2
  1784  00088A  CFE3 F04E          	movff	plusw1,btemp+11
  1785  00088E  504B               	movf	(btemp+8)^0,w,c
  1786  000890  244D               	addwf	(btemp+10)^0,w,c
  1787  000892  6EE9               	movwf	fsr0l,c
  1788  000894  504C               	movf	(btemp+9)^0,w,c
  1789  000896  204E               	addwfc	(btemp+11)^0,w,c
  1790  000898  6EEA               	movwf	fsr0h,c
  1791  00089A  CFDE FFEE          	movff	postinc2,postinc0
  1792  00089E  CFDD FFED          	movff	postdec2,postdec0
  1793  0008A2                     
  1794                           ;pipe.c: 40:             pipe->write_pos = (pipe->write_pos + 1) % 2;
  1795                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1796  0008A2  0EFD               	movlw	-3
  1797  0008A4  CFE3 F04D          	movff	plusw1,btemp+10
  1798  0008A8  0EFE               	movlw	-2
  1799  0008AA  CFE3 F04E          	movff	plusw1,btemp+11
  1800  0008AE  0E08               	movlw	8
  1801  0008B0  244D               	addwf	(btemp+10)^0,w,c
  1802  0008B2  6ED9               	movwf	fsr2l,c
  1803  0008B4  0E00               	movlw	0
  1804  0008B6  204E               	addwfc	(btemp+11)^0,w,c
  1805  0008B8  6EDA               	movwf	fsr2h,c
  1806  0008BA  CFDE F04D          	movff	postinc2,btemp+10
  1807  0008BE  CFDD F04E          	movff	postdec2,btemp+11
  1808  0008C2  0E01               	movlw	1
  1809  0008C4  264D               	addwf	(btemp+10)^0,f,c
  1810  0008C6  0E00               	movlw	0
  1811  0008C8  224E               	addwfc	(btemp+11)^0,f,c
  1812  0008CA  0E01               	movlw	1
  1813  0008CC  164D               	andwf	(btemp+10)^0,f,c
  1814  0008CE  0E00               	movlw	0
  1815  0008D0  164E               	andwf	(btemp+11)^0,f,c
  1816                           
  1817                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1818  0008D2  0EFD               	movlw	-3
  1819  0008D4  CFE3 F04B          	movff	plusw1,btemp+8
  1820  0008D8  0EFE               	movlw	-2
  1821  0008DA  CFE3 F04C          	movff	plusw1,btemp+9
  1822  0008DE  0E08               	movlw	8
  1823  0008E0  244B               	addwf	(btemp+8)^0,w,c
  1824  0008E2  6ED9               	movwf	fsr2l,c
  1825  0008E4  0E00               	movlw	0
  1826  0008E6  204C               	addwfc	(btemp+9)^0,w,c
  1827  0008E8  6EDA               	movwf	fsr2h,c
  1828  0008EA  C04D  FFDE         	movff	btemp+10,postinc2
  1829  0008EE  C04E  FFDD         	movff	btemp+11,postdec2
  1830  0008F2                     
  1831                           ;pipe.c: 41:             pipe->size++;
  1832                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1833  0008F2  0EFD               	movlw	-3
  1834  0008F4  CFE3 F04D          	movff	plusw1,btemp+10
  1835  0008F8  0EFE               	movlw	-2
  1836  0008FA  CFE3 F04E          	movff	plusw1,btemp+11
  1837  0008FE  0E04               	movlw	4
  1838  000900  244D               	addwf	(btemp+10)^0,w,c
  1839  000902  6ED9               	movwf	fsr2l,c
  1840  000904  0E00               	movlw	0
  1841  000906  204E               	addwfc	(btemp+11)^0,w,c
  1842  000908  6EDA               	movwf	fsr2h,c
  1843  00090A  2ADE               	incf	postinc2,f,c
  1844  00090C  0E00               	movlw	0
  1845  00090E  22DD               	addwfc	postdec2,f,c
  1846  000910                     
  1847                           ;pipe.c: 42:             write_flag = 1;
  1848                           ;stkvar	pipe_write@write_flag @ sp[(-1)+0]
  1849  000910  0EFF               	movlw	-1
  1850  000912  6AE3               	clrf	plusw1,c
  1851  000914  2AE3               	incf	plusw1,f,c
  1852  000916                     
  1853                           ;pipe.c: 43:             if(sem_get_value(pipe->sem) < 0){
  1854                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1855  000916  0EFD               	movlw	-3
  1856  000918  CFE3 F04D          	movff	plusw1,btemp+10
  1857  00091C  0EFE               	movlw	-2
  1858  00091E  CFE3 F04E          	movff	plusw1,btemp+11
  1859  000922  0E0A               	movlw	10
  1860  000924  244D               	addwf	(btemp+10)^0,w,c
  1861  000926  6ED9               	movwf	fsr2l,c
  1862  000928  0E00               	movlw	0
  1863  00092A  204E               	addwfc	(btemp+11)^0,w,c
  1864  00092C  6EDA               	movwf	fsr2h,c
  1865  00092E  0E12               	movlw	18
  1866  000930                     u75_21:
  1867  000930  CFDE FFE6          	movff	postinc2,postinc1
  1868  000934  2CE8               	decfsz	wreg,w,c
  1869  000936  EF98  F004         	goto	u75_21
  1870  00093A  EC9D  F00A         	call	_sem_get_value	;wreg free
  1871  00093E  BE44               	btfsc	(btemp+1)^0,7,c
  1872  000940  EFA6  F004         	goto	u76_20
  1873  000944  EFA4  F004         	goto	u76_21
  1874  000948                     u76_21:
  1875  000948  EFC7  F004         	goto	l1777
  1876  00094C                     u76_20:
  1877  00094C                     
  1878                           ;pipe.c: 44:                 sem_post(&pipe->sem);
  1879                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1880  00094C  0EFD               	movlw	-3
  1881  00094E  50E3               	movf	plusw1,w,c
  1882  000950  0F0A               	addlw	10
  1883  000952  6E4D               	movwf	(btemp+10)^0,c
  1884  000954  0EFE               	movlw	-2
  1885  000956  CFE3 F04E          	movff	plusw1,btemp+11
  1886  00095A  0E00               	movlw	0
  1887  00095C  224E               	addwfc	(btemp+11)^0,f,c
  1888  00095E  C04D  FFE6         	movff	btemp+10,postinc1
  1889  000962  C04E  FFE6         	movff	btemp+11,postinc1
  1890  000966  ECF8  F006         	call	_sem_post	;wreg free
  1891  00096A  EFC7  F004         	goto	l1777
  1892  00096E                     l309:
  1893                           
  1894                           ;pipe.c: 48:             (INTCONbits.GIE = 1);
  1895  00096E  8EF2               	bsf	242,7,c	;volatile
  1896  000970                     
  1897                           ;pipe.c: 49:             sem_wait(&pipe->sem);
  1898                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1899  000970  0EFD               	movlw	-3
  1900  000972  50E3               	movf	plusw1,w,c
  1901  000974  0F0A               	addlw	10
  1902  000976  6E4D               	movwf	(btemp+10)^0,c
  1903  000978  0EFE               	movlw	-2
  1904  00097A  CFE3 F04E          	movff	plusw1,btemp+11
  1905  00097E  0E00               	movlw	0
  1906  000980  224E               	addwfc	(btemp+11)^0,f,c
  1907  000982  C04D  FFE6         	movff	btemp+10,postinc1
  1908  000986  C04E  FFE6         	movff	btemp+11,postinc1
  1909  00098A  EC0A  F000         	call	_sem_wait	;wreg free
  1910  00098E                     l1777:
  1911                           
  1912                           ;pipe.c: 51:     } while(!write_flag);
  1913                           ;stkvar	pipe_write@write_flag @ sp[(-1)+0]
  1914  00098E  0EFF               	movlw	-1
  1915  000990  50E3               	movf	plusw1,w,c
  1916  000992  B4D8               	btfsc	status,2,c
  1917  000994  EFCE  F004         	goto	u77_21
  1918  000998  EFD0  F004         	goto	u77_20
  1919  00099C                     u77_21:
  1920  00099C  EF0D  F004         	goto	l1761
  1921  0009A0                     u77_20:
  1922  0009A0                     
  1923                           ;pipe.c: 53:     (INTCONbits.GIE = 1);
  1924  0009A0  8EF2               	bsf	242,7,c	;volatile
  1925  0009A2                     
  1926                           ; _pipe_write: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  1927  0009A2  0EFB               	movlw	251
  1928  0009A4  26E1               	addwf	fsr1l,f,c
  1929  0009A6  0EFF               	movlw	255
  1930  0009A8  22E2               	addwfc	fsr1h,f,c
  1931  0009AA  0012               	return		;funcret
  1932  0009AC                     __end_of_pipe_write:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function _sem_wait *****************
  1936 ;; Defined at:
  1937 ;;		line 10 in file "semaphore.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  s               2  [STACK] PTR struct semaphore
  1940 ;;		 -> pipe_attitude(28), 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1  [STACK] void 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1952 ;;      Params:         0       0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    9
  1959 ;; This function calls:
  1960 ;;		_RESTORE_CONTEXT
  1961 ;;		___lwmod
  1962 ;; This function is called by:
  1963 ;;		_pipe_read
  1964 ;;		_pipe_write
  1965 ;; This function uses a reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text16
  1969  000014                     __ptext16:
  1970                           	callstack 0
  1971  000014                     _sem_wait:
  1972                           	callstack 15
  1973  000014                     
  1974                           ;semaphore.c: 11:     (INTCONbits.GIE = 0);
  1975  000014  9EF2               	bcf	242,7,c	;volatile
  1976  000016                     
  1977                           ;semaphore.c: 13:     s->s_count--;
  1978                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  1979  000016  0EFE               	movlw	-2
  1980  000018  CFE3 FFD9          	movff	plusw1,fsr2l
  1981  00001C  0EFF               	movlw	-1
  1982  00001E  CFE3 FFDA          	movff	plusw1,fsr2h
  1983  000022  06DE               	decf	postinc2,f,c
  1984  000024  0E00               	movlw	0
  1985  000026  5ADD               	subwfb	postdec2,f,c
  1986  000028                     
  1987                           ;semaphore.c: 14:     if(s->s_count < 0){
  1988                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  1989  000028  0EFE               	movlw	-2
  1990  00002A  CFE3 FFD9          	movff	plusw1,fsr2l
  1991  00002E  0EFF               	movlw	-1
  1992  000030  CFE3 FFDA          	movff	plusw1,fsr2h
  1993  000034  0E01               	movlw	1
  1994  000036  BEDB               	btfsc	plusw2,7,c
  1995  000038  EF22  F000         	goto	u63_20
  1996  00003C  EF20  F000         	goto	u63_21
  1997  000040                     u63_21:
  1998  000040  EF85  F001         	goto	l1659
  1999  000044                     u63_20:
  2000  000044                     
  2001                           ;semaphore.c: 17:         s->s_queue.TASKS[s->s_queue.queue_wait_pos] = READY_QUEUE.task
      +                          _running;
  2002  000044  EE23  F099         	lfsr	2,_READY_QUEUE+678
  2003                           
  2004                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2005  000048  0EFE               	movlw	-2
  2006  00004A  CFE3 F04D          	movff	plusw1,btemp+10
  2007  00004E  0EFF               	movlw	-1
  2008  000050  CFE3 F04E          	movff	plusw1,btemp+11
  2009  000054  0E0E               	movlw	14
  2010  000056  244D               	addwf	(btemp+10)^0,w,c
  2011  000058  6EE9               	movwf	fsr0l,c
  2012  00005A  0E00               	movlw	0
  2013  00005C  204E               	addwfc	(btemp+11)^0,w,c
  2014  00005E  6EEA               	movwf	fsr0h,c
  2015  000060  CFEE F04D          	movff	postinc0,btemp+10
  2016  000064  CFED F04E          	movff	postdec0,btemp+11
  2017  000068  90D8               	bcf	status,0,c
  2018  00006A  344D               	rlcf	(btemp+10)^0,w,c
  2019  00006C  6E4B               	movwf	(btemp+8)^0,c
  2020  00006E  344E               	rlcf	(btemp+11)^0,w,c
  2021  000070  6E4C               	movwf	(btemp+9)^0,c
  2022                           
  2023                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2024  000072  0EFE               	movlw	-2
  2025  000074  50E3               	movf	plusw1,w,c
  2026  000076  264B               	addwf	(btemp+8)^0,f,c
  2027  000078  0EFF               	movlw	-1
  2028  00007A  50E3               	movf	plusw1,w,c
  2029  00007C  224C               	addwfc	(btemp+9)^0,f,c
  2030  00007E  0E02               	movlw	2
  2031  000080  244B               	addwf	(btemp+8)^0,w,c
  2032  000082  6EE9               	movwf	fsr0l,c
  2033  000084  0E00               	movlw	0
  2034  000086  204C               	addwfc	(btemp+9)^0,w,c
  2035  000088  6EEA               	movwf	fsr0h,c
  2036  00008A  CFDE FFEE          	movff	postinc2,postinc0
  2037  00008E  CFDD FFED          	movff	postdec2,postdec0
  2038  000092                     
  2039                           ;semaphore.c: 18:         s->s_queue.queue_wait_pos = (s->s_queue.queue_wait_pos + 1) % 
      +                          5;
  2040  000092  0E05               	movlw	5
  2041  000094  6EE6               	movwf	postinc1,c
  2042  000096  0E00               	movlw	0
  2043  000098  6EE6               	movwf	postinc1,c
  2044                           
  2045                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  2046  00009A  0EFC               	movlw	-4
  2047  00009C  CFE3 F04D          	movff	plusw1,btemp+10
  2048  0000A0  0EFD               	movlw	-3
  2049  0000A2  CFE3 F04E          	movff	plusw1,btemp+11
  2050  0000A6  0E0E               	movlw	14
  2051  0000A8  244D               	addwf	(btemp+10)^0,w,c
  2052  0000AA  6ED9               	movwf	fsr2l,c
  2053  0000AC  0E00               	movlw	0
  2054  0000AE  204E               	addwfc	(btemp+11)^0,w,c
  2055  0000B0  6EDA               	movwf	fsr2h,c
  2056  0000B2  CFDE F04D          	movff	postinc2,btemp+10
  2057  0000B6  CFDD F04E          	movff	postdec2,btemp+11
  2058  0000BA  0E01               	movlw	1
  2059  0000BC  264D               	addwf	(btemp+10)^0,f,c
  2060  0000BE  0E00               	movlw	0
  2061  0000C0  224E               	addwfc	(btemp+11)^0,f,c
  2062  0000C2  C04D  FFE6         	movff	btemp+10,postinc1
  2063  0000C6  C04E  FFE6         	movff	btemp+11,postinc1
  2064  0000CA  EC07  F008         	call	___lwmod	;wreg free
  2065                           
  2066                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2067  0000CE  0EFE               	movlw	-2
  2068  0000D0  CFE3 F04D          	movff	plusw1,btemp+10
  2069  0000D4  0EFF               	movlw	-1
  2070  0000D6  CFE3 F04E          	movff	plusw1,btemp+11
  2071  0000DA  0E0E               	movlw	14
  2072  0000DC  244D               	addwf	(btemp+10)^0,w,c
  2073  0000DE  6ED9               	movwf	fsr2l,c
  2074  0000E0  0E00               	movlw	0
  2075  0000E2  204E               	addwfc	(btemp+11)^0,w,c
  2076  0000E4  6EDA               	movwf	fsr2h,c
  2077  0000E6  C043  FFDE         	movff	btemp,postinc2
  2078  0000EA  C044  FFDD         	movff	btemp+1,postdec2
  2079  0000EE                     
  2080                           ;semaphore.c: 19:         s->s_queue.queue_size++;
  2081                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2082  0000EE  0EFE               	movlw	-2
  2083  0000F0  CFE3 F04D          	movff	plusw1,btemp+10
  2084  0000F4  0EFF               	movlw	-1
  2085  0000F6  CFE3 F04E          	movff	plusw1,btemp+11
  2086  0000FA  0E0C               	movlw	12
  2087  0000FC  244D               	addwf	(btemp+10)^0,w,c
  2088  0000FE  6ED9               	movwf	fsr2l,c
  2089  000100  0E00               	movlw	0
  2090  000102  204E               	addwfc	(btemp+11)^0,w,c
  2091  000104  6EDA               	movwf	fsr2h,c
  2092  000106  2ADE               	incf	postinc2,f,c
  2093  000108  0E00               	movlw	0
  2094  00010A  22DD               	addwfc	postdec2,f,c
  2095  00010C  9EF2               	bcf	242,7,c	;volatile
  2096  00010E  EE23  F099         	lfsr	2,_READY_QUEUE+678
  2097  000112  CFDE F04D          	movff	postinc2,btemp+10
  2098  000116  CFDD F04E          	movff	postdec2,btemp+11
  2099  00011A  0E71               	movlw	113
  2100  00011C  024D               	mulwf	(btemp+10)^0,c
  2101  00011E  CFF3 F04B          	movff	prodl,btemp+8
  2102  000122  CFF4 F04C          	movff	prodh,btemp+9
  2103  000126  024E               	mulwf	(btemp+11)^0,c
  2104  000128  50F3               	movf	prodl,w,c
  2105  00012A  264C               	addwf	(btemp+9)^0,f,c
  2106  00012C  0E5E               	movlw	low (_READY_QUEUE+107)
  2107  00012E  244B               	addwf	(btemp+8)^0,w,c
  2108  000130  6ED9               	movwf	fsr2l,c
  2109  000132  0E01               	movlw	high (_READY_QUEUE+107)
  2110  000134  204C               	addwfc	(btemp+9)^0,w,c
  2111  000136  6EDA               	movwf	fsr2h,c
  2112  000138  50DE               	movf	postinc2,w,c
  2113  00013A  10DE               	iorwf	postinc2,w,c
  2114  00013C  B4D8               	btfsc	status,2,c
  2115  00013E  EFA3  F000         	goto	u64_21
  2116  000142  EFA5  F000         	goto	u64_20
  2117  000146                     u64_21:
  2118  000146  EF6B  F001         	goto	l1653
  2119  00014A                     u64_20:
  2120  00014A  6A05               	clrf	_index^0,c
  2121  00014C  6A06               	clrf	(_index+1)^0,c
  2122  00014E  EE23  F099         	lfsr	2,_READY_QUEUE+678
  2123  000152  CFDE F04D          	movff	postinc2,btemp+10
  2124  000156  CFDD F04E          	movff	postdec2,btemp+11
  2125  00015A  0E71               	movlw	113
  2126  00015C  024D               	mulwf	(btemp+10)^0,c
  2127  00015E  CFF3 F04B          	movff	prodl,btemp+8
  2128  000162  CFF4 F04C          	movff	prodh,btemp+9
  2129  000166  024E               	mulwf	(btemp+11)^0,c
  2130  000168  50F3               	movf	prodl,w,c
  2131  00016A  264C               	addwf	(btemp+9)^0,f,c
  2132  00016C  0EF7               	movlw	low (_READY_QUEUE+4)
  2133  00016E  244B               	addwf	(btemp+8)^0,w,c
  2134  000170  6ED9               	movwf	fsr2l,c
  2135  000172  0E00               	movlw	high (_READY_QUEUE+4)
  2136  000174  204C               	addwfc	(btemp+9)^0,w,c
  2137  000176  6EDA               	movwf	fsr2h,c
  2138  000178  0E03               	movlw	3
  2139  00017A  6EDF               	movwf	indf2,c
  2140  00017C  6E4D               	movwf	(btemp+10)^0,c
  2141  00017E  6A4E               	clrf	(btemp+11)^0,c
  2142  000180  EE23  F099         	lfsr	2,_READY_QUEUE+678
  2143  000184  CFDE F04B          	movff	postinc2,btemp+8
  2144  000188  CFDD F04C          	movff	postdec2,btemp+9
  2145  00018C  0E71               	movlw	113
  2146  00018E  024B               	mulwf	(btemp+8)^0,c
  2147  000190  CFF3 F049          	movff	prodl,btemp+6
  2148  000194  CFF4 F04A          	movff	prodh,btemp+7
  2149  000198  024C               	mulwf	(btemp+9)^0,c
  2150  00019A  50F3               	movf	prodl,w,c
  2151  00019C  264A               	addwf	(btemp+7)^0,f,c
  2152  00019E  0EFA               	movlw	low (_READY_QUEUE+7)
  2153  0001A0  2449               	addwf	(btemp+6)^0,w,c
  2154  0001A2  6ED9               	movwf	fsr2l,c
  2155  0001A4  0E00               	movlw	high (_READY_QUEUE+7)
  2156  0001A6  204A               	addwfc	(btemp+7)^0,w,c
  2157  0001A8  6EDA               	movwf	fsr2h,c
  2158  0001AA  C04D  FFDE         	movff	btemp+10,postinc2
  2159  0001AE  C04E  FFDD         	movff	btemp+11,postdec2
  2160  0001B2  50E0               	movf	224,w,c	;volatile
  2161  0001B4  6E4D               	movwf	(btemp+10)^0,c
  2162  0001B6  6A4E               	clrf	(btemp+11)^0,c
  2163  0001B8  EE23  F099         	lfsr	2,_READY_QUEUE+678
  2164  0001BC  CFDE F04B          	movff	postinc2,btemp+8
  2165  0001C0  CFDD F04C          	movff	postdec2,btemp+9
  2166  0001C4  0E71               	movlw	113
  2167  0001C6  024B               	mulwf	(btemp+8)^0,c
  2168  0001C8  CFF3 F049          	movff	prodl,btemp+6
  2169  0001CC  CFF4 F04A          	movff	prodh,btemp+7
  2170  0001D0  024C               	mulwf	(btemp+9)^0,c
  2171  0001D2  50F3               	movf	prodl,w,c
  2172  0001D4  264A               	addwf	(btemp+7)^0,f,c
  2173  0001D6  0EFC               	movlw	low (_READY_QUEUE+9)
  2174  0001D8  2449               	addwf	(btemp+6)^0,w,c
  2175  0001DA  6ED9               	movwf	fsr2l,c
  2176  0001DC  0E00               	movlw	high (_READY_QUEUE+9)
  2177  0001DE  204A               	addwfc	(btemp+7)^0,w,c
  2178  0001E0  6EDA               	movwf	fsr2h,c
  2179  0001E2  C04D  FFDE         	movff	btemp+10,postinc2
  2180  0001E6  C04E  FFDD         	movff	btemp+11,postdec2
  2181  0001EA  50D8               	movf	216,w,c	;volatile
  2182  0001EC  6E4D               	movwf	(btemp+10)^0,c
  2183  0001EE  6A4E               	clrf	(btemp+11)^0,c
  2184  0001F0  EE23  F099         	lfsr	2,_READY_QUEUE+678
  2185  0001F4  CFDE F04B          	movff	postinc2,btemp+8
  2186  0001F8  CFDD F04C          	movff	postdec2,btemp+9
  2187  0001FC  0E71               	movlw	113
  2188  0001FE  024B               	mulwf	(btemp+8)^0,c
  2189  000200  CFF3 F049          	movff	prodl,btemp+6
  2190  000204  CFF4 F04A          	movff	prodh,btemp+7
  2191  000208  024C               	mulwf	(btemp+9)^0,c
  2192  00020A  50F3               	movf	prodl,w,c
  2193  00020C  264A               	addwf	(btemp+7)^0,f,c
  2194  00020E  0EF8               	movlw	low (_READY_QUEUE+5)
  2195  000210  2449               	addwf	(btemp+6)^0,w,c
  2196  000212  6ED9               	movwf	fsr2l,c
  2197  000214  0E00               	movlw	high (_READY_QUEUE+5)
  2198  000216  204A               	addwfc	(btemp+7)^0,w,c
  2199  000218  6EDA               	movwf	fsr2h,c
  2200  00021A  C04D  FFDE         	movff	btemp+10,postinc2
  2201  00021E  C04E  FFDD         	movff	btemp+11,postdec2
  2202  000222  EE23  F099         	lfsr	2,_READY_QUEUE+678
  2203  000226  CFDE F04D          	movff	postinc2,btemp+10
  2204  00022A  CFDD F04E          	movff	postdec2,btemp+11
  2205  00022E  0E71               	movlw	113
  2206  000230  024D               	mulwf	(btemp+10)^0,c
  2207  000232  CFF3 F04B          	movff	prodl,btemp+8
  2208  000236  CFF4 F04C          	movff	prodh,btemp+9
  2209  00023A  024E               	mulwf	(btemp+11)^0,c
  2210  00023C  50F3               	movf	prodl,w,c
  2211  00023E  264C               	addwf	(btemp+9)^0,f,c
  2212  000240  0E5E               	movlw	low (_READY_QUEUE+107)
  2213  000242  244B               	addwf	(btemp+8)^0,w,c
  2214  000244  6ED9               	movwf	fsr2l,c
  2215  000246  0E01               	movlw	high (_READY_QUEUE+107)
  2216  000248  204C               	addwfc	(btemp+9)^0,w,c
  2217  00024A  6EDA               	movwf	fsr2h,c
  2218  00024C  0E00               	movlw	0
  2219  00024E  6EDE               	movwf	postinc2,c
  2220  000250  0E00               	movlw	0
  2221  000252  6EDD               	movwf	postdec2,c
  2222  000254                     l266:
  2223  000254  C005  F04D         	movff	_index,btemp+10
  2224  000258  C006  F04E         	movff	_index+1,btemp+11
  2225  00025C  0E03               	movlw	3
  2226  00025E  024D               	mulwf	(btemp+10)^0,c
  2227  000260  CFF3 F04B          	movff	prodl,btemp+8
  2228  000264  CFF4 F04C          	movff	prodh,btemp+9
  2229  000268  024E               	mulwf	(btemp+11)^0,c
  2230  00026A  50F3               	movf	prodl,w,c
  2231  00026C  264C               	addwf	(btemp+9)^0,f,c
  2232  00026E  EE23  F099         	lfsr	2,_READY_QUEUE+678
  2233  000272  CFDE F04D          	movff	postinc2,btemp+10
  2234  000276  CFDD F04E          	movff	postdec2,btemp+11
  2235  00027A  0E71               	movlw	113
  2236  00027C  024D               	mulwf	(btemp+10)^0,c
  2237  00027E  CFF3 F049          	movff	prodl,btemp+6
  2238  000282  CFF4 F04A          	movff	prodh,btemp+7
  2239  000286  024E               	mulwf	(btemp+11)^0,c
  2240  000288  50F3               	movf	prodl,w,c
  2241  00028A  264A               	addwf	(btemp+7)^0,f,c
  2242  00028C  0EF3               	movlw	low _READY_QUEUE
  2243  00028E  6E4D               	movwf	(btemp+10)^0,c
  2244  000290  0E00               	movlw	high _READY_QUEUE
  2245  000292  6E4E               	movwf	(btemp+11)^0,c
  2246  000294  0E0B               	movlw	11
  2247  000296  264D               	addwf	(btemp+10)^0,f,c
  2248  000298  0E00               	movlw	0
  2249  00029A  224E               	addwfc	(btemp+11)^0,f,c
  2250  00029C  5049               	movf	(btemp+6)^0,w,c
  2251  00029E  264D               	addwf	(btemp+10)^0,f,c
  2252  0002A0  504A               	movf	(btemp+7)^0,w,c
  2253  0002A2  224E               	addwfc	(btemp+11)^0,f,c
  2254  0002A4  504B               	movf	(btemp+8)^0,w,c
  2255  0002A6  244D               	addwf	(btemp+10)^0,w,c
  2256  0002A8  6ED9               	movwf	fsr2l,c
  2257  0002AA  504C               	movf	(btemp+9)^0,w,c
  2258  0002AC  204E               	addwfc	(btemp+11)^0,w,c
  2259  0002AE  6EDA               	movwf	fsr2h,c
  2260  0002B0  CFFD FFDE          	movff	tosl,postinc2	;volatile
  2261  0002B4  CFFE FFDE          	movff	tosh,postinc2	;volatile
  2262  0002B8  CFFF FFDE          	movff	tosu,postinc2	;volatile
  2263  0002BC  4A05               	infsnz	_index^0,f,c
  2264  0002BE  2A06               	incf	(_index+1)^0,f,c
  2265  0002C0  0006               	pop		;# 
  2266  0002C2  50FC               	movf	252,w,c	;volatile
  2267  0002C4  A4D8               	btfss	status,2,c
  2268  0002C6  EF67  F001         	goto	u65_21
  2269  0002CA  EF69  F001         	goto	u65_20
  2270  0002CE                     u65_21:
  2271  0002CE  EF2A  F001         	goto	l266
  2272  0002D2                     u65_20:
  2273  0002D2  EF82  F001         	goto	l1655
  2274  0002D6                     l1653:
  2275  0002D6  EE23  F099         	lfsr	2,_READY_QUEUE+678
  2276  0002DA  CFDE F04D          	movff	postinc2,btemp+10
  2277  0002DE  CFDD F04E          	movff	postdec2,btemp+11
  2278  0002E2  0E71               	movlw	113
  2279  0002E4  024D               	mulwf	(btemp+10)^0,c
  2280  0002E6  CFF3 F04B          	movff	prodl,btemp+8
  2281  0002EA  CFF4 F04C          	movff	prodh,btemp+9
  2282  0002EE  024E               	mulwf	(btemp+11)^0,c
  2283  0002F0  50F3               	movf	prodl,w,c
  2284  0002F2  264C               	addwf	(btemp+9)^0,f,c
  2285  0002F4  0EF7               	movlw	low (_READY_QUEUE+4)
  2286  0002F6  244B               	addwf	(btemp+8)^0,w,c
  2287  0002F8  6ED9               	movwf	fsr2l,c
  2288  0002FA  0E00               	movlw	high (_READY_QUEUE+4)
  2289  0002FC  204C               	addwfc	(btemp+9)^0,w,c
  2290  0002FE  6EDA               	movwf	fsr2h,c
  2291  000300  0E03               	movlw	3
  2292  000302  6EDF               	movwf	indf2,c
  2293  000304                     l1655:
  2294  000304  8EF2               	bsf	242,7,c	;volatile
  2295  000306                     
  2296                           ;semaphore.c: 21:         RESTORE_CONTEXT();
  2297  000306  ECE0  F002         	call	_RESTORE_CONTEXT	;wreg free
  2298  00030A                     l1659:
  2299                           
  2300                           ;semaphore.c: 26:     (INTCONbits.GIE = 1);
  2301  00030A  8EF2               	bsf	242,7,c	;volatile
  2302  00030C                     
  2303                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2304  00030C  52E5               	movf	postdec1,f,c
  2305  00030E  52E5               	movf	postdec1,f,c
  2306  000310  0012               	return		;funcret
  2307  000312                     __end_of_sem_wait:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function _RESTORE_CONTEXT *****************
  2311 ;; Defined at:
  2312 ;;		line 126 in file "kernel.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  stack_size      2  [STACK] unsigned int 
  2317 ;;  task_running    2  [STACK] unsigned int 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1  [STACK] void 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2327 ;;      Params:         0       0       0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0
  2330 ;;      Totals:         0       0       0       0       0       0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    8
  2334 ;; This function calls:
  2335 ;;		_scheduler
  2336 ;; This function is called by:
  2337 ;;		_ISR_timer
  2338 ;;		_sem_wait
  2339 ;;		_OS_delay
  2340 ;; This function uses a reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text17
  2344  0005C0                     __ptext17:
  2345                           	callstack 0
  2346  0005C0                     _RESTORE_CONTEXT:
  2347                           	callstack 0
  2348                           
  2349                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2350  0005C0  52E6               	movf	postinc1,f,c
  2351  0005C2  52E6               	movf	postinc1,f,c
  2352  0005C4  52E6               	movf	postinc1,f,c
  2353  0005C6  52E6               	movf	postinc1,f,c
  2354  0005C8                     
  2355                           ;kernel.c: 128:         (INTCONbits.GIE = 0);
  2356  0005C8  9EF2               	bcf	242,7,c	;volatile
  2357  0005CA                     
  2358                           ;kernel.c: 129:         READY_QUEUE.task_running = scheduler();
  2359  0005CA  ECB4  F00A         	call	_scheduler	;wreg free
  2360  0005CE  C043  F399         	movff	btemp,_READY_QUEUE+678
  2361  0005D2  C044  F39A         	movff	btemp+1,_READY_QUEUE+679
  2362  0005D6                     
  2363                           ;kernel.c: 130:         u_int task_running = READY_QUEUE.task_running;
  2364                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2365  0005D6  0EFE               	movlw	-2
  2366  0005D8  C399  FFE3         	movff	_READY_QUEUE+678,plusw1
  2367  0005DC  0EFF               	movlw	-1
  2368  0005DE  C39A  FFE3         	movff	_READY_QUEUE+679,plusw1
  2369  0005E2                     
  2370                           ;kernel.c: 131:         READY_QUEUE.QUEUE[task_running].task_state = RUNNING;
  2371                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2372  0005E2  0EFE               	movlw	-2
  2373  0005E4  CFE3 F04D          	movff	plusw1,btemp+10
  2374  0005E8  0EFF               	movlw	-1
  2375  0005EA  CFE3 F04E          	movff	plusw1,btemp+11
  2376  0005EE  0E71               	movlw	113
  2377  0005F0  024D               	mulwf	(btemp+10)^0,c
  2378  0005F2  CFF3 F04B          	movff	prodl,btemp+8
  2379  0005F6  CFF4 F04C          	movff	prodh,btemp+9
  2380  0005FA  024E               	mulwf	(btemp+11)^0,c
  2381  0005FC  50F3               	movf	prodl,w,c
  2382  0005FE  264C               	addwf	(btemp+9)^0,f,c
  2383  000600  0EF7               	movlw	low (_READY_QUEUE+4)
  2384  000602  244B               	addwf	(btemp+8)^0,w,c
  2385  000604  6ED9               	movwf	fsr2l,c
  2386  000606  0E00               	movlw	high (_READY_QUEUE+4)
  2387  000608  204C               	addwfc	(btemp+9)^0,w,c
  2388  00060A  6EDA               	movwf	fsr2h,c
  2389  00060C  0E01               	movlw	1
  2390  00060E  6EDF               	movwf	indf2,c
  2391  000610                     
  2392                           ;kernel.c: 132:         STKPTR = 0;
  2393  000610  6AFC               	clrf	252,c	;volatile
  2394  000612                     
  2395                           ;kernel.c: 133:         if(READY_QUEUE.QUEUE[task_running].task_context.stack_size > 0) 
      +                          {
  2396                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2397  000612  0EFE               	movlw	-2
  2398  000614  CFE3 F04D          	movff	plusw1,btemp+10
  2399  000618  0EFF               	movlw	-1
  2400  00061A  CFE3 F04E          	movff	plusw1,btemp+11
  2401  00061E  0E71               	movlw	113
  2402  000620  024D               	mulwf	(btemp+10)^0,c
  2403  000622  CFF3 F04B          	movff	prodl,btemp+8
  2404  000626  CFF4 F04C          	movff	prodh,btemp+9
  2405  00062A  024E               	mulwf	(btemp+11)^0,c
  2406  00062C  50F3               	movf	prodl,w,c
  2407  00062E  264C               	addwf	(btemp+9)^0,f,c
  2408  000630  0E5E               	movlw	low (_READY_QUEUE+107)
  2409  000632  244B               	addwf	(btemp+8)^0,w,c
  2410  000634  6ED9               	movwf	fsr2l,c
  2411  000636  0E01               	movlw	high (_READY_QUEUE+107)
  2412  000638  204C               	addwfc	(btemp+9)^0,w,c
  2413  00063A  6EDA               	movwf	fsr2h,c
  2414  00063C  50DE               	movf	postinc2,w,c
  2415  00063E  10DE               	iorwf	postinc2,w,c
  2416  000640  B4D8               	btfsc	status,2,c
  2417  000642  EF25  F003         	goto	u69_21
  2418  000646  EF27  F003         	goto	u69_20
  2419  00064A                     u69_21:
  2420  00064A  EFE4  F003         	goto	l170
  2421  00064E                     u69_20:
  2422  00064E                     
  2423                           ;kernel.c: 134:             BSR = READY_QUEUE.QUEUE[task_running].task_context.BSR_reg;
  2424                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2425  00064E  0EFE               	movlw	-2
  2426  000650  CFE3 F04D          	movff	plusw1,btemp+10
  2427  000654  0EFF               	movlw	-1
  2428  000656  CFE3 F04E          	movff	plusw1,btemp+11
  2429  00065A  0E71               	movlw	113
  2430  00065C  024D               	mulwf	(btemp+10)^0,c
  2431  00065E  CFF3 F04B          	movff	prodl,btemp+8
  2432  000662  CFF4 F04C          	movff	prodh,btemp+9
  2433  000666  024E               	mulwf	(btemp+11)^0,c
  2434  000668  50F3               	movf	prodl,w,c
  2435  00066A  264C               	addwf	(btemp+9)^0,f,c
  2436  00066C  0EFC               	movlw	low (_READY_QUEUE+9)
  2437  00066E  244B               	addwf	(btemp+8)^0,w,c
  2438  000670  6ED9               	movwf	fsr2l,c
  2439  000672  0E00               	movlw	high (_READY_QUEUE+9)
  2440  000674  204C               	addwfc	(btemp+9)^0,w,c
  2441  000676  6EDA               	movwf	fsr2h,c
  2442  000678  50DF               	movf	indf2,w,c
  2443  00067A  6EE0               	movwf	224,c	;volatile
  2444                           
  2445                           ;kernel.c: 135:             STATUS = READY_QUEUE.QUEUE[task_running].task_context.STATUS
      +                          _reg;
  2446                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2447  00067C  0EFE               	movlw	-2
  2448  00067E  CFE3 F04D          	movff	plusw1,btemp+10
  2449  000682  0EFF               	movlw	-1
  2450  000684  CFE3 F04E          	movff	plusw1,btemp+11
  2451  000688  0E71               	movlw	113
  2452  00068A  024D               	mulwf	(btemp+10)^0,c
  2453  00068C  CFF3 F04B          	movff	prodl,btemp+8
  2454  000690  CFF4 F04C          	movff	prodh,btemp+9
  2455  000694  024E               	mulwf	(btemp+11)^0,c
  2456  000696  50F3               	movf	prodl,w,c
  2457  000698  264C               	addwf	(btemp+9)^0,f,c
  2458  00069A  0EF8               	movlw	low (_READY_QUEUE+5)
  2459  00069C  244B               	addwf	(btemp+8)^0,w,c
  2460  00069E  6ED9               	movwf	fsr2l,c
  2461  0006A0  0E00               	movlw	high (_READY_QUEUE+5)
  2462  0006A2  204C               	addwfc	(btemp+9)^0,w,c
  2463  0006A4  6EDA               	movwf	fsr2h,c
  2464  0006A6  50DF               	movf	indf2,w,c
  2465  0006A8  6ED8               	movwf	216,c	;volatile
  2466                           
  2467                           ;kernel.c: 136:             WREG = READY_QUEUE.QUEUE[task_running].task_context.WORK_reg
      +                          ;
  2468                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2469  0006AA  0EFE               	movlw	-2
  2470  0006AC  CFE3 F04D          	movff	plusw1,btemp+10
  2471  0006B0  0EFF               	movlw	-1
  2472  0006B2  CFE3 F04E          	movff	plusw1,btemp+11
  2473  0006B6  0E71               	movlw	113
  2474  0006B8  024D               	mulwf	(btemp+10)^0,c
  2475  0006BA  CFF3 F04B          	movff	prodl,btemp+8
  2476  0006BE  CFF4 F04C          	movff	prodh,btemp+9
  2477  0006C2  024E               	mulwf	(btemp+11)^0,c
  2478  0006C4  50F3               	movf	prodl,w,c
  2479  0006C6  264C               	addwf	(btemp+9)^0,f,c
  2480  0006C8  0EFA               	movlw	low (_READY_QUEUE+7)
  2481  0006CA  244B               	addwf	(btemp+8)^0,w,c
  2482  0006CC  6ED9               	movwf	fsr2l,c
  2483  0006CE  0E00               	movlw	high (_READY_QUEUE+7)
  2484  0006D0  204C               	addwfc	(btemp+9)^0,w,c
  2485  0006D2  6EDA               	movwf	fsr2h,c
  2486  0006D4  50DF               	movf	indf2,w,c
  2487  0006D6  6E4E               	movwf	(btemp+11)^0,c
  2488  0006D8  504E               	movf	(btemp+11)^0,w,c
  2489                           
  2490                           ;kernel.c: 137:             u_int stack_size = READY_QUEUE.QUEUE[task_running].task_cont
      +                          ext.stack_size;
  2491                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2492  0006DA  0EFE               	movlw	-2
  2493  0006DC  CFE3 F04D          	movff	plusw1,btemp+10
  2494  0006E0  0EFF               	movlw	-1
  2495  0006E2  CFE3 F04E          	movff	plusw1,btemp+11
  2496  0006E6  0E71               	movlw	113
  2497  0006E8  024D               	mulwf	(btemp+10)^0,c
  2498  0006EA  CFF3 F04B          	movff	prodl,btemp+8
  2499  0006EE  CFF4 F04C          	movff	prodh,btemp+9
  2500  0006F2  024E               	mulwf	(btemp+11)^0,c
  2501  0006F4  50F3               	movf	prodl,w,c
  2502  0006F6  264C               	addwf	(btemp+9)^0,f,c
  2503  0006F8  0E5E               	movlw	low (_READY_QUEUE+107)
  2504  0006FA  244B               	addwf	(btemp+8)^0,w,c
  2505  0006FC  6ED9               	movwf	fsr2l,c
  2506  0006FE  0E01               	movlw	high (_READY_QUEUE+107)
  2507  000700  204C               	addwfc	(btemp+9)^0,w,c
  2508  000702  6EDA               	movwf	fsr2h,c
  2509  000704  CFDE F04D          	movff	postinc2,btemp+10
  2510  000708  CFDD F04E          	movff	postdec2,btemp+11
  2511                           
  2512                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2513  00070C  0EFC               	movlw	-4
  2514  00070E  C04D  FFE3         	movff	btemp+10,plusw1
  2515  000712  0EFD               	movlw	-3
  2516  000714  C04E  FFE3         	movff	btemp+11,plusw1
  2517                           
  2518                           ;kernel.c: 138:             while (stack_size) {
  2519  000718  EFD5  F003         	goto	l1737
  2520  00071C                     l172:
  2521  00071C  0005               	push		;# 
  2522  00071E                     
  2523                           ;kernel.c: 140:                 TOS = READY_QUEUE.QUEUE[task_running].task_context.STACK
      +                          _regs[stack_size-1];
  2524                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2525  00071E  0EFC               	movlw	-4
  2526  000720  CFE3 F04D          	movff	plusw1,btemp+10
  2527  000724  0EFD               	movlw	-3
  2528  000726  CFE3 F04E          	movff	plusw1,btemp+11
  2529  00072A  0E03               	movlw	3
  2530  00072C  024D               	mulwf	(btemp+10)^0,c
  2531  00072E  CFF3 F04B          	movff	prodl,btemp+8
  2532  000732  CFF4 F04C          	movff	prodh,btemp+9
  2533  000736  024E               	mulwf	(btemp+11)^0,c
  2534  000738  50F3               	movf	prodl,w,c
  2535  00073A  264C               	addwf	(btemp+9)^0,f,c
  2536                           
  2537                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2538  00073C  0EFE               	movlw	-2
  2539  00073E  CFE3 F04D          	movff	plusw1,btemp+10
  2540  000742  0EFF               	movlw	-1
  2541  000744  CFE3 F04E          	movff	plusw1,btemp+11
  2542  000748  0E71               	movlw	113
  2543  00074A  024D               	mulwf	(btemp+10)^0,c
  2544  00074C  CFF3 F049          	movff	prodl,btemp+6
  2545  000750  CFF4 F04A          	movff	prodh,btemp+7
  2546  000754  024E               	mulwf	(btemp+11)^0,c
  2547  000756  50F3               	movf	prodl,w,c
  2548  000758  264A               	addwf	(btemp+7)^0,f,c
  2549  00075A  0EF3               	movlw	low _READY_QUEUE
  2550  00075C  6E4D               	movwf	(btemp+10)^0,c
  2551  00075E  0E00               	movlw	high _READY_QUEUE
  2552  000760  6E4E               	movwf	(btemp+11)^0,c
  2553  000762  0E08               	movlw	8
  2554  000764  264D               	addwf	(btemp+10)^0,f,c
  2555  000766  0E00               	movlw	0
  2556  000768  224E               	addwfc	(btemp+11)^0,f,c
  2557  00076A  5049               	movf	(btemp+6)^0,w,c
  2558  00076C  264D               	addwf	(btemp+10)^0,f,c
  2559  00076E  504A               	movf	(btemp+7)^0,w,c
  2560  000770  224E               	addwfc	(btemp+11)^0,f,c
  2561  000772  504B               	movf	(btemp+8)^0,w,c
  2562  000774  244D               	addwf	(btemp+10)^0,w,c
  2563  000776  6ED9               	movwf	fsr2l,c
  2564  000778  504C               	movf	(btemp+9)^0,w,c
  2565  00077A  204E               	addwfc	(btemp+11)^0,w,c
  2566  00077C  6EDA               	movwf	fsr2h,c
  2567  00077E  CFDE FFFD          	movff	postinc2,tosl	;volatile
  2568  000782  CFDE FFFE          	movff	postinc2,tosh	;volatile
  2569  000786  CFDD FFFF          	movff	postdec2,tosu	;volatile
  2570  00078A                     
  2571                           ;kernel.c: 141:                 stack_size--;
  2572                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2573  00078A  0EFC               	movlw	-4
  2574  00078C  CFE3 F043          	movff	plusw1,btemp
  2575  000790  0E01               	movlw	1
  2576  000792  5E43               	subwf	btemp^0,f,c
  2577  000794  0EFC               	movlw	-4
  2578  000796  C043  FFE3         	movff	btemp,plusw1
  2579  00079A  0EFD               	movlw	-3
  2580  00079C  CFE3 F043          	movff	plusw1,btemp
  2581  0007A0  0E00               	movlw	0
  2582  0007A2  5A43               	subwfb	btemp^0,f,c
  2583  0007A4  0EFD               	movlw	-3
  2584  0007A6  C043  FFE3         	movff	btemp,plusw1
  2585  0007AA                     l1737:
  2586                           
  2587                           ;kernel.c: 138:             while (stack_size) {
  2588                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2589  0007AA  0EFC               	movlw	-4
  2590  0007AC  CFE3 F043          	movff	plusw1,btemp
  2591  0007B0  0EFD               	movlw	-3
  2592  0007B2  50E3               	movf	plusw1,w,c
  2593  0007B4  1043               	iorwf	btemp^0,w,c
  2594  0007B6  A4D8               	btfss	status,2,c
  2595  0007B8  EFE0  F003         	goto	u70_21
  2596  0007BC  EFE2  F003         	goto	u70_20
  2597  0007C0                     u70_21:
  2598  0007C0  EF8E  F003         	goto	l172
  2599  0007C4                     u70_20:
  2600  0007C4  EF03  F004         	goto	l1741
  2601  0007C8                     l170:
  2602  0007C8  0005               	push		;# 
  2603  0007CA                     
  2604                           ;kernel.c: 146:             TOS = READY_QUEUE.QUEUE[task_running].task_func;
  2605                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2606  0007CA  0EFE               	movlw	-2
  2607  0007CC  CFE3 F04D          	movff	plusw1,btemp+10
  2608  0007D0  0EFF               	movlw	-1
  2609  0007D2  CFE3 F04E          	movff	plusw1,btemp+11
  2610  0007D6  0E71               	movlw	113
  2611  0007D8  024D               	mulwf	(btemp+10)^0,c
  2612  0007DA  CFF3 F04B          	movff	prodl,btemp+8
  2613  0007DE  CFF4 F04C          	movff	prodh,btemp+9
  2614  0007E2  024E               	mulwf	(btemp+11)^0,c
  2615  0007E4  50F3               	movf	prodl,w,c
  2616  0007E6  264C               	addwf	(btemp+9)^0,f,c
  2617  0007E8  0E60               	movlw	low (_READY_QUEUE+109)
  2618  0007EA  244B               	addwf	(btemp+8)^0,w,c
  2619  0007EC  6ED9               	movwf	fsr2l,c
  2620  0007EE  0E01               	movlw	high (_READY_QUEUE+109)
  2621  0007F0  204C               	addwfc	(btemp+9)^0,w,c
  2622  0007F2  6EDA               	movwf	fsr2h,c
  2623  0007F4  CFDE F04D          	movff	postinc2,btemp+10
  2624  0007F8  CFDD F04E          	movff	postdec2,btemp+11
  2625  0007FC  C04D  FFFD         	movff	btemp+10,tosl	;volatile
  2626  000800  C04E  FFFE         	movff	btemp+11,tosh	;volatile
  2627  000804  6AFF               	clrf	255,c	;volatile
  2628  000806                     l1741:
  2629                           
  2630                           ;kernel.c: 148:     (INTCONbits.GIE = 1);
  2631  000806  8EF2               	bsf	242,7,c	;volatile
  2632  000808                     
  2633                           ; _RESTORE_CONTEXT: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  2634  000808  52E5               	movf	postdec1,f,c
  2635  00080A  52E5               	movf	postdec1,f,c
  2636  00080C  52E5               	movf	postdec1,f,c
  2637  00080E  52E5               	movf	postdec1,f,c
  2638  000810  0012               	return		;funcret
  2639  000812                     __end_of_RESTORE_CONTEXT:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _scheduler *****************
  2643 ;; Defined at:
  2644 ;;		line 13 in file "scheduler.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  2  [STACK] unsigned int 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2658 ;;      Params:         0       0       0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    7
  2665 ;; This function calls:
  2666 ;;		_ROUND_ROBIN_sched
  2667 ;; This function is called by:
  2668 ;;		_RESTORE_CONTEXT
  2669 ;; This function uses a reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text18
  2673  001568                     __ptext18:
  2674                           	callstack 0
  2675  001568                     _scheduler:
  2676                           	callstack 10
  2677  001568                     
  2678                           ;scheduler.c: 16:    return ROUND_ROBIN_sched();
  2679  001568  EC5D  F006         	call	_ROUND_ROBIN_sched	;wreg free
  2680  00156C                     
  2681                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2682  00156C  0012               	return		;funcret
  2683  00156E                     __end_of_scheduler:
  2684                           	callstack 0
  2685                           
  2686 ;; *************** function _ROUND_ROBIN_sched *****************
  2687 ;; Defined at:
  2688 ;;		line 22 in file "scheduler.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  task_selecte    2  [STACK] unsigned int 
  2693 ;;  try             2  [STACK] unsigned int 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  2  [STACK] unsigned int 
  2696 ;; Registers used:
  2697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2703 ;;      Params:         0       0       0       0       0       0       0
  2704 ;;      Locals:         0       0       0       0       0       0       0
  2705 ;;      Temps:          0       0       0       0       0       0       0
  2706 ;;      Totals:         0       0       0       0       0       0       0
  2707 ;;Total ram usage:        0 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    6
  2710 ;; This function calls:
  2711 ;;		___lwmod
  2712 ;; This function is called by:
  2713 ;;		_scheduler
  2714 ;; This function uses a reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text19
  2718  000CBA                     __ptext19:
  2719                           	callstack 0
  2720  000CBA                     _ROUND_ROBIN_sched:
  2721                           	callstack 0
  2722                           
  2723                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2724  000CBA  52E6               	movf	postinc1,f,c
  2725  000CBC  52E6               	movf	postinc1,f,c
  2726  000CBE  52E6               	movf	postinc1,f,c
  2727  000CC0  52E6               	movf	postinc1,f,c
  2728  000CC2                     
  2729                           ;scheduler.c: 24:    u_int task_selected = READY_QUEUE.task_running, try = 0;
  2730                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2731  000CC2  0EFC               	movlw	-4
  2732  000CC4  C399  FFE3         	movff	_READY_QUEUE+678,plusw1
  2733  000CC8  0EFD               	movlw	-3
  2734  000CCA  C39A  FFE3         	movff	_READY_QUEUE+679,plusw1
  2735                           
  2736                           ;stkvar	ROUND_ROBIN_sched@try @ sp[(-4)+2]
  2737  000CCE  0EFE               	movlw	-2
  2738  000CD0  6AE3               	clrf	plusw1,c
  2739  000CD2  0EFF               	movlw	-1
  2740  000CD4  6AE3               	clrf	plusw1,c
  2741  000CD6                     l1579:
  2742                           
  2743                           ;scheduler.c: 27:       task_selected = (task_selected+1) % READY_QUEUE.nr_of_tasks;
  2744  000CD6  EE23  F09B         	lfsr	2,_READY_QUEUE+680
  2745  000CDA  CFDE F04D          	movff	postinc2,btemp+10
  2746  000CDE  CFDD F04E          	movff	postdec2,btemp+11
  2747  000CE2  C04D  FFE6         	movff	btemp+10,postinc1
  2748  000CE6  C04E  FFE6         	movff	btemp+11,postinc1
  2749                           
  2750                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-6)+0]
  2751  000CEA  0EFA               	movlw	-6
  2752  000CEC  50E3               	movf	plusw1,w,c
  2753  000CEE  0F01               	addlw	1
  2754  000CF0  6E4D               	movwf	(btemp+10)^0,c
  2755  000CF2  0EFB               	movlw	-5
  2756  000CF4  CFE3 F04E          	movff	plusw1,btemp+11
  2757  000CF8  0E00               	movlw	0
  2758  000CFA  224E               	addwfc	(btemp+11)^0,f,c
  2759  000CFC  C04D  FFE6         	movff	btemp+10,postinc1
  2760  000D00  C04E  FFE6         	movff	btemp+11,postinc1
  2761  000D04  EC07  F008         	call	___lwmod	;wreg free
  2762                           
  2763                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2764  000D08  0EFC               	movlw	-4
  2765  000D0A  C043  FFE3         	movff	btemp,plusw1
  2766  000D0E  0EFD               	movlw	-3
  2767  000D10  C044  FFE3         	movff	btemp+1,plusw1
  2768  000D14                     
  2769                           ;scheduler.c: 28:       if (try == READY_QUEUE.nr_of_tasks) {
  2770                           ;stkvar	ROUND_ROBIN_sched@try @ sp[(-4)+2]
  2771  000D14  EE23  F09B         	lfsr	2,_READY_QUEUE+680
  2772  000D18  0EFE               	movlw	-2
  2773  000D1A  50E3               	movf	plusw1,w,c
  2774  000D1C  18DE               	xorwf	postinc2,w,c
  2775  000D1E  E108               	bnz	u59_21
  2776  000D20  0EFF               	movlw	-1
  2777  000D22  50E3               	movf	plusw1,w,c
  2778  000D24  18DE               	xorwf	postinc2,w,c
  2779  000D26  A4D8               	btfss	status,2,c
  2780  000D28  EF98  F006         	goto	u59_21
  2781  000D2C  EF9A  F006         	goto	u59_20
  2782  000D30                     u59_21:
  2783  000D30  EFA0  F006         	goto	l1587
  2784  000D34                     u59_20:
  2785  000D34                     
  2786                           ;scheduler.c: 29:          return 0;
  2787  000D34  0E00               	movlw	0
  2788  000D36  6E43               	movwf	btemp^0,c
  2789  000D38  0E00               	movlw	0
  2790  000D3A  6E44               	movwf	(btemp+1)^0,c
  2791  000D3C  EFF3  F006         	goto	l40
  2792  000D40                     l1587:
  2793                           
  2794                           ;scheduler.c: 31:       try++;
  2795                           ;stkvar	ROUND_ROBIN_sched@try @ sp[(-4)+2]
  2796  000D40  0EFE               	movlw	-2
  2797  000D42  50E3               	movf	plusw1,w,c
  2798  000D44  0F01               	addlw	1
  2799  000D46  6E43               	movwf	btemp^0,c
  2800  000D48  0EFE               	movlw	-2
  2801  000D4A  C043  FFE3         	movff	btemp,plusw1
  2802  000D4E  6A43               	clrf	btemp^0,c
  2803  000D50  0EFF               	movlw	-1
  2804  000D52  50E3               	movf	plusw1,w,c
  2805  000D54  2043               	addwfc	btemp^0,w,c
  2806  000D56  6E43               	movwf	btemp^0,c
  2807  000D58  0EFF               	movlw	-1
  2808  000D5A  C043  FFE3         	movff	btemp,plusw1
  2809  000D5E                     
  2810                           ;scheduler.c: 32:    } while (READY_QUEUE.QUEUE[task_selected].task_state != READY ||
  2811                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2812  000D5E  0EFC               	movlw	-4
  2813  000D60  CFE3 F04D          	movff	plusw1,btemp+10
  2814  000D64  0EFD               	movlw	-3
  2815  000D66  CFE3 F04E          	movff	plusw1,btemp+11
  2816  000D6A  0E71               	movlw	113
  2817  000D6C  024D               	mulwf	(btemp+10)^0,c
  2818  000D6E  CFF3 F04B          	movff	prodl,btemp+8
  2819  000D72  CFF4 F04C          	movff	prodh,btemp+9
  2820  000D76  024E               	mulwf	(btemp+11)^0,c
  2821  000D78  50F3               	movf	prodl,w,c
  2822  000D7A  264C               	addwf	(btemp+9)^0,f,c
  2823  000D7C  0EF7               	movlw	low (_READY_QUEUE+4)
  2824  000D7E  244B               	addwf	(btemp+8)^0,w,c
  2825  000D80  6ED9               	movwf	fsr2l,c
  2826  000D82  0E00               	movlw	high (_READY_QUEUE+4)
  2827  000D84  204C               	addwfc	(btemp+9)^0,w,c
  2828  000D86  6EDA               	movwf	fsr2h,c
  2829  000D88  50DF               	movf	indf2,w,c
  2830  000D8A  A4D8               	btfss	status,2,c
  2831  000D8C  EFCA  F006         	goto	u60_21
  2832  000D90  EFCC  F006         	goto	u60_20
  2833  000D94                     u60_21:
  2834  000D94  EF6B  F006         	goto	l1579
  2835  000D98                     u60_20:
  2836  000D98                     
  2837                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2838  000D98  0EFC               	movlw	-4
  2839  000D9A  CFE3 F04D          	movff	plusw1,btemp+10
  2840  000D9E  0EFD               	movlw	-3
  2841  000DA0  CFE3 F04E          	movff	plusw1,btemp+11
  2842  000DA4  0E71               	movlw	113
  2843  000DA6  024D               	mulwf	(btemp+10)^0,c
  2844  000DA8  CFF3 F04B          	movff	prodl,btemp+8
  2845  000DAC  CFF4 F04C          	movff	prodh,btemp+9
  2846  000DB0  024E               	mulwf	(btemp+11)^0,c
  2847  000DB2  50F3               	movf	prodl,w,c
  2848  000DB4  264C               	addwf	(btemp+9)^0,f,c
  2849  000DB6  0E60               	movlw	low (_READY_QUEUE+109)
  2850  000DB8  244B               	addwf	(btemp+8)^0,w,c
  2851  000DBA  6ED9               	movwf	fsr2l,c
  2852  000DBC  0E01               	movlw	high (_READY_QUEUE+109)
  2853  000DBE  204C               	addwfc	(btemp+9)^0,w,c
  2854  000DC0  6EDA               	movwf	fsr2h,c
  2855  000DC2  0EB4               	movlw	low _idle
  2856  000DC4  18DE               	xorwf	postinc2,w,c
  2857  000DC6  E109               	bnz	u61_20
  2858  000DC8  0E14               	movlw	high _idle
  2859  000DCA  18DE               	xorwf	postinc2,w,c
  2860  000DCC  B4D8               	btfsc	status,2,c
  2861  000DCE  EFEB  F006         	goto	u61_21
  2862  000DD2  EFED  F006         	goto	u61_20
  2863  000DD6                     u61_21:
  2864  000DD6  EF6B  F006         	goto	l1579
  2865  000DDA                     u61_20:
  2866  000DDA                     
  2867                           ;scheduler.c: 35:    return task_selected;
  2868                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2869  000DDA  0EFC               	movlw	-4
  2870  000DDC  CFE3 F043          	movff	plusw1,btemp
  2871  000DE0  0EFD               	movlw	-3
  2872  000DE2  CFE3 F044          	movff	plusw1,btemp+1
  2873  000DE6                     l40:
  2874                           
  2875                           ; _ROUND_ROBIN_sched: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  2876  000DE6  52E5               	movf	postdec1,f,c
  2877  000DE8  52E5               	movf	postdec1,f,c
  2878  000DEA  52E5               	movf	postdec1,f,c
  2879  000DEC  52E5               	movf	postdec1,f,c
  2880  000DEE  0012               	return		;funcret
  2881  000DF0                     __end_of_ROUND_ROBIN_sched:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _sem_post *****************
  2885 ;; Defined at:
  2886 ;;		line 43 in file "semaphore.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  s               2  [STACK] PTR struct semaphore
  2889 ;;		 -> pipe_attitude(28), 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1  [STACK] void 
  2894 ;; Registers used:
  2895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2901 ;;      Params:         0       0       0       0       0       0       0
  2902 ;;      Locals:         0       0       0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0
  2904 ;;      Totals:         0       0       0       0       0       0       0
  2905 ;;Total ram usage:        0 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    6
  2908 ;; This function calls:
  2909 ;;		___lwmod
  2910 ;; This function is called by:
  2911 ;;		_pipe_read
  2912 ;;		_pipe_write
  2913 ;; This function uses a reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text20
  2917  000DF0                     __ptext20:
  2918                           	callstack 0
  2919  000DF0                     _sem_post:
  2920                           	callstack 18
  2921  000DF0                     
  2922                           ;semaphore.c: 44:     (INTCONbits.GIE = 0);
  2923  000DF0  9EF2               	bcf	242,7,c	;volatile
  2924  000DF2                     
  2925                           ;semaphore.c: 46:     s->s_count++;
  2926                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2927  000DF2  0EFE               	movlw	-2
  2928  000DF4  CFE3 FFD9          	movff	plusw1,fsr2l
  2929  000DF8  0EFF               	movlw	-1
  2930  000DFA  CFE3 FFDA          	movff	plusw1,fsr2h
  2931  000DFE  2ADE               	incf	postinc2,f,c
  2932  000E00  0E00               	movlw	0
  2933  000E02  22DD               	addwfc	postdec2,f,c
  2934  000E04                     
  2935                           ;semaphore.c: 47:     if(s->s_count <= 0) {
  2936                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2937  000E04  0EFE               	movlw	-2
  2938  000E06  CFE3 FFD9          	movff	plusw1,fsr2l
  2939  000E0A  0EFF               	movlw	-1
  2940  000E0C  CFE3 FFDA          	movff	plusw1,fsr2h
  2941  000E10  0E01               	movlw	1
  2942  000E12  BEDB               	btfsc	plusw2,7,c
  2943  000E14  EF17  F007         	goto	u66_20
  2944  000E18  0E01               	movlw	1
  2945  000E1A  50DB               	movf	plusw2,w,c
  2946  000E1C  E106               	bnz	u66_21
  2947  000E1E  04DE               	decf	postinc2,w,c
  2948  000E20  B0D8               	btfsc	status,0,c
  2949  000E22  EF15  F007         	goto	u66_21
  2950  000E26  EF17  F007         	goto	u66_20
  2951  000E2A                     u66_21:
  2952  000E2A  EF8A  F007         	goto	l1673
  2953  000E2E                     u66_20:
  2954  000E2E                     
  2955                           ;semaphore.c: 49:         READY_QUEUE.QUEUE[s->s_queue.TASKS[s->s_queue.queue_post_pos]]
      +                          .task_state = READY;
  2956                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2957  000E2E  0EFE               	movlw	-2
  2958  000E30  CFE3 F04D          	movff	plusw1,btemp+10
  2959  000E34  0EFF               	movlw	-1
  2960  000E36  CFE3 F04E          	movff	plusw1,btemp+11
  2961  000E3A  0E10               	movlw	16
  2962  000E3C  244D               	addwf	(btemp+10)^0,w,c
  2963  000E3E  6ED9               	movwf	fsr2l,c
  2964  000E40  0E00               	movlw	0
  2965  000E42  204E               	addwfc	(btemp+11)^0,w,c
  2966  000E44  6EDA               	movwf	fsr2h,c
  2967  000E46  CFDE F04D          	movff	postinc2,btemp+10
  2968  000E4A  CFDD F04E          	movff	postdec2,btemp+11
  2969  000E4E  90D8               	bcf	status,0,c
  2970  000E50  344D               	rlcf	(btemp+10)^0,w,c
  2971  000E52  6E4B               	movwf	(btemp+8)^0,c
  2972  000E54  344E               	rlcf	(btemp+11)^0,w,c
  2973  000E56  6E4C               	movwf	(btemp+9)^0,c
  2974                           
  2975                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2976  000E58  0EFE               	movlw	-2
  2977  000E5A  50E3               	movf	plusw1,w,c
  2978  000E5C  264B               	addwf	(btemp+8)^0,f,c
  2979  000E5E  0EFF               	movlw	-1
  2980  000E60  50E3               	movf	plusw1,w,c
  2981  000E62  224C               	addwfc	(btemp+9)^0,f,c
  2982  000E64  0E02               	movlw	2
  2983  000E66  244B               	addwf	(btemp+8)^0,w,c
  2984  000E68  6ED9               	movwf	fsr2l,c
  2985  000E6A  0E00               	movlw	0
  2986  000E6C  204C               	addwfc	(btemp+9)^0,w,c
  2987  000E6E  6EDA               	movwf	fsr2h,c
  2988  000E70  CFDE F04D          	movff	postinc2,btemp+10
  2989  000E74  CFDD F04E          	movff	postdec2,btemp+11
  2990  000E78  0E71               	movlw	113
  2991  000E7A  024D               	mulwf	(btemp+10)^0,c
  2992  000E7C  CFF3 F04B          	movff	prodl,btemp+8
  2993  000E80  CFF4 F04C          	movff	prodh,btemp+9
  2994  000E84  024E               	mulwf	(btemp+11)^0,c
  2995  000E86  50F3               	movf	prodl,w,c
  2996  000E88  264C               	addwf	(btemp+9)^0,f,c
  2997  000E8A  0EF7               	movlw	low (_READY_QUEUE+4)
  2998  000E8C  244B               	addwf	(btemp+8)^0,w,c
  2999  000E8E  6ED9               	movwf	fsr2l,c
  3000  000E90  0E00               	movlw	high (_READY_QUEUE+4)
  3001  000E92  204C               	addwfc	(btemp+9)^0,w,c
  3002  000E94  6EDA               	movwf	fsr2h,c
  3003  000E96  0E00               	movlw	0
  3004  000E98  6EDF               	movwf	indf2,c
  3005  000E9A                     
  3006                           ;semaphore.c: 51:         s->s_queue.queue_post_pos = (s->s_queue.queue_post_pos+1)%5;
  3007  000E9A  0E05               	movlw	5
  3008  000E9C  6EE6               	movwf	postinc1,c
  3009  000E9E  0E00               	movlw	0
  3010  000EA0  6EE6               	movwf	postinc1,c
  3011                           
  3012                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  3013  000EA2  0EFC               	movlw	-4
  3014  000EA4  CFE3 F04D          	movff	plusw1,btemp+10
  3015  000EA8  0EFD               	movlw	-3
  3016  000EAA  CFE3 F04E          	movff	plusw1,btemp+11
  3017  000EAE  0E10               	movlw	16
  3018  000EB0  244D               	addwf	(btemp+10)^0,w,c
  3019  000EB2  6ED9               	movwf	fsr2l,c
  3020  000EB4  0E00               	movlw	0
  3021  000EB6  204E               	addwfc	(btemp+11)^0,w,c
  3022  000EB8  6EDA               	movwf	fsr2h,c
  3023  000EBA  CFDE F04D          	movff	postinc2,btemp+10
  3024  000EBE  CFDD F04E          	movff	postdec2,btemp+11
  3025  000EC2  0E01               	movlw	1
  3026  000EC4  264D               	addwf	(btemp+10)^0,f,c
  3027  000EC6  0E00               	movlw	0
  3028  000EC8  224E               	addwfc	(btemp+11)^0,f,c
  3029  000ECA  C04D  FFE6         	movff	btemp+10,postinc1
  3030  000ECE  C04E  FFE6         	movff	btemp+11,postinc1
  3031  000ED2  EC07  F008         	call	___lwmod	;wreg free
  3032                           
  3033                           ;stkvar	sem_post@s @ sp[(0)+-2]
  3034  000ED6  0EFE               	movlw	-2
  3035  000ED8  CFE3 F04D          	movff	plusw1,btemp+10
  3036  000EDC  0EFF               	movlw	-1
  3037  000EDE  CFE3 F04E          	movff	plusw1,btemp+11
  3038  000EE2  0E10               	movlw	16
  3039  000EE4  244D               	addwf	(btemp+10)^0,w,c
  3040  000EE6  6ED9               	movwf	fsr2l,c
  3041  000EE8  0E00               	movlw	0
  3042  000EEA  204E               	addwfc	(btemp+11)^0,w,c
  3043  000EEC  6EDA               	movwf	fsr2h,c
  3044  000EEE  C043  FFDE         	movff	btemp,postinc2
  3045  000EF2  C044  FFDD         	movff	btemp+1,postdec2
  3046  000EF6                     
  3047                           ;semaphore.c: 52:         s->s_queue.queue_size--;
  3048                           ;stkvar	sem_post@s @ sp[(0)+-2]
  3049  000EF6  0EFE               	movlw	-2
  3050  000EF8  CFE3 F04D          	movff	plusw1,btemp+10
  3051  000EFC  0EFF               	movlw	-1
  3052  000EFE  CFE3 F04E          	movff	plusw1,btemp+11
  3053  000F02  0E0C               	movlw	12
  3054  000F04  244D               	addwf	(btemp+10)^0,w,c
  3055  000F06  6ED9               	movwf	fsr2l,c
  3056  000F08  0E00               	movlw	0
  3057  000F0A  204E               	addwfc	(btemp+11)^0,w,c
  3058  000F0C  6EDA               	movwf	fsr2h,c
  3059  000F0E  06DE               	decf	postinc2,f,c
  3060  000F10  0E00               	movlw	0
  3061  000F12  5ADD               	subwfb	postdec2,f,c
  3062  000F14                     l1673:
  3063                           
  3064                           ;semaphore.c: 62:     (INTCONbits.GIE = 1);
  3065  000F14  8EF2               	bsf	242,7,c	;volatile
  3066  000F16                     
  3067                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3068  000F16  52E5               	movf	postdec1,f,c
  3069  000F18  52E5               	movf	postdec1,f,c
  3070  000F1A  0012               	return		;funcret
  3071  000F1C                     __end_of_sem_post:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function ___lwmod *****************
  3075 ;; Defined at:
  3076 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwmod.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  dividend        2  [STACK] unsigned int 
  3079 ;;  divisor         2  [STACK] unsigned int 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  counter         1  [STACK] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  2  [STACK] unsigned int 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3091 ;;      Params:         0       0       0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0
  3094 ;;      Totals:         0       0       0       0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    5
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_ROUND_ROBIN_sched
  3102 ;;		_sem_wait
  3103 ;;		_sem_post
  3104 ;;		_PRIORITY_sched
  3105 ;; This function uses a reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text21
  3109  00100E                     __ptext21:
  3110                           	callstack 0
  3111  00100E                     ___lwmod:
  3112                           	callstack 0
  3113                           
  3114                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3115  00100E  52E6               	movf	postinc1,f,c
  3116  001010                     
  3117                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3118  001010  0EFB               	movlw	-5
  3119  001012  CFE3 F043          	movff	plusw1,btemp
  3120  001016  0EFC               	movlw	-4
  3121  001018  50E3               	movf	plusw1,w,c
  3122  00101A  1043               	iorwf	btemp^0,w,c
  3123  00101C  B4D8               	btfsc	status,2,c
  3124  00101E  EF13  F008         	goto	u55_21
  3125  001022  EF15  F008         	goto	u55_20
  3126  001026                     u55_21:
  3127  001026  EF70  F008         	goto	l1573
  3128  00102A                     u55_20:
  3129  00102A                     
  3130                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3131  00102A  0EFF               	movlw	-1
  3132  00102C  6AE3               	clrf	plusw1,c
  3133  00102E  2AE3               	incf	plusw1,f,c
  3134  001030  EF2B  F008         	goto	l1563
  3135  001034                     l1559:
  3136                           
  3137                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3138  001034  0EFB               	movlw	-5
  3139  001036  50E3               	movf	plusw1,w,c
  3140  001038  90D8               	bcf	status,0,c
  3141  00103A  34E8               	rlcf	wreg,w,c
  3142  00103C  6E43               	movwf	btemp^0,c
  3143  00103E  0EFB               	movlw	-5
  3144  001040  C043  FFE3         	movff	btemp,plusw1
  3145  001044  0EFC               	movlw	-4
  3146  001046  50E3               	movf	plusw1,w,c
  3147  001048  34E8               	rlcf	wreg,w,c
  3148  00104A  6E43               	movwf	btemp^0,c
  3149  00104C  0EFC               	movlw	-4
  3150  00104E  C043  FFE3         	movff	btemp,plusw1
  3151  001052                     
  3152                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3153  001052  0EFF               	movlw	-1
  3154  001054  2AE3               	incf	plusw1,f,c
  3155  001056                     l1563:
  3156                           
  3157                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3158  001056  0EFC               	movlw	-4
  3159  001058  AEE3               	btfss	plusw1,7,c
  3160  00105A  EF31  F008         	goto	u56_21
  3161  00105E  EF33  F008         	goto	u56_20
  3162  001062                     u56_21:
  3163  001062  EF1A  F008         	goto	l1559
  3164  001066                     u56_20:
  3165  001066                     l1565:
  3166                           
  3167                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3168  001066  0EFB               	movlw	-5
  3169  001068  CFE3 F04D          	movff	plusw1,btemp+10
  3170  00106C  0EFC               	movlw	-4
  3171  00106E  CFE3 F04E          	movff	plusw1,btemp+11
  3172                           
  3173                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3174  001072  0EFD               	movlw	-3
  3175  001074  CFE3 F04B          	movff	plusw1,btemp+8
  3176  001078  0EFE               	movlw	-2
  3177  00107A  CFE3 F04C          	movff	plusw1,btemp+9
  3178  00107E  504D               	movf	(btemp+10)^0,w,c
  3179  001080  5C4B               	subwf	(btemp+8)^0,w,c
  3180  001082  504E               	movf	(btemp+11)^0,w,c
  3181  001084  584C               	subwfb	(btemp+9)^0,w,c
  3182  001086  A0D8               	btfss	status,0,c
  3183  001088  EF48  F008         	goto	u57_21
  3184  00108C  EF4A  F008         	goto	u57_20
  3185  001090                     u57_21:
  3186  001090  EF5C  F008         	goto	l1569
  3187  001094                     u57_20:
  3188  001094                     
  3189                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3190                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3191  001094  0EFD               	movlw	-3
  3192  001096  50E3               	movf	plusw1,w,c
  3193  001098  6E43               	movwf	btemp^0,c
  3194  00109A  0EFB               	movlw	-5
  3195  00109C  50E3               	movf	plusw1,w,c
  3196  00109E  5E43               	subwf	btemp^0,f,c
  3197  0010A0  0EFD               	movlw	-3
  3198  0010A2  C043  FFE3         	movff	btemp,plusw1
  3199  0010A6  0EFE               	movlw	-2
  3200  0010A8  50E3               	movf	plusw1,w,c
  3201  0010AA  6E43               	movwf	btemp^0,c
  3202  0010AC  0EFC               	movlw	-4
  3203  0010AE  50E3               	movf	plusw1,w,c
  3204  0010B0  5A43               	subwfb	btemp^0,f,c
  3205  0010B2  0EFE               	movlw	-2
  3206  0010B4  C043  FFE3         	movff	btemp,plusw1
  3207  0010B8                     l1569:
  3208                           
  3209                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3210  0010B8  90D8               	bcf	status,0,c
  3211  0010BA  0EFC               	movlw	-4
  3212  0010BC  32E3               	rrcf	plusw1,f,c
  3213  0010BE  0EFB               	movlw	-5
  3214  0010C0  32E3               	rrcf	plusw1,f,c
  3215  0010C2                     
  3216                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3217  0010C2  0EFF               	movlw	-1
  3218  0010C4  50E3               	movf	plusw1,w,c
  3219  0010C6  6E43               	movwf	btemp^0,c
  3220  0010C8  0E01               	movlw	1
  3221  0010CA  5E43               	subwf	btemp^0,f,c
  3222  0010CC  0EFF               	movlw	-1
  3223  0010CE  C043  FFE3         	movff	btemp,plusw1
  3224  0010D2  A4D8               	btfss	status,2,c
  3225  0010D4  EF6E  F008         	goto	u58_21
  3226  0010D8  EF70  F008         	goto	u58_20
  3227  0010DC                     u58_21:
  3228  0010DC  EF33  F008         	goto	l1565
  3229  0010E0                     u58_20:
  3230  0010E0                     l1573:
  3231                           
  3232                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3233  0010E0  0EFD               	movlw	-3
  3234  0010E2  CFE3 F043          	movff	plusw1,btemp
  3235  0010E6  0EFE               	movlw	-2
  3236  0010E8  CFE3 F044          	movff	plusw1,btemp+1
  3237  0010EC                     
  3238                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  3239  0010EC  0EFB               	movlw	251
  3240  0010EE  26E1               	addwf	fsr1l,f,c
  3241  0010F0  0EFF               	movlw	255
  3242  0010F2  22E2               	addwfc	fsr1h,f,c
  3243  0010F4  0012               	return		;funcret
  3244  0010F6                     __end_of___lwmod:
  3245                           	callstack 0
  3246                           
  3247 ;; *************** function _sem_get_value *****************
  3248 ;; Defined at:
  3249 ;;		line 66 in file "semaphore.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  s              18  [STACK] struct semaphore
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  2  [STACK] int 
  3256 ;; Registers used:
  3257 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3263 ;;      Params:         0       0       0       0       0       0       0
  3264 ;;      Locals:         0       0       0       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0       0       0
  3266 ;;      Totals:         0       0       0       0       0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    5
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_pipe_read
  3274 ;;		_pipe_write
  3275 ;; This function uses a reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text22
  3279  00153A                     __ptext22:
  3280                           	callstack 0
  3281  00153A                     _sem_get_value:
  3282                           	callstack 19
  3283  00153A                     
  3284                           ;semaphore.c: 67:     return s.s_count;
  3285                           ;stkvar	sem_get_value@s @ sp[(0)+-18]
  3286  00153A  0EEE               	movlw	-18
  3287  00153C  CFE3 F043          	movff	plusw1,btemp
  3288  001540  0EEF               	movlw	-17
  3289  001542  CFE3 F044          	movff	plusw1,btemp+1
  3290  001546                     
  3291                           ; _sem_get_value: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18
      +                          , argsize = 18, vargsize = 0
  3292  001546  0EEE               	movlw	238
  3293  001548  26E1               	addwf	fsr1l,f,c
  3294  00154A  0EFF               	movlw	255
  3295  00154C  22E2               	addwfc	fsr1h,f,c
  3296  00154E  0012               	return		;funcret
  3297  001550                     __end_of_sem_get_value:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _rot_process *****************
  3301 ;; Defined at:
  3302 ;;		line 22 in file "user_tasks.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  room_tempera    2  [STACK] int 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1  [STACK] void 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3316 ;;      Params:         0       0       0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0
  3319 ;;      Totals:         0       0       0       0       0       0       0
  3320 ;;Total ram usage:        0 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:   11
  3323 ;; This function calls:
  3324 ;;		_antihorario
  3325 ;;		_horario
  3326 ;;		_pipe_read
  3327 ;; This function is called by:
  3328 ;;		_main
  3329 ;; This function uses a reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text23
  3333  00121C                     __ptext23:
  3334                           	callstack 0
  3335  00121C                     _rot_process:
  3336                           	callstack 0
  3337                           
  3338                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3339  00121C  52E6               	movf	postinc1,f,c
  3340  00121E  52E6               	movf	postinc1,f,c
  3341  001220                     l204:
  3342  001220                     
  3343                           ;user_tasks.c: 25:         pipe_read(&pipe_attitude, &room_temperature);
  3344                           ;stkvar	rot_process@room_temperature @ sp[(-2)+0]
  3345  001220  0EFE               	movlw	254
  3346  001222  24E1               	addwf	fsr1l,w,c
  3347  001224  6E43               	movwf	btemp^0,c
  3348  001226  0EFF               	movlw	255
  3349  001228  20E2               	addwfc	fsr1h,w,c
  3350  00122A  6E44               	movwf	(btemp+1)^0,c
  3351  00122C  C043  FFE6         	movff	btemp,postinc1
  3352  001230  C044  FFE6         	movff	btemp+1,postinc1
  3353  001234  0E07               	movlw	low _pipe_attitude
  3354  001236  6EE6               	movwf	postinc1,c
  3355  001238  0E00               	movlw	high _pipe_attitude
  3356  00123A  6EE6               	movwf	postinc1,c
  3357  00123C  ECD6  F004         	call	_pipe_read	;wreg free
  3358  001240                     
  3359                           ;user_tasks.c: 27:         if(room_temperature < (32 - 2)){
  3360                           ;stkvar	rot_process@room_temperature @ sp[(-2)+0]
  3361  001240  0EFF               	movlw	-1
  3362  001242  BEE3               	btfsc	plusw1,7,c
  3363  001244  EF33  F009         	goto	u96_20
  3364  001248  0EFF               	movlw	-1
  3365  00124A  50E3               	movf	plusw1,w,c
  3366  00124C  E10A               	bnz	u96_21
  3367  00124E  0EFE               	movlw	-2
  3368  001250  CFE3 F043          	movff	plusw1,btemp
  3369  001254  0E1E               	movlw	30
  3370  001256  5E43               	subwf	btemp^0,f,c
  3371  001258  B0D8               	btfsc	status,0,c
  3372  00125A  EF31  F009         	goto	u96_21
  3373  00125E  EF33  F009         	goto	u96_20
  3374  001262                     u96_21:
  3375  001262  EF37  F009         	goto	l1959
  3376  001266                     u96_20:
  3377  001266                     
  3378                           ;user_tasks.c: 28:             antihorario();
  3379  001266  ECB9  F00A         	call	_antihorario	;wreg free
  3380                           
  3381                           ;user_tasks.c: 29:         }
  3382  00126A  EF10  F009         	goto	l204
  3383  00126E                     l1959:
  3384                           
  3385                           ;stkvar	rot_process@room_temperature @ sp[(-2)+0]
  3386  00126E  0EFF               	movlw	-1
  3387  001270  BEE3               	btfsc	plusw1,7,c
  3388  001272  EF48  F009         	goto	u97_21
  3389  001276  0EFF               	movlw	-1
  3390  001278  50E3               	movf	plusw1,w,c
  3391  00127A  E10C               	bnz	u97_20
  3392  00127C  0EFE               	movlw	-2
  3393  00127E  CFE3 F043          	movff	plusw1,btemp
  3394  001282  0E23               	movlw	35
  3395  001284  5E43               	subwf	btemp^0,f,c
  3396  001286  A0D8               	btfss	status,0,c
  3397  001288  EF48  F009         	goto	u97_21
  3398  00128C  EF4A  F009         	goto	u97_20
  3399  001290                     u97_21:
  3400  001290  EF10  F009         	goto	l204
  3401  001294                     u97_20:
  3402  001294                     
  3403                           ;user_tasks.c: 31:             horario();
  3404  001294  ECB7  F00A         	call	_horario	;wreg free
  3405  001298  EF10  F009         	goto	l204
  3406                           
  3407                           ; _rot_process: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  3408  00129C  52E5               	movf	postdec1,f,c
  3409  00129E  52E5               	movf	postdec1,f,c
  3410  0012A0  0012               	return		;funcret
  3411  0012A2                     __end_of_rot_process:
  3412                           	callstack 0
  3413                           
  3414 ;; *************** function _pipe_read *****************
  3415 ;; Defined at:
  3416 ;;		line 10 in file "pipe.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  pipe            2  [STACK] PTR struct pipe
  3419 ;;		 -> pipe_attitude(28), 
  3420 ;;  dado            2  [STACK] PTR int 
  3421 ;;		 -> rot_process@room_temperature(2), 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  read_flag       1  [STACK] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1  [STACK] void 
  3426 ;; Registers used:
  3427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3433 ;;      Params:         0       0       0       0       0       0       0
  3434 ;;      Locals:         0       0       0       0       0       0       0
  3435 ;;      Temps:          0       0       0       0       0       0       0
  3436 ;;      Totals:         0       0       0       0       0       0       0
  3437 ;;Total ram usage:        0 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:   10
  3440 ;; This function calls:
  3441 ;;		_sem_get_value
  3442 ;;		_sem_post
  3443 ;;		_sem_wait
  3444 ;; This function is called by:
  3445 ;;		_rot_process
  3446 ;; This function uses a reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text24
  3450  0009AC                     __ptext24:
  3451                           	callstack 0
  3452  0009AC                     _pipe_read:
  3453                           	callstack 0
  3454                           
  3455                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3456  0009AC  52E6               	movf	postinc1,f,c
  3457  0009AE                     
  3458                           ;pipe.c: 11:     (INTCONbits.GIE = 0);
  3459  0009AE  9EF2               	bcf	242,7,c	;volatile
  3460  0009B0                     
  3461                           ;pipe.c: 13:     bool read_flag = 0;
  3462                           ;stkvar	pipe_read@read_flag @ sp[(-1)+0]
  3463  0009B0  0EFF               	movlw	-1
  3464  0009B2  6AE3               	clrf	plusw1,c
  3465  0009B4                     l1783:
  3466                           
  3467                           ;pipe.c: 16:         if (pipe->size > 0){
  3468                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3469  0009B4  0EFD               	movlw	-3
  3470  0009B6  CFE3 F04D          	movff	plusw1,btemp+10
  3471  0009BA  0EFE               	movlw	-2
  3472  0009BC  CFE3 F04E          	movff	plusw1,btemp+11
  3473  0009C0  0E04               	movlw	4
  3474  0009C2  244D               	addwf	(btemp+10)^0,w,c
  3475  0009C4  6ED9               	movwf	fsr2l,c
  3476  0009C6  0E00               	movlw	0
  3477  0009C8  204E               	addwfc	(btemp+11)^0,w,c
  3478  0009CA  6EDA               	movwf	fsr2h,c
  3479  0009CC  50DE               	movf	postinc2,w,c
  3480  0009CE  10DE               	iorwf	postinc2,w,c
  3481  0009D0  B4D8               	btfsc	status,2,c
  3482  0009D2  EFED  F004         	goto	u78_21
  3483  0009D6  EFEF  F004         	goto	u78_20
  3484  0009DA                     u78_21:
  3485  0009DA  EF80  F005         	goto	l301
  3486  0009DE                     u78_20:
  3487  0009DE                     
  3488                           ;pipe.c: 17:             *dado = pipe->msg[pipe->read_pos];
  3489                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3490  0009DE  0EFD               	movlw	-3
  3491  0009E0  CFE3 F04D          	movff	plusw1,btemp+10
  3492  0009E4  0EFE               	movlw	-2
  3493  0009E6  CFE3 F04E          	movff	plusw1,btemp+11
  3494  0009EA  0E06               	movlw	6
  3495  0009EC  244D               	addwf	(btemp+10)^0,w,c
  3496  0009EE  6ED9               	movwf	fsr2l,c
  3497  0009F0  0E00               	movlw	0
  3498  0009F2  204E               	addwfc	(btemp+11)^0,w,c
  3499  0009F4  6EDA               	movwf	fsr2h,c
  3500  0009F6  CFDE F04D          	movff	postinc2,btemp+10
  3501  0009FA  CFDD F04E          	movff	postdec2,btemp+11
  3502  0009FE  90D8               	bcf	status,0,c
  3503  000A00  344D               	rlcf	(btemp+10)^0,w,c
  3504  000A02  6E4B               	movwf	(btemp+8)^0,c
  3505  000A04  344E               	rlcf	(btemp+11)^0,w,c
  3506  000A06  6E4C               	movwf	(btemp+9)^0,c
  3507                           
  3508                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3509  000A08  0EFD               	movlw	-3
  3510  000A0A  CFE3 F04D          	movff	plusw1,btemp+10
  3511  000A0E  0EFE               	movlw	-2
  3512  000A10  CFE3 F04E          	movff	plusw1,btemp+11
  3513  000A14  504B               	movf	(btemp+8)^0,w,c
  3514  000A16  244D               	addwf	(btemp+10)^0,w,c
  3515  000A18  6ED9               	movwf	fsr2l,c
  3516  000A1A  504C               	movf	(btemp+9)^0,w,c
  3517  000A1C  204E               	addwfc	(btemp+11)^0,w,c
  3518  000A1E  6EDA               	movwf	fsr2h,c
  3519                           
  3520                           ;stkvar	pipe_read@dado @ sp[(-1)+-4]
  3521  000A20  0EFB               	movlw	-5
  3522  000A22  CFE3 FFE9          	movff	plusw1,fsr0l
  3523  000A26  0EFC               	movlw	-4
  3524  000A28  CFE3 FFEA          	movff	plusw1,fsr0h
  3525  000A2C  CFDE FFEE          	movff	postinc2,postinc0
  3526  000A30  CFDD FFED          	movff	postdec2,postdec0
  3527  000A34                     
  3528                           ;pipe.c: 18:             pipe->read_pos = (pipe->read_pos + 1) % 2;
  3529                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3530  000A34  0EFD               	movlw	-3
  3531  000A36  CFE3 F04D          	movff	plusw1,btemp+10
  3532  000A3A  0EFE               	movlw	-2
  3533  000A3C  CFE3 F04E          	movff	plusw1,btemp+11
  3534  000A40  0E06               	movlw	6
  3535  000A42  244D               	addwf	(btemp+10)^0,w,c
  3536  000A44  6ED9               	movwf	fsr2l,c
  3537  000A46  0E00               	movlw	0
  3538  000A48  204E               	addwfc	(btemp+11)^0,w,c
  3539  000A4A  6EDA               	movwf	fsr2h,c
  3540  000A4C  CFDE F04D          	movff	postinc2,btemp+10
  3541  000A50  CFDD F04E          	movff	postdec2,btemp+11
  3542  000A54  0E01               	movlw	1
  3543  000A56  264D               	addwf	(btemp+10)^0,f,c
  3544  000A58  0E00               	movlw	0
  3545  000A5A  224E               	addwfc	(btemp+11)^0,f,c
  3546  000A5C  0E01               	movlw	1
  3547  000A5E  164D               	andwf	(btemp+10)^0,f,c
  3548  000A60  0E00               	movlw	0
  3549  000A62  164E               	andwf	(btemp+11)^0,f,c
  3550                           
  3551                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3552  000A64  0EFD               	movlw	-3
  3553  000A66  CFE3 F04B          	movff	plusw1,btemp+8
  3554  000A6A  0EFE               	movlw	-2
  3555  000A6C  CFE3 F04C          	movff	plusw1,btemp+9
  3556  000A70  0E06               	movlw	6
  3557  000A72  244B               	addwf	(btemp+8)^0,w,c
  3558  000A74  6ED9               	movwf	fsr2l,c
  3559  000A76  0E00               	movlw	0
  3560  000A78  204C               	addwfc	(btemp+9)^0,w,c
  3561  000A7A  6EDA               	movwf	fsr2h,c
  3562  000A7C  C04D  FFDE         	movff	btemp+10,postinc2
  3563  000A80  C04E  FFDD         	movff	btemp+11,postdec2
  3564  000A84                     
  3565                           ;pipe.c: 19:             pipe->size--;
  3566                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3567  000A84  0EFD               	movlw	-3
  3568  000A86  CFE3 F04D          	movff	plusw1,btemp+10
  3569  000A8A  0EFE               	movlw	-2
  3570  000A8C  CFE3 F04E          	movff	plusw1,btemp+11
  3571  000A90  0E04               	movlw	4
  3572  000A92  244D               	addwf	(btemp+10)^0,w,c
  3573  000A94  6ED9               	movwf	fsr2l,c
  3574  000A96  0E00               	movlw	0
  3575  000A98  204E               	addwfc	(btemp+11)^0,w,c
  3576  000A9A  6EDA               	movwf	fsr2h,c
  3577  000A9C  06DE               	decf	postinc2,f,c
  3578  000A9E  0E00               	movlw	0
  3579  000AA0  5ADD               	subwfb	postdec2,f,c
  3580  000AA2                     
  3581                           ;pipe.c: 20:             read_flag = 1;
  3582                           ;stkvar	pipe_read@read_flag @ sp[(-1)+0]
  3583  000AA2  0EFF               	movlw	-1
  3584  000AA4  6AE3               	clrf	plusw1,c
  3585  000AA6  2AE3               	incf	plusw1,f,c
  3586  000AA8                     
  3587                           ;pipe.c: 21:             if(sem_get_value(pipe->sem) < 0){
  3588                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3589  000AA8  0EFD               	movlw	-3
  3590  000AAA  CFE3 F04D          	movff	plusw1,btemp+10
  3591  000AAE  0EFE               	movlw	-2
  3592  000AB0  CFE3 F04E          	movff	plusw1,btemp+11
  3593  000AB4  0E0A               	movlw	10
  3594  000AB6  244D               	addwf	(btemp+10)^0,w,c
  3595  000AB8  6ED9               	movwf	fsr2l,c
  3596  000ABA  0E00               	movlw	0
  3597  000ABC  204E               	addwfc	(btemp+11)^0,w,c
  3598  000ABE  6EDA               	movwf	fsr2h,c
  3599  000AC0  0E12               	movlw	18
  3600  000AC2                     u79_21:
  3601  000AC2  CFDE FFE6          	movff	postinc2,postinc1
  3602  000AC6  2CE8               	decfsz	wreg,w,c
  3603  000AC8  EF61  F005         	goto	u79_21
  3604  000ACC  EC9D  F00A         	call	_sem_get_value	;wreg free
  3605  000AD0  BE44               	btfsc	(btemp+1)^0,7,c
  3606  000AD2  EF6F  F005         	goto	u80_20
  3607  000AD6  EF6D  F005         	goto	u80_21
  3608  000ADA                     u80_21:
  3609  000ADA  EF90  F005         	goto	l1799
  3610  000ADE                     u80_20:
  3611  000ADE                     
  3612                           ;pipe.c: 22:                 sem_post(&pipe->sem);
  3613                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3614  000ADE  0EFD               	movlw	-3
  3615  000AE0  50E3               	movf	plusw1,w,c
  3616  000AE2  0F0A               	addlw	10
  3617  000AE4  6E4D               	movwf	(btemp+10)^0,c
  3618  000AE6  0EFE               	movlw	-2
  3619  000AE8  CFE3 F04E          	movff	plusw1,btemp+11
  3620  000AEC  0E00               	movlw	0
  3621  000AEE  224E               	addwfc	(btemp+11)^0,f,c
  3622  000AF0  C04D  FFE6         	movff	btemp+10,postinc1
  3623  000AF4  C04E  FFE6         	movff	btemp+11,postinc1
  3624  000AF8  ECF8  F006         	call	_sem_post	;wreg free
  3625  000AFC  EF90  F005         	goto	l1799
  3626  000B00                     l301:
  3627                           
  3628                           ;pipe.c: 26:             (INTCONbits.GIE = 1);
  3629  000B00  8EF2               	bsf	242,7,c	;volatile
  3630  000B02                     
  3631                           ;pipe.c: 27:             sem_wait(&pipe->sem);
  3632                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3633  000B02  0EFD               	movlw	-3
  3634  000B04  50E3               	movf	plusw1,w,c
  3635  000B06  0F0A               	addlw	10
  3636  000B08  6E4D               	movwf	(btemp+10)^0,c
  3637  000B0A  0EFE               	movlw	-2
  3638  000B0C  CFE3 F04E          	movff	plusw1,btemp+11
  3639  000B10  0E00               	movlw	0
  3640  000B12  224E               	addwfc	(btemp+11)^0,f,c
  3641  000B14  C04D  FFE6         	movff	btemp+10,postinc1
  3642  000B18  C04E  FFE6         	movff	btemp+11,postinc1
  3643  000B1C  EC0A  F000         	call	_sem_wait	;wreg free
  3644  000B20                     l1799:
  3645                           
  3646                           ;pipe.c: 29:     }while(!read_flag);
  3647                           ;stkvar	pipe_read@read_flag @ sp[(-1)+0]
  3648  000B20  0EFF               	movlw	-1
  3649  000B22  50E3               	movf	plusw1,w,c
  3650  000B24  B4D8               	btfsc	status,2,c
  3651  000B26  EF97  F005         	goto	u81_21
  3652  000B2A  EF99  F005         	goto	u81_20
  3653  000B2E                     u81_21:
  3654  000B2E  EFDA  F004         	goto	l1783
  3655  000B32                     u81_20:
  3656  000B32                     
  3657                           ;pipe.c: 30:     (INTCONbits.GIE = 1);
  3658  000B32  8EF2               	bsf	242,7,c	;volatile
  3659  000B34                     
  3660                           ; _pipe_read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3661  000B34  0EFB               	movlw	251
  3662  000B36  26E1               	addwf	fsr1l,f,c
  3663  000B38  0EFF               	movlw	255
  3664  000B3A  22E2               	addwfc	fsr1h,f,c
  3665  000B3C  0012               	return		;funcret
  3666  000B3E                     __end_of_pipe_read:
  3667                           	callstack 0
  3668                           
  3669 ;; *************** function _horario *****************
  3670 ;; Defined at:
  3671 ;;		line 9 in file "motores.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1  [STACK] void 
  3678 ;; Registers used:
  3679 ;;		None
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3685 ;;      Params:         0       0       0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    5
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_rot_process
  3696 ;; This function uses a reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text25
  3700  00156E                     __ptext25:
  3701                           	callstack 0
  3702  00156E                     _horario:
  3703                           	callstack 20
  3704  00156E                     
  3705                           ;motores.c: 10:     PORTDbits.RD0 = 1;
  3706  00156E  8083               	bsf	131,0,c	;volatile
  3707  001570                     
  3708                           ; _horario: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  3709  001570  0012               	return		;funcret
  3710  001572                     __end_of_horario:
  3711                           	callstack 0
  3712                           
  3713 ;; *************** function _antihorario *****************
  3714 ;; Defined at:
  3715 ;;		line 5 in file "motores.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1  [STACK] void 
  3722 ;; Registers used:
  3723 ;;		None
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3729 ;;      Params:         0       0       0       0       0       0       0
  3730 ;;      Locals:         0       0       0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0
  3732 ;;      Totals:         0       0       0       0       0       0       0
  3733 ;;Total ram usage:        0 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    5
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_rot_process
  3740 ;; This function uses a reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text26
  3744  001572                     __ptext26:
  3745                           	callstack 0
  3746  001572                     _antihorario:
  3747                           	callstack 20
  3748  001572                     
  3749                           ;motores.c: 6:     PORTDbits.RD0 = 0;
  3750  001572  9083               	bcf	131,0,c	;volatile
  3751  001574                     
  3752                           ; _antihorario: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  3753  001574  0012               	return		;funcret
  3754  001576                     __end_of_antihorario:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _ISR_timer *****************
  3758 ;; Defined at:
  3759 ;;		line 96 in file "kernel.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;		None
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3773 ;;      Params:         0       0       0       0       0       0       0
  3774 ;;      Locals:         0       0       0       0       0       0       0
  3775 ;;      Temps:         18       0       0       0       0       0       0
  3776 ;;      Totals:        18       0       0       0       0       0       0
  3777 ;;Total ram usage:       18 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    4
  3780 ;; This function calls:
  3781 ;;		_RESTORE_CONTEXT
  3782 ;;		___wmul
  3783 ;;		_delay_release
  3784 ;; This function is called by:
  3785 ;;		Interrupt level 2
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	intcode
  3790  000008                     __pintcode:
  3791                           	callstack 0
  3792  000008                     _ISR_timer:
  3793                           	callstack 15
  3794                           
  3795                           ;incstack = 0
  3796  000008  ED89  F001         	call	int_func,f	;refresh shadow registers
  3797                           
  3798                           	psect	intcode_body
  3799  000312                     __pintcode_body:
  3800                           	callstack 15
  3801  000312                     int_func:
  3802                           	callstack 15
  3803  000312  0006               	pop		; remove dummy address from shadow register refresh
  3804  000314  CFE1 F02F          	movff	fsr1l,??_ISR_timer+4
  3805  000318  CFE2 F030          	movff	fsr1h,??_ISR_timer+5
  3806  00031C  CFD9 F031          	movff	fsr2l,??_ISR_timer+6
  3807  000320  CFDA F032          	movff	fsr2h,??_ISR_timer+7
  3808  000324  CFF3 F033          	movff	prodl,??_ISR_timer+8
  3809  000328  CFF4 F034          	movff	prodh,??_ISR_timer+9
  3810  00032C  C043  F035         	movff	btemp,??_ISR_timer+10
  3811  000330  C044  F036         	movff	btemp+1,??_ISR_timer+11
  3812  000334  C049  F037         	movff	btemp+6,??_ISR_timer+12
  3813  000338  C04A  F038         	movff	btemp+7,??_ISR_timer+13
  3814  00033C  C04B  F039         	movff	btemp+8,??_ISR_timer+14
  3815  000340  C04C  F03A         	movff	btemp+9,??_ISR_timer+15
  3816  000344  C04D  F03B         	movff	btemp+10,??_ISR_timer+16
  3817  000348  C04E  F03C         	movff	btemp+11,??_ISR_timer+17
  3818  00034C  EE14  F06A         	lfsr	1,___inthi_sp
  3819  000350                     
  3820                           ;kernel.c: 99:     TMR0L = 0;
  3821  000350  0E00               	movlw	0
  3822  000352  6ED6               	movwf	214,c	;volatile
  3823  000354                     
  3824                           ;kernel.c: 100:     INTCONbits.TMR0IF = 0;
  3825  000354  94F2               	bcf	242,2,c	;volatile
  3826  000356                     
  3827                           ;kernel.c: 101:     rr_quantum--;
  3828  000356  0663               	decf	_rr_quantum^0,f,c
  3829  000358  A0D8               	btfss	status,0,c
  3830  00035A  0664               	decf	(_rr_quantum+1)^0,f,c
  3831  00035C                     
  3832                           ;kernel.c: 103:     if (delay_release() && 1 == 2) {
  3833  00035C  EC8E  F007         	call	_delay_release	;wreg free
  3834  000360                     
  3835                           ;kernel.c: 114:         if(rr_quantum == 0){
  3836  000360  5063               	movf	_rr_quantum^0,w,c
  3837  000362  1064               	iorwf	(_rr_quantum+1)^0,w,c
  3838  000364  A4D8               	btfss	status,2,c
  3839  000366  EFB7  F001         	goto	i2u93_41
  3840  00036A  EFB9  F001         	goto	i2u93_40
  3841  00036E                     i2u93_41:
  3842  00036E  EFC3  F002         	goto	i2l166
  3843  000372                     i2u93_40:
  3844  000372                     
  3845                           ;kernel.c: 115:             rr_quantum = 8;
  3846  000372  0E00               	movlw	0
  3847  000374  6E64               	movwf	(_rr_quantum+1)^0,c
  3848  000376  0E08               	movlw	8
  3849  000378  6E63               	movwf	_rr_quantum^0,c
  3850  00037A  9EF2               	bcf	242,7,c	;volatile
  3851  00037C  0E71               	movlw	113
  3852  00037E  6EE6               	movwf	postinc1,c
  3853  000380  0E00               	movlw	0
  3854  000382  6EE6               	movwf	postinc1,c
  3855  000384  EE23  F099         	lfsr	2,_READY_QUEUE+678
  3856  000388  CFDE F02B          	movff	postinc2,??_ISR_timer
  3857  00038C  CFDD F02C          	movff	postdec2,??_ISR_timer+1
  3858  000390  C02B  FFE6         	movff	??_ISR_timer,postinc1
  3859  000394  C02C  FFE6         	movff	??_ISR_timer+1,postinc1
  3860  000398  EC7B  F008         	call	___wmul	;wreg free
  3861  00039C  0E5E               	movlw	low (_READY_QUEUE+107)
  3862  00039E  2443               	addwf	btemp^0,w,c
  3863  0003A0  6ED9               	movwf	fsr2l,c
  3864  0003A2  0E01               	movlw	high (_READY_QUEUE+107)
  3865  0003A4  2044               	addwfc	(btemp+1)^0,w,c
  3866  0003A6  6EDA               	movwf	fsr2h,c
  3867  0003A8  50DE               	movf	postinc2,w,c
  3868  0003AA  10DE               	iorwf	postinc2,w,c
  3869  0003AC  B4D8               	btfsc	status,2,c
  3870  0003AE  EFDB  F001         	goto	i2u94_41
  3871  0003B2  EFDD  F001         	goto	i2u94_40
  3872  0003B6                     i2u94_41:
  3873  0003B6  EFA8  F002         	goto	i2l1943
  3874  0003BA                     i2u94_40:
  3875  0003BA  0E00               	movlw	0
  3876  0003BC  6E06               	movwf	(_index+1)^0,c
  3877  0003BE  0E00               	movlw	0
  3878  0003C0  6E05               	movwf	_index^0,c
  3879  0003C2  0E71               	movlw	113
  3880  0003C4  6EE6               	movwf	postinc1,c
  3881  0003C6  0E00               	movlw	0
  3882  0003C8  6EE6               	movwf	postinc1,c
  3883  0003CA  EE23  F099         	lfsr	2,_READY_QUEUE+678
  3884  0003CE  CFDE F02B          	movff	postinc2,??_ISR_timer
  3885  0003D2  CFDD F02C          	movff	postdec2,??_ISR_timer+1
  3886  0003D6  C02B  FFE6         	movff	??_ISR_timer,postinc1
  3887  0003DA  C02C  FFE6         	movff	??_ISR_timer+1,postinc1
  3888  0003DE  EC7B  F008         	call	___wmul	;wreg free
  3889  0003E2  0EF7               	movlw	low (_READY_QUEUE+4)
  3890  0003E4  2443               	addwf	btemp^0,w,c
  3891  0003E6  6ED9               	movwf	fsr2l,c
  3892  0003E8  0E00               	movlw	high (_READY_QUEUE+4)
  3893  0003EA  2044               	addwfc	(btemp+1)^0,w,c
  3894  0003EC  6EDA               	movwf	fsr2h,c
  3895  0003EE  0E00               	movlw	0
  3896  0003F0  6EDF               	movwf	indf2,c
  3897  0003F2  6E2B               	movwf	??_ISR_timer^0,c
  3898  0003F4  6A2C               	clrf	(??_ISR_timer+1)^0,c
  3899  0003F6  0E71               	movlw	113
  3900  0003F8  6EE6               	movwf	postinc1,c
  3901  0003FA  0E00               	movlw	0
  3902  0003FC  6EE6               	movwf	postinc1,c
  3903  0003FE  EE23  F099         	lfsr	2,_READY_QUEUE+678
  3904  000402  CFDE F02D          	movff	postinc2,??_ISR_timer+2
  3905  000406  CFDD F02E          	movff	postdec2,??_ISR_timer+3
  3906  00040A  C02D  FFE6         	movff	??_ISR_timer+2,postinc1
  3907  00040E  C02E  FFE6         	movff	??_ISR_timer+3,postinc1
  3908  000412  EC7B  F008         	call	___wmul	;wreg free
  3909  000416  0EFA               	movlw	low (_READY_QUEUE+7)
  3910  000418  2443               	addwf	btemp^0,w,c
  3911  00041A  6ED9               	movwf	fsr2l,c
  3912  00041C  0E00               	movlw	high (_READY_QUEUE+7)
  3913  00041E  2044               	addwfc	(btemp+1)^0,w,c
  3914  000420  6EDA               	movwf	fsr2h,c
  3915  000422  C02B  FFDE         	movff	??_ISR_timer,postinc2
  3916  000426  C02C  FFDD         	movff	??_ISR_timer+1,postdec2
  3917  00042A  50E0               	movf	224,w,c	;volatile
  3918  00042C  6E2B               	movwf	??_ISR_timer^0,c
  3919  00042E  6A2C               	clrf	(??_ISR_timer+1)^0,c
  3920  000430  0E71               	movlw	113
  3921  000432  6EE6               	movwf	postinc1,c
  3922  000434  0E00               	movlw	0
  3923  000436  6EE6               	movwf	postinc1,c
  3924  000438  EE23  F099         	lfsr	2,_READY_QUEUE+678
  3925  00043C  CFDE F02D          	movff	postinc2,??_ISR_timer+2
  3926  000440  CFDD F02E          	movff	postdec2,??_ISR_timer+3
  3927  000444  C02D  FFE6         	movff	??_ISR_timer+2,postinc1
  3928  000448  C02E  FFE6         	movff	??_ISR_timer+3,postinc1
  3929  00044C  EC7B  F008         	call	___wmul	;wreg free
  3930  000450  0EFC               	movlw	low (_READY_QUEUE+9)
  3931  000452  2443               	addwf	btemp^0,w,c
  3932  000454  6ED9               	movwf	fsr2l,c
  3933  000456  0E00               	movlw	high (_READY_QUEUE+9)
  3934  000458  2044               	addwfc	(btemp+1)^0,w,c
  3935  00045A  6EDA               	movwf	fsr2h,c
  3936  00045C  C02B  FFDE         	movff	??_ISR_timer,postinc2
  3937  000460  C02C  FFDD         	movff	??_ISR_timer+1,postdec2
  3938  000464  50D8               	movf	216,w,c	;volatile
  3939  000466  6E2B               	movwf	??_ISR_timer^0,c
  3940  000468  6A2C               	clrf	(??_ISR_timer+1)^0,c
  3941  00046A  0E71               	movlw	113
  3942  00046C  6EE6               	movwf	postinc1,c
  3943  00046E  0E00               	movlw	0
  3944  000470  6EE6               	movwf	postinc1,c
  3945  000472  EE23  F099         	lfsr	2,_READY_QUEUE+678
  3946  000476  CFDE F02D          	movff	postinc2,??_ISR_timer+2
  3947  00047A  CFDD F02E          	movff	postdec2,??_ISR_timer+3
  3948  00047E  C02D  FFE6         	movff	??_ISR_timer+2,postinc1
  3949  000482  C02E  FFE6         	movff	??_ISR_timer+3,postinc1
  3950  000486  EC7B  F008         	call	___wmul	;wreg free
  3951  00048A  0EF8               	movlw	low (_READY_QUEUE+5)
  3952  00048C  2443               	addwf	btemp^0,w,c
  3953  00048E  6ED9               	movwf	fsr2l,c
  3954  000490  0E00               	movlw	high (_READY_QUEUE+5)
  3955  000492  2044               	addwfc	(btemp+1)^0,w,c
  3956  000494  6EDA               	movwf	fsr2h,c
  3957  000496  C02B  FFDE         	movff	??_ISR_timer,postinc2
  3958  00049A  C02C  FFDD         	movff	??_ISR_timer+1,postdec2
  3959  00049E  0E71               	movlw	113
  3960  0004A0  6EE6               	movwf	postinc1,c
  3961  0004A2  0E00               	movlw	0
  3962  0004A4  6EE6               	movwf	postinc1,c
  3963  0004A6  EE23  F099         	lfsr	2,_READY_QUEUE+678
  3964  0004AA  CFDE F02B          	movff	postinc2,??_ISR_timer
  3965  0004AE  CFDD F02C          	movff	postdec2,??_ISR_timer+1
  3966  0004B2  C02B  FFE6         	movff	??_ISR_timer,postinc1
  3967  0004B6  C02C  FFE6         	movff	??_ISR_timer+1,postinc1
  3968  0004BA  EC7B  F008         	call	___wmul	;wreg free
  3969  0004BE  0E5E               	movlw	low (_READY_QUEUE+107)
  3970  0004C0  2443               	addwf	btemp^0,w,c
  3971  0004C2  6ED9               	movwf	fsr2l,c
  3972  0004C4  0E01               	movlw	high (_READY_QUEUE+107)
  3973  0004C6  2044               	addwfc	(btemp+1)^0,w,c
  3974  0004C8  6EDA               	movwf	fsr2h,c
  3975  0004CA  0E00               	movlw	0
  3976  0004CC  6EDE               	movwf	postinc2,c
  3977  0004CE  0E00               	movlw	0
  3978  0004D0  6EDD               	movwf	postdec2,c
  3979  0004D2                     i2l1937:
  3980  0004D2  0E71               	movlw	113
  3981  0004D4  6EE6               	movwf	postinc1,c
  3982  0004D6  0E00               	movlw	0
  3983  0004D8  6EE6               	movwf	postinc1,c
  3984  0004DA  EE23  F099         	lfsr	2,_READY_QUEUE+678
  3985  0004DE  CFDE F02B          	movff	postinc2,??_ISR_timer
  3986  0004E2  CFDD F02C          	movff	postdec2,??_ISR_timer+1
  3987  0004E6  C02B  FFE6         	movff	??_ISR_timer,postinc1
  3988  0004EA  C02C  FFE6         	movff	??_ISR_timer+1,postinc1
  3989  0004EE  EC7B  F008         	call	___wmul	;wreg free
  3990  0004F2  0EF3               	movlw	low _READY_QUEUE
  3991  0004F4  6E2D               	movwf	(??_ISR_timer+2)^0,c
  3992  0004F6  0E00               	movlw	high _READY_QUEUE
  3993  0004F8  6E2E               	movwf	(??_ISR_timer+3)^0,c
  3994  0004FA  0E0B               	movlw	11
  3995  0004FC  262D               	addwf	(??_ISR_timer+2)^0,f,c
  3996  0004FE  0E00               	movlw	0
  3997  000500  222E               	addwfc	(??_ISR_timer+3)^0,f,c
  3998  000502  5043               	movf	btemp^0,w,c
  3999  000504  262D               	addwf	(??_ISR_timer+2)^0,f,c
  4000  000506  5044               	movf	(btemp+1)^0,w,c
  4001  000508  222E               	addwfc	(??_ISR_timer+3)^0,f,c
  4002  00050A  0E03               	movlw	3
  4003  00050C  6EE6               	movwf	postinc1,c
  4004  00050E  0E00               	movlw	0
  4005  000510  6EE6               	movwf	postinc1,c
  4006  000512  C005  FFE6         	movff	_index,postinc1
  4007  000516  C006  FFE6         	movff	_index+1,postinc1
  4008  00051A  EC7B  F008         	call	___wmul	;wreg free
  4009  00051E  5043               	movf	btemp^0,w,c
  4010  000520  242D               	addwf	(??_ISR_timer+2)^0,w,c
  4011  000522  6ED9               	movwf	fsr2l,c
  4012  000524  5044               	movf	(btemp+1)^0,w,c
  4013  000526  202E               	addwfc	(??_ISR_timer+3)^0,w,c
  4014  000528  6EDA               	movwf	fsr2h,c
  4015  00052A  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4016  00052E  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4017  000532  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4018  000536  4A05               	infsnz	_index^0,f,c
  4019  000538  2A06               	incf	(_index+1)^0,f,c
  4020  00053A  0006               	pop		;# 
  4021  00053C  50FC               	movf	252,w,c	;volatile
  4022  00053E  A4D8               	btfss	status,2,c
  4023  000540  EFA4  F002         	goto	i2u95_41
  4024  000544  EFA6  F002         	goto	i2u95_40
  4025  000548                     i2u95_41:
  4026  000548  EF69  F002         	goto	i2l1937
  4027  00054C                     i2u95_40:
  4028  00054C  EFC0  F002         	goto	i2l1945
  4029  000550                     i2l1943:
  4030  000550  0E71               	movlw	113
  4031  000552  6EE6               	movwf	postinc1,c
  4032  000554  0E00               	movlw	0
  4033  000556  6EE6               	movwf	postinc1,c
  4034  000558  EE23  F099         	lfsr	2,_READY_QUEUE+678
  4035  00055C  CFDE F02B          	movff	postinc2,??_ISR_timer
  4036  000560  CFDD F02C          	movff	postdec2,??_ISR_timer+1
  4037  000564  C02B  FFE6         	movff	??_ISR_timer,postinc1
  4038  000568  C02C  FFE6         	movff	??_ISR_timer+1,postinc1
  4039  00056C  EC7B  F008         	call	___wmul	;wreg free
  4040  000570  0EF7               	movlw	low (_READY_QUEUE+4)
  4041  000572  2443               	addwf	btemp^0,w,c
  4042  000574  6ED9               	movwf	fsr2l,c
  4043  000576  0E00               	movlw	high (_READY_QUEUE+4)
  4044  000578  2044               	addwfc	(btemp+1)^0,w,c
  4045  00057A  6EDA               	movwf	fsr2h,c
  4046  00057C  0E00               	movlw	0
  4047  00057E  6EDF               	movwf	indf2,c
  4048  000580                     i2l1945:
  4049  000580  8EF2               	bsf	242,7,c	;volatile
  4050  000582                     
  4051                           ;kernel.c: 117:             RESTORE_CONTEXT();
  4052  000582  ECE0  F002         	call	_RESTORE_CONTEXT	;wreg free
  4053  000586                     i2l166:
  4054  000586  C03C  F04E         	movff	??_ISR_timer+17,btemp+11
  4055  00058A  C03B  F04D         	movff	??_ISR_timer+16,btemp+10
  4056  00058E  C03A  F04C         	movff	??_ISR_timer+15,btemp+9
  4057  000592  C039  F04B         	movff	??_ISR_timer+14,btemp+8
  4058  000596  C038  F04A         	movff	??_ISR_timer+13,btemp+7
  4059  00059A  C037  F049         	movff	??_ISR_timer+12,btemp+6
  4060  00059E  C036  F044         	movff	??_ISR_timer+11,btemp+1
  4061  0005A2  C035  F043         	movff	??_ISR_timer+10,btemp
  4062  0005A6  C034  FFF4         	movff	??_ISR_timer+9,prodh
  4063  0005AA  C033  FFF3         	movff	??_ISR_timer+8,prodl
  4064  0005AE  C032  FFDA         	movff	??_ISR_timer+7,fsr2h
  4065  0005B2  C031  FFD9         	movff	??_ISR_timer+6,fsr2l
  4066  0005B6  C030  FFE2         	movff	??_ISR_timer+5,fsr1h
  4067  0005BA  C02F  FFE1         	movff	??_ISR_timer+4,fsr1l
  4068  0005BE  0011               	retfie		f
  4069  0005C0                     __end_of_ISR_timer:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _delay_release *****************
  4073 ;; Defined at:
  4074 ;;		line 82 in file "kernel.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  i               2    6[COMRAM] unsigned int 
  4079 ;;  task_release    2    4[COMRAM] unsigned int 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  2    0[COMRAM] unsigned int 
  4082 ;; Registers used:
  4083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4089 ;;      Params:         2       0       0       0       0       0       0
  4090 ;;      Locals:         4       0       0       0       0       0       0
  4091 ;;      Temps:          2       0       0       0       0       0       0
  4092 ;;      Totals:         8       0       0       0       0       0       0
  4093 ;;Total ram usage:        8 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    1
  4096 ;; This function calls:
  4097 ;;		___wmul
  4098 ;; This function is called by:
  4099 ;;		_ISR_timer
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text28
  4104  000F1C                     __ptext28:
  4105                           	callstack 0
  4106  000F1C                     _delay_release:
  4107                           	callstack 17
  4108  000F1C                     
  4109                           ;kernel.c: 83:     u_int i, task_released = 0;
  4110  000F1C  0E00               	movlw	0
  4111  000F1E  6E28               	movwf	(delay_release@task_released+1)^0,c
  4112  000F20  0E00               	movlw	0
  4113  000F22  6E27               	movwf	delay_release@task_released^0,c
  4114                           
  4115                           ;kernel.c: 84:     for(i = 0; i < READY_QUEUE.nr_of_tasks; i++){
  4116  000F24  0E00               	movlw	0
  4117  000F26  6E2A               	movwf	(delay_release@i+1)^0,c
  4118  000F28  0E00               	movlw	0
  4119  000F2A  6E29               	movwf	delay_release@i^0,c
  4120  000F2C  EFF5  F007         	goto	i2l1755
  4121  000F30                     i2l1745:
  4122                           
  4123                           ;kernel.c: 85:         if(READY_QUEUE.QUEUE[i].task_state == WAITING) {
  4124  000F30  0E71               	movlw	113
  4125  000F32  6EE6               	movwf	postinc1,c
  4126  000F34  0E00               	movlw	0
  4127  000F36  6EE6               	movwf	postinc1,c
  4128  000F38  C029  FFE6         	movff	delay_release@i,postinc1
  4129  000F3C  C02A  FFE6         	movff	delay_release@i+1,postinc1
  4130  000F40  EC7B  F008         	call	___wmul	;wreg free
  4131  000F44  0EF7               	movlw	low (_READY_QUEUE+4)
  4132  000F46  2443               	addwf	btemp^0,w,c
  4133  000F48  6ED9               	movwf	fsr2l,c
  4134  000F4A  0E00               	movlw	high (_READY_QUEUE+4)
  4135  000F4C  2044               	addwfc	(btemp+1)^0,w,c
  4136  000F4E  6EDA               	movwf	fsr2h,c
  4137  000F50  0E02               	movlw	2
  4138  000F52  18DE               	xorwf	postinc2,w,c
  4139  000F54  A4D8               	btfss	status,2,c
  4140  000F56  EFAF  F007         	goto	i2u71_41
  4141  000F5A  EFB1  F007         	goto	i2u71_40
  4142  000F5E                     i2u71_41:
  4143  000F5E  EFF3  F007         	goto	i2l1753
  4144  000F62                     i2u71_40:
  4145  000F62                     
  4146                           ;kernel.c: 86:             READY_QUEUE.QUEUE[i].task_delay_time--;
  4147  000F62  0E71               	movlw	113
  4148  000F64  6EE6               	movwf	postinc1,c
  4149  000F66  0E00               	movlw	0
  4150  000F68  6EE6               	movwf	postinc1,c
  4151  000F6A  C029  FFE6         	movff	delay_release@i,postinc1
  4152  000F6E  C02A  FFE6         	movff	delay_release@i+1,postinc1
  4153  000F72  EC7B  F008         	call	___wmul	;wreg free
  4154  000F76  0E62               	movlw	low (_READY_QUEUE+111)
  4155  000F78  2443               	addwf	btemp^0,w,c
  4156  000F7A  6ED9               	movwf	fsr2l,c
  4157  000F7C  0E01               	movlw	high (_READY_QUEUE+111)
  4158  000F7E  2044               	addwfc	(btemp+1)^0,w,c
  4159  000F80  6EDA               	movwf	fsr2h,c
  4160  000F82  06DE               	decf	postinc2,f,c
  4161  000F84  0E00               	movlw	0
  4162  000F86  5ADD               	subwfb	postdec2,f,c
  4163                           
  4164                           ;kernel.c: 87:             if(READY_QUEUE.QUEUE[i].task_delay_time == 0) {
  4165  000F88  0E71               	movlw	113
  4166  000F8A  6EE6               	movwf	postinc1,c
  4167  000F8C  0E00               	movlw	0
  4168  000F8E  6EE6               	movwf	postinc1,c
  4169  000F90  C029  FFE6         	movff	delay_release@i,postinc1
  4170  000F94  C02A  FFE6         	movff	delay_release@i+1,postinc1
  4171  000F98  EC7B  F008         	call	___wmul	;wreg free
  4172  000F9C  0E62               	movlw	low (_READY_QUEUE+111)
  4173  000F9E  2443               	addwf	btemp^0,w,c
  4174  000FA0  6ED9               	movwf	fsr2l,c
  4175  000FA2  0E01               	movlw	high (_READY_QUEUE+111)
  4176  000FA4  2044               	addwfc	(btemp+1)^0,w,c
  4177  000FA6  6EDA               	movwf	fsr2h,c
  4178  000FA8  50DE               	movf	postinc2,w,c
  4179  000FAA  10DE               	iorwf	postinc2,w,c
  4180  000FAC  A4D8               	btfss	status,2,c
  4181  000FAE  EFDB  F007         	goto	i2u72_41
  4182  000FB2  EFDD  F007         	goto	i2u72_40
  4183  000FB6                     i2u72_41:
  4184  000FB6  EFF3  F007         	goto	i2l1753
  4185  000FBA                     i2u72_40:
  4186  000FBA                     
  4187                           ;kernel.c: 88:                 READY_QUEUE.QUEUE[i].task_state = READY;
  4188  000FBA  0E71               	movlw	113
  4189  000FBC  6EE6               	movwf	postinc1,c
  4190  000FBE  0E00               	movlw	0
  4191  000FC0  6EE6               	movwf	postinc1,c
  4192  000FC2  C029  FFE6         	movff	delay_release@i,postinc1
  4193  000FC6  C02A  FFE6         	movff	delay_release@i+1,postinc1
  4194  000FCA  EC7B  F008         	call	___wmul	;wreg free
  4195  000FCE  0EF7               	movlw	low (_READY_QUEUE+4)
  4196  000FD0  2443               	addwf	btemp^0,w,c
  4197  000FD2  6ED9               	movwf	fsr2l,c
  4198  000FD4  0E00               	movlw	high (_READY_QUEUE+4)
  4199  000FD6  2044               	addwfc	(btemp+1)^0,w,c
  4200  000FD8  6EDA               	movwf	fsr2h,c
  4201  000FDA  0E00               	movlw	0
  4202  000FDC  6EDF               	movwf	indf2,c
  4203  000FDE                     
  4204                           ;kernel.c: 89:                 task_released = 1;
  4205  000FDE  0E00               	movlw	0
  4206  000FE0  6E28               	movwf	(delay_release@task_released+1)^0,c
  4207  000FE2  0E01               	movlw	1
  4208  000FE4  6E27               	movwf	delay_release@task_released^0,c
  4209  000FE6                     i2l1753:
  4210                           
  4211                           ;kernel.c: 92:     }
  4212  000FE6  4A29               	infsnz	delay_release@i^0,f,c
  4213  000FE8  2A2A               	incf	(delay_release@i+1)^0,f,c
  4214  000FEA                     i2l1755:
  4215  000FEA  EE23  F09B         	lfsr	2,_READY_QUEUE+680
  4216  000FEE  50DE               	movf	postinc2,w,c
  4217  000FF0  5C29               	subwf	delay_release@i^0,w,c
  4218  000FF2  50DE               	movf	postinc2,w,c
  4219  000FF4  582A               	subwfb	(delay_release@i+1)^0,w,c
  4220  000FF6  A0D8               	btfss	status,0,c
  4221  000FF8  EF00  F008         	goto	i2u73_41
  4222  000FFC  EF02  F008         	goto	i2u73_40
  4223  001000                     i2u73_41:
  4224  001000  EF98  F007         	goto	i2l1745
  4225  001004                     i2u73_40:
  4226  001004                     
  4227                           ;kernel.c: 93:     return task_released;
  4228  001004  C027  F023         	movff	delay_release@task_released,?_delay_release
  4229  001008  C028  F024         	movff	delay_release@task_released+1,?_delay_release+1
  4230  00100C  0012               	return		;funcret
  4231  00100E                     __end_of_delay_release:
  4232                           	callstack 0
  4233  0000                     
  4234                           	psect	text29
  4235  000000                     __ptext29:
  4236                           	callstack 0
  4237  000000                     
  4238                           	psect	rparam
  4239  0000                     
  4240                           	psect	temp
  4241  000043                     btemp:
  4242                           	callstack 0
  4243  000043                     	ds	32
  4244  0000                     wtemp0	set	btemp
  4245  0000                     wtemp1	set	btemp+2
  4246  0000                     wtemp2	set	btemp+4
  4247  0000                     wtemp3	set	btemp+6
  4248  0000                     wtemp4	set	btemp+8
  4249  0000                     wtemp5	set	btemp+10
  4250  0000                     wtemp8	set	btemp+1
  4251  0000                     ttemp0	set	btemp
  4252  0000                     ttemp1	set	btemp+3
  4253  0000                     ttemp2	set	btemp+6
  4254  0000                     ttemp3	set	btemp+9
  4255  0000                     ttemp5	set	btemp+1
  4256  0000                     ttemp6	set	btemp+4
  4257  0000                     ttemp7	set	btemp+8
  4258  0000                     ltemp0	set	btemp
  4259  0000                     ltemp1	set	btemp+4
  4260  0000                     ltemp2	set	btemp+8
  4261  0000                     lltemp0	set	btemp
  4262  0000                     lltemp1	set	btemp+8
  4263  0000                     lltemp2	set	btemp+16
  4264  0000                     lltemp3	set	btemp+24
  4265                           
  4266                           	psect	idloc
  4267                           
  4268                           ;Config register IDLOC0 @ 0x200000
  4269                           ;	unspecified, using default values
  4270  200000                     	org	2097152
  4271  200000  FF                 	db	255
  4272                           
  4273                           ;Config register IDLOC1 @ 0x200001
  4274                           ;	unspecified, using default values
  4275  200001                     	org	2097153
  4276  200001  FF                 	db	255
  4277                           
  4278                           ;Config register IDLOC2 @ 0x200002
  4279                           ;	unspecified, using default values
  4280  200002                     	org	2097154
  4281  200002  FF                 	db	255
  4282                           
  4283                           ;Config register IDLOC3 @ 0x200003
  4284                           ;	unspecified, using default values
  4285  200003                     	org	2097155
  4286  200003  FF                 	db	255
  4287                           
  4288                           ;Config register IDLOC4 @ 0x200004
  4289                           ;	unspecified, using default values
  4290  200004                     	org	2097156
  4291  200004  FF                 	db	255
  4292                           
  4293                           ;Config register IDLOC5 @ 0x200005
  4294                           ;	unspecified, using default values
  4295  200005                     	org	2097157
  4296  200005  FF                 	db	255
  4297                           
  4298                           ;Config register IDLOC6 @ 0x200006
  4299                           ;	unspecified, using default values
  4300  200006                     	org	2097158
  4301  200006  FF                 	db	255
  4302                           
  4303                           ;Config register IDLOC7 @ 0x200007
  4304                           ;	unspecified, using default values
  4305  200007                     	org	2097159
  4306  200007  FF                 	db	255
  4307                           
  4308                           	psect	config
  4309                           
  4310                           ; Padding undefined space
  4311  300000                     	org	3145728
  4312  300000  FF                 	db	255
  4313                           
  4314                           ;Config register CONFIG1H @ 0x300001
  4315                           ;	Oscillator Selection bits
  4316                           ;	OSC = 0x7, unprogrammed default
  4317                           ;	Fail-Safe Clock Monitor Enable bit
  4318                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4319                           ;	Internal/External Oscillator Switchover bit
  4320                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4321  300001                     	org	3145729
  4322  300001  07                 	db	7
  4323                           
  4324                           ;Config register CONFIG2L @ 0x300002
  4325                           ;	Power-up Timer Enable bit
  4326                           ;	PWRT = 0x1, unprogrammed default
  4327                           ;	Brown-out Reset Enable bits
  4328                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  4329                           ;	Brown Out Reset Voltage bits
  4330                           ;	BORV = 0x3, unprogrammed default
  4331  300002                     	org	3145730
  4332  300002  1B                 	db	27
  4333                           
  4334                           ;Config register CONFIG2H @ 0x300003
  4335                           ;	Watchdog Timer Enable bit
  4336                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4337                           ;	Watchdog Timer Postscale Select bits
  4338                           ;	WDTPS = 0xF, unprogrammed default
  4339  300003                     	org	3145731
  4340  300003  1E                 	db	30
  4341                           
  4342                           ; Padding undefined space
  4343  300004                     	org	3145732
  4344  300004  FF                 	db	255
  4345                           
  4346                           ;Config register CONFIG3H @ 0x300005
  4347                           ;	CCP2 MUX bit
  4348                           ;	CCP2MX = 0x1, unprogrammed default
  4349                           ;	PORTB A/D Enable bit
  4350                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4351                           ;	Low-Power Timer1 Oscillator Enable bit
  4352                           ;	LPT1OSC = 0x0, unprogrammed default
  4353                           ;	MCLR Pin Enable bit
  4354                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4355  300005                     	org	3145733
  4356  300005  81                 	db	129
  4357                           
  4358                           ;Config register CONFIG4L @ 0x300006
  4359                           ;	Stack Full/Underflow Reset Enable bit
  4360                           ;	STVREN = 0x1, unprogrammed default
  4361                           ;	Single-Supply ICSP Enable bit
  4362                           ;	LVP = OFF, Single-Supply ICSP disabled
  4363                           ;	Extended Instruction Set Enable bit
  4364                           ;	XINST = 0x0, unprogrammed default
  4365                           ;	Background Debugger Enable bit
  4366                           ;	DEBUG = 0x1, unprogrammed default
  4367  300006                     	org	3145734
  4368  300006  81                 	db	129
  4369                           
  4370                           ; Padding undefined space
  4371  300007                     	org	3145735
  4372  300007  FF                 	db	255
  4373                           
  4374                           ;Config register CONFIG5L @ 0x300008
  4375                           ;	unspecified, using default values
  4376                           ;	Code Protection bit
  4377                           ;	CP0 = 0x1, unprogrammed default
  4378                           ;	Code Protection bit
  4379                           ;	CP1 = 0x1, unprogrammed default
  4380                           ;	Code Protection bit
  4381                           ;	CP2 = 0x1, unprogrammed default
  4382                           ;	Code Protection bit
  4383                           ;	CP3 = 0x1, unprogrammed default
  4384  300008                     	org	3145736
  4385  300008  0F                 	db	15
  4386                           
  4387                           ;Config register CONFIG5H @ 0x300009
  4388                           ;	Boot Block Code Protection bit
  4389                           ;	CPB = 0x1, unprogrammed default
  4390                           ;	Data EEPROM Code Protection bit
  4391                           ;	CPD = OFF, Data EEPROM not code-protected
  4392  300009                     	org	3145737
  4393  300009  C0                 	db	192
  4394                           
  4395                           ;Config register CONFIG6L @ 0x30000A
  4396                           ;	unspecified, using default values
  4397                           ;	Write Protection bit
  4398                           ;	WRT0 = 0x1, unprogrammed default
  4399                           ;	Write Protection bit
  4400                           ;	WRT1 = 0x1, unprogrammed default
  4401                           ;	Write Protection bit
  4402                           ;	WRT2 = 0x1, unprogrammed default
  4403                           ;	Write Protection bit
  4404                           ;	WRT3 = 0x1, unprogrammed default
  4405  30000A                     	org	3145738
  4406  30000A  0F                 	db	15
  4407                           
  4408                           ;Config register CONFIG6H @ 0x30000B
  4409                           ;	unspecified, using default values
  4410                           ;	Configuration Register Write Protection bit
  4411                           ;	WRTC = 0x1, unprogrammed default
  4412                           ;	Boot Block Write Protection bit
  4413                           ;	WRTB = 0x1, unprogrammed default
  4414                           ;	Data EEPROM Write Protection bit
  4415                           ;	WRTD = 0x1, unprogrammed default
  4416  30000B                     	org	3145739
  4417  30000B  E0                 	db	224
  4418                           
  4419                           ;Config register CONFIG7L @ 0x30000C
  4420                           ;	unspecified, using default values
  4421                           ;	Table Read Protection bit
  4422                           ;	EBTR0 = 0x1, unprogrammed default
  4423                           ;	Table Read Protection bit
  4424                           ;	EBTR1 = 0x1, unprogrammed default
  4425                           ;	Table Read Protection bit
  4426                           ;	EBTR2 = 0x1, unprogrammed default
  4427                           ;	Table Read Protection bit
  4428                           ;	EBTR3 = 0x1, unprogrammed default
  4429  30000C                     	org	3145740
  4430  30000C  0F                 	db	15
  4431                           
  4432                           ;Config register CONFIG7H @ 0x30000D
  4433                           ;	unspecified, using default values
  4434                           ;	Boot Block Table Read Protection bit
  4435                           ;	EBTRB = 0x1, unprogrammed default
  4436  30000D                     	org	3145741
  4437  30000D  40                 	db	64
  4438                           tosu	equ	0xFFF
  4439                           tosh	equ	0xFFE
  4440                           tosl	equ	0xFFD
  4441                           stkptr	equ	0xFFC
  4442                           pclatu	equ	0xFFB
  4443                           pclath	equ	0xFFA
  4444                           pcl	equ	0xFF9
  4445                           tblptru	equ	0xFF8
  4446                           tblptrh	equ	0xFF7
  4447                           tblptrl	equ	0xFF6
  4448                           tablat	equ	0xFF5
  4449                           prodh	equ	0xFF4
  4450                           prodl	equ	0xFF3
  4451                           indf0	equ	0xFEF
  4452                           postinc0	equ	0xFEE
  4453                           postdec0	equ	0xFED
  4454                           preinc0	equ	0xFEC
  4455                           plusw0	equ	0xFEB
  4456                           fsr0h	equ	0xFEA
  4457                           fsr0l	equ	0xFE9
  4458                           wreg	equ	0xFE8
  4459                           indf1	equ	0xFE7
  4460                           postinc1	equ	0xFE6
  4461                           postdec1	equ	0xFE5
  4462                           preinc1	equ	0xFE4
  4463                           plusw1	equ	0xFE3
  4464                           fsr1h	equ	0xFE2
  4465                           fsr1l	equ	0xFE1
  4466                           bsr	equ	0xFE0
  4467                           indf2	equ	0xFDF
  4468                           postinc2	equ	0xFDE
  4469                           postdec2	equ	0xFDD
  4470                           preinc2	equ	0xFDC
  4471                           plusw2	equ	0xFDB
  4472                           fsr2h	equ	0xFDA
  4473                           fsr2l	equ	0xFD9
  4474                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         716
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      68
    BANK0           128    115     115
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pipe_write@pipe	PTR struct pipe size(2) Largest target is 28
		 -> pipe_attitude(COMRAM[28]), 

    pipe_read@dado	PTR int  size(2) Largest target is 2
		 -> rot_process@room_temperature(UNKNOWN), 

    pipe_read@pipe	PTR struct pipe size(2) Largest target is 28
		 -> pipe_attitude(COMRAM[28]), 

    pipe_init@pipe	PTR struct pipe size(2) Largest target is 28
		 -> pipe_attitude(COMRAM[28]), 

    sem_post@s	PTR struct semaphore size(2) Largest target is 28
		 -> pipe_attitude(COMRAM[28]), 

    sem_wait@s	PTR struct semaphore size(2) Largest target is 28
		 -> pipe_attitude(COMRAM[28]), 

    sem_init@s	PTR struct semaphore size(2) Largest target is 28
		 -> pipe_attitude(COMRAM[28]), 

    OS_create_task@func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), rot_process(), rot_read(), 

    new_task.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), rot_process(), rot_read(), 

    aux.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), rot_process(), rot_read(), 

    S72tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), rot_process(), rot_read(), 

    READY_QUEUE.QUEUE.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), rot_process(), rot_read(), 


Critical Paths under _main in COMRAM

    _main->_OS_create_task
    _OS_config->_OS_create_task
    _pipe_init->_sem_init

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _rot_read in COMRAM

    None.

Critical Paths under _rot_process in COMRAM

    None.

Critical Paths under _rot_read in COMRAM

    None.

Critical Paths under _rot_process in COMRAM

    None.

Critical Paths under _ISR_timer in COMRAM

    _ISR_timer->_delay_release

Critical Paths under _main in BANK0

    _main->_OS_create_task
    _OS_config->_OS_create_task
    _config_user_tasks->_pipe_init

Critical Paths under _idle in BANK0

    None.

Critical Paths under _rot_read in BANK0

    None.

Critical Paths under _rot_process in BANK0

    None.

Critical Paths under _rot_read in BANK0

    None.

Critical Paths under _rot_process in BANK0

    None.

Critical Paths under _ISR_timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _idle in BANK1

    None.

Critical Paths under _rot_read in BANK1

    None.

Critical Paths under _rot_process in BANK1

    None.

Critical Paths under _rot_read in BANK1

    None.

Critical Paths under _rot_process in BANK1

    None.

Critical Paths under _ISR_timer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _rot_read in BANK2

    None.

Critical Paths under _rot_process in BANK2

    None.

Critical Paths under _rot_read in BANK2

    None.

Critical Paths under _rot_process in BANK2

    None.

Critical Paths under _ISR_timer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _rot_read in BANK3

    None.

Critical Paths under _rot_process in BANK3

    None.

Critical Paths under _rot_read in BANK3

    None.

Critical Paths under _rot_process in BANK3

    None.

Critical Paths under _ISR_timer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _rot_read in BANK4

    None.

Critical Paths under _rot_process in BANK4

    None.

Critical Paths under _rot_read in BANK4

    None.

Critical Paths under _rot_process in BANK4

    None.

Critical Paths under _ISR_timer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _rot_read in BANK5

    None.

Critical Paths under _rot_process in BANK5

    None.

Critical Paths under _rot_read in BANK5

    None.

Critical Paths under _rot_process in BANK5

    None.

Critical Paths under _ISR_timer in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6776
                          _OS_config
                     _OS_create_task
                           _OS_start
 ---------------------------------------------------------------------------------
 (1) _OS_start                                             0     0      0       0
                _config_ad_conversor
                    _config_flywheel
                      _config_timer0
 ---------------------------------------------------------------------------------
 (2) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_flywheel                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ad_conversor                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OS_config                                            0     0      0    3671
                     _OS_create_task
                  _config_user_tasks
 ---------------------------------------------------------------------------------
 (2) _config_user_tasks                                    0     0      0     566
                          _pipe_init
 ---------------------------------------------------------------------------------
 (3) _pipe_init                                            4     0      4     566
                                              0 BANK0      4     0      4
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             4     0      4     262
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _OS_create_task                                     121   115      6    3105
                                             26 COMRAM     6     0      6
                                              0 BANK0    115   115      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1983
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _rot_read                                             2     2      0    2033
                         _pipe_write
                        _rot_ad_read
 ---------------------------------------------------------------------------------
 (6) _rot_ad_read                                          4     4      0     247
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     217
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           5     1      4    1763
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1025
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2     433
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      37
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _rot_process                                          2     2      0    1831
                        _antihorario
                            _horario
                          _pipe_read
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            5     1      4    1763
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1025
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2     433
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      37
 ---------------------------------------------------------------------------------
 (6) _horario                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _antihorario                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _rot_read                                             2     2      0    2033
                         _pipe_write
                        _rot_ad_read
 ---------------------------------------------------------------------------------
 (6) _rot_ad_read                                          4     4      0     247
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     217
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           5     1      4    1763
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1025
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2     433
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      37
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _rot_process                                          2     2      0    1831
                        _antihorario
                            _horario
                          _pipe_read
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            5     1      4    1763
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1025
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2     433
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      37
 ---------------------------------------------------------------------------------
 (6) _horario                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _antihorario                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer                                          18    18      0    4694
                                              8 COMRAM    18    18      0
                    _RESTORE_CONTEXT
                             ___wmul
                      _delay_release
 ---------------------------------------------------------------------------------
 (13) _delay_release                                       8     6      2    2119
                                              0 COMRAM     8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1983
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OS_config
     _OS_create_task
       ___wmul
     _config_user_tasks
       _pipe_init
         _sem_init
   _OS_create_task
     ___wmul
   _OS_start
     _config_ad_conversor
     _config_flywheel
     _config_timer0

 _idle (ROOT)

 _rot_read (ROOT)
   _pipe_write
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod
   _rot_ad_read
     ___awdiv

 _rot_process (ROOT)
   _antihorario
   _horario
   _pipe_read
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod

 _rot_read (ROOT)
   _pipe_write
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod
   _rot_ad_read
     ___awdiv

 _rot_process (ROOT)
   _antihorario
   _horario
   _pipe_read
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod

 _ISR_timer (ROOT)
   _RESTORE_CONTEXT
     _scheduler
       _ROUND_ROBIN_sched
         ___lwmod
   ___wmul
   _delay_release
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     2AA      17       44.4%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     73      73       5       89.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      44       1       71.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0      24       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B7      15        0.0%
DATA                 0      0     385       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Feb 15 14:57:55 2022

   __end_of_config_user_tasks 153A                            l40 0DE6                            l17 1400  
                          l18 1400                            l35 156C                   _rot_process 121C  
                 _prox_tarefa 0003                           l114 147E                           l204 1220  
                         l301 0B00                           l117 1560                           l231 1520  
                         l304 0B32                           l312 09A0                           l305 0B34  
                         l313 09A2                           l129 1314                           l170 07C8  
                         l234 1508                           l331 1212                           l172 071C  
                         l260 13BE                           l309 096E                           l237 1566  
                         l270 030C                           l342 1182                           l336 1574  
                         l176 0808                           l328 11AC                           l169 05C8  
                         l282 1546                           l266 0254                           l339 1570  
                         l195 1538                           l198 1484                           l279 0F16  
                         l297 136C                           l573 0CB0                           l850 10EC  
                         _BSR 000FE0                           _TOS 000FFD                   fp__rot_read 0000  
                         wreg 000FE8                          l1101 14EE                          l1103 14F8  
                        l1201 0BEA                          l1105 14FE                          l2001 13FC  
                        l1211 0C68                          l1203 0C08                          l1205 0C36  
                        l1213 0C86                          l1301 1198                          l1215 0C98  
                        l1207 0C5A                          l1311 11BA                          l1303 119C  
                        l1231 155E                          l1161 153A                          l1217 0CA4  
                        l1209 0C5E                          l1313 11C6                          l1305 119E  
                        l1315 11C8                          l1307 11A8                          l1411 14B4  
                        l1091 1512                          l1227 1550                          l1181 0B66  
                        l1317 1206                          l1309 11AA                          l1413 14B6  
                        l1093 151A                          l1229 155C                          l1191 0B94  
                        l1183 0B6C                          l1175 0B46                          l1415 14DC  
                        l1095 1562                          l1193 0BAE                          l1185 0B7C  
                        l1177 0B4A                          l1097 14E4                          l1089 150A  
                        l1195 0BB8                          l1187 0B88                          l1179 0B5A  
                        l1099 14EC                          l1365 1572                          l1621 0014  
                        l1197 0BD6                          l1189 0B8C                          l1367 156E  
                        l1615 1568                          l1631 00EE                          l1623 0016  
                        l1199 0BDA                          l1551 1380                          l1561 1052  
                        l1721 05CA                          l1641 017C                          l1633 010C  
                        l1625 0028                          l1553 13BC                          l1571 10C2  
                        l1563 1056                          l1555 1010                          l1731 064E  
                        l1723 05D6                          l1651 02C2                          l1643 01B2  
                        l1635 010E                          l1627 0044                          l1299 1194  
                        l1547 136E                          l1565 1066                          l1557 102A  
                        l1573 10E0                          l1661 0DF0                          l1581 0D14  
                        l1741 0806                          l1733 071E                          l1725 05E2  
                        l1645 01EA                          l1637 014A                          l1653 02D6  
                        l1629 0092                          l1549 1370                          l1567 1094  
                        l1559 1034                          l1671 0EF6                          l1663 0DF2  
                        l1591 0D98                          l1583 0D34                          l1735 078A  
                        l1727 0610                          l1655 0304                          l1647 0222  
                        l1639 014E                          l1569 10B8                          l1673 0F14  
                        l1665 0E04                          l1593 0DDA                          l1577 0CC2  
                        l1737 07AA                          l1729 0612                          l1657 0306  
                        l1649 02BC                          l1761 081A                          l1681 1176  
                        l1667 0E2E                          l1587 0D40                          l1579 0CD6  
                        l1739 07CA                          l1659 030A                          l1771 0916  
                        l1763 084A                          l1675 10FA                          l1781 09B0  
                        l1669 0E9A                          l1589 0D5E                          l1773 094C  
                        l1765 08A2                          l1757 0814                          l1677 1112  
                        l1791 0AA2                          l1783 09B4                          l1775 0970  
                        l1767 08F2                          l1759 0816                          l1951 1494  
                        l1679 1144                          l1793 0AA8                          l1785 09DE  
                        l1961 1294                          l1953 1220                          l1777 098E  
                        l1769 0910                          l1795 0ADE                          l1787 0A34  
                        l1779 09AE                          l1955 1240                          l1797 0B02  
                        l1789 0A84                          l1957 1266                          l1949 1484  
                        l1981 12BA                          l1973 1316                          l1799 0B20  
                        l1959 126E                          l1983 12C0                          l1975 1354  
                        l1991 1522                          l1985 12C8                          l1977 12A2  
                        l1993 1446                          l1987 12D0                          l1979 12B2  
                        l1995 145E                          l1989 130A                          l1997 147A  
                        l1999 13C0                          u1001 1302                          _WREG 000FE8  
                        _idle 14B4                          _main 13C0                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0043                          prodh 000FF4                          prodl 000FF3  
                        start 000C                  ___param_bank 000000                         ?_main 0023  
             __end_of___awdiv 0CBA                         _ADRES 000FC3               __end_of___lwmod 10F6  
                       i2l140 100C                         i2l139 1004                         i2l166 0586  
                       u13_20 0B5A                         u13_21 0B56                         u14_20 0B7C  
                       u14_21 0B78                         u15_20 0BAE                         u15_21 0BAA  
                       u16_20 0BEA                         u16_21 0BE6                         u17_20 0C36  
                       u17_21 0C32                         _TMR0L 000FD6                         u18_20 0C86  
                       u18_21 0C82                         u19_20 0C98                         u27_20 11BA  
                       u19_21 0C94                         u27_21 11B6                         u60_20 0D98  
                       u60_21 0D94                         u61_20 0DDA                         u61_21 0DD6  
                       u70_20 07C4                         u70_21 07C0                         u55_20 102A  
                       u63_20 0044                         u47_20 14C6                         u55_21 1026  
                       u63_21 0040                         u47_21 14C0                         u47_26 14C8  
                       u80_20 0ADE                         u56_20 1066                         u64_20 014A  
                       u80_21 0ADA                         u56_21 1062                         u64_21 0146  
                       u81_20 0B32                         u57_20 1094                         u65_20 02D2  
                       u81_21 0B2E                         u57_21 1090                         u65_21 02CE  
                       _TRISA 000F92                         _TRISD 000F95                         u58_20 10E0  
                       u66_20 0E2E                         u74_20 084A                         u58_21 10DC  
                       u66_21 0E2A                         u74_21 0846                         u59_20 0D34  
                       u59_21 0D30                         u75_21 0930                         u76_20 094C  
                       u76_21 0948                         u69_20 064E                         u77_20 09A0  
                       u69_21 064A                         u77_21 099C                         u78_20 09DE  
                       u78_21 09DA                         u79_21 0AC2                         u96_20 1266  
                       u96_21 1262                         u97_20 1294                         u97_21 1290  
          __size_of_ISR_timer 05B8                         _index 0005               __end_of_horario 1572  
                       tablat 000FF5                         ltemp0 0043                         ltemp1 0047  
                       ltemp2 004B                         plusw0 000FEB                         plusw1 000FE3  
                       plusw2 000FDB                         ttemp0 0043                         ttemp1 0046  
                       ttemp2 0049                         ttemp3 004C                         ttemp5 0044  
                       ttemp6 0047                         ttemp7 004B                         status 000FD8  
             ??_config_timer0 003D                         wtemp0 0043                         wtemp1 0045  
                       wtemp2 0047                         wtemp3 0049                         wtemp4 004B  
                       wtemp5 004D                         wtemp8 0044              __end_of_OS_start 1562  
              delay_release@i 0029         __end_of_sem_get_value 1550               __initialization 1408  
                __end_of_idle 14E4                  __end_of_main 1408    __size_of_config_user_tasks 0018  
          __size_of_OS_config 003A              ??_OS_create_task 0080                        ??_main 0043  
             _RESTORE_CONTEXT 05C0                 __activetblptr 000000                        _ADCON1 000FC1  
       __end_of_delay_release 100E                        i2l1751 0FDE                        i2l1743 0F1C  
                      i2l1753 0FE6                        i2l1745 0F30                        i2l1921 037A  
                      i2l1747 0F62                        i2l1755 0FEA                        i2l1931 042A  
                      i2l1923 037C                        i2l1851 0356                        i2l1749 0FBA  
                      i2l1941 053C                        i2l1933 0464                        i2l1925 03BA  
                      i2l1917 0360                        i2l1853 035C                        i2l1935 049E  
                      i2l1927 03C2                        i2l1943 0550                        i2l1919 0372  
                      i2l1847 0350                        i2l1945 0580                        i2l1937 04D2  
                      i2l1929 03F2                        i2l1849 0354                        i2l1947 0582  
                      i2l1939 0536                        _STATUS 000FD8                        _STKPTR 000FFC  
 __end_of_config_ad_conversor 150A          __size_of_antihorario 0004             __end_of_ISR_timer 05C0  
                      ___wmul 10F6            OS_create_task@func 0041                        clear_0 1428  
                      clear_1 143A              __end_of_sem_init 13C0              __end_of_sem_wait 0312  
            __end_of_sem_post 0F1C                  __pdataCOMRAM 0063                        lltemp0 0043  
                      lltemp1 004B                        lltemp2 0053                        lltemp3 005B  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
            __end_of_rot_read 14B4                fp__rot_process 0000             __end_of_OS_config 1480  
                  __accesstop 0080       __end_of__initialization 1440                 ___rparam_used 000001  
              __pcstackCOMRAM 0023                    ___inthi_sp 046A       __end_of_RESTORE_CONTEXT 0812  
                   ?_OS_start 0023              OS_create_task@id 003D      __size_of_config_flywheel 0006  
          __size_of_scheduler 0006            __size_of_pipe_init 0058            __size_of_pipe_read 0192  
      OS_create_task@new_task 0082                    ??_OS_start 003D                       i2u71_40 0F62  
                     i2u71_41 0F5E                       i2u72_40 0FBA                       i2u72_41 0FB6  
                     i2u73_40 1004                       i2u73_41 1000                       i2u93_40 0372  
                     i2u93_41 036E                       i2u94_40 03BA                       i2u94_41 03B6  
                     i2u95_40 054C                       i2u95_41 0548                   sem_init@val 003F  
                     __Hparam 0000                     ?_sem_init 003D                       __Lparam 0000  
                     ___awdiv 0B3E               __size_of___wmul 0096                       ___lwmod 100E  
                     __pcinit 1408                       __ramtop 0600                       __ptext0 13C0  
                     __ptext1 1550                       __ptext2 150A                       __ptext3 1562  
                     __ptext4 14E4                       __ptext5 1446                       __ptext6 1522  
                     __ptext7 1316                       __ptext8 136E                       __ptext9 12A2  
                   _T0CONbits 000FD5           OS_create_task@prior 003F                       _horario 156E  
                     fp__idle 0000             __end_of_scheduler 156E                __pintcode_body 0312  
        end_of_initialization 1440             __end_of_pipe_init 136E             __end_of_pipe_read 0B3E  
                     int_func 0312                    _pipe_write 0812         __end_of_config_timer0 1522  
        __size_of_rot_ad_read 0090                    ??_sem_init 0041             ??_config_flywheel 003D  
                     postdec0 000FED                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
               pipe_init@pipe 0080                     _ISR_timer 0008                     _PORTDbits 000F83  
        __size_of_rot_process 0086                    _rr_quantum 0063                     _TRISDbits 000F95  
      __size_of_sem_get_value 0016                     _OS_config 1446                __end_of___wmul 118C  
      __size_of_delay_release 00F2                 __pidataCOMRAM 1576                    ?_ISR_timer 0023  
           _ROUND_ROBIN_sched 0CBA  __size_of_config_ad_conversor 0026           start_initialization 1408  
     __size_of_OS_create_task 0074             __size_of_OS_start 0012                    ?_OS_config 0023  
               _sem_get_value 153A                 _pipe_attitude 0007           __end_of_antihorario 1576  
   __end_of_ROUND_ROBIN_sched 0DF0                   __pbssBIGRAM 00F3                   __pbssCOMRAM 0001  
               __pcstackBANK0 0080                 _delay_release 0F1C                     __pintcode 0008  
           __size_of_sem_init 0052             __size_of_sem_wait 02FE             __size_of_sem_post 012C  
                 ??_ISR_timer 002B             __size_of_rot_read 0034           __size_of_pipe_write 019A  
              ?_delay_release 0023               _config_flywheel 1562                     _scheduler 1568  
                    _LATDbits 000F8C                   ??_OS_config 0043                     _pipe_init 1316  
                   _pipe_read 09AC                   _antihorario 1572    __size_of_ROUND_ROBIN_sched 0136  
                  _ADCON0bits 000FC2                    _ADCON1bits 000FC1                    _ADCON2bits 000FC0  
    __size_of_RESTORE_CONTEXT 0252                      _OS_start 1550                _OS_create_task 12A2  
         _config_ad_conversor 14E4    delay_release@task_released 0027                    ?_pipe_init 0080  
                 _READY_QUEUE 00F3                      __Hrparam 0000                      __Lrparam 0000  
            __size_of___awdiv 017C              __size_of___lwmod 00E8              pipe_init@tamanho 0082  
        ?_config_ad_conversor 0023        __end_of_OS_create_task 1316       __end_of_config_flywheel 1568  
            __size_of_horario 0004        __size_of_config_timer0 0018               ??_delay_release 0025  
                    __ptext10 10F6                      __ptext11 14B4                      __ptext20 0DF0  
                    __ptext12 1480                      __ptext21 100E                      __ptext13 118C  
                    __ptext22 153A                      __ptext14 0B3E                      __ptext23 121C  
                    __ptext15 0812                      __ptext24 09AC                      __ptext16 0014  
                    __ptext25 156E                      __ptext17 05C0                      __ptext26 1572  
                    __ptext18 1568                      __ptext19 0CBA                      __ptext28 0F1C  
                    __ptext29 0000                     sem_init@s 003D                 __size_of_idle 0030  
               __size_of_main 0048                      _sem_init 136E                      _sem_wait 0014  
                    _sem_post 0DF0           __end_of_rot_ad_read 121C                      _rot_read 1480  
                    _possivel 0001         ??_config_ad_conversor 003D               ?_OS_create_task 003D  
                  _INTCONbits 000FF2           __end_of_rot_process 12A2            __end_of_pipe_write 09AC  
                    intlevel1 0000                      intlevel2 0000                   ??_pipe_init 0041  
               _config_timer0 150A             _config_user_tasks 1522            ?_config_user_tasks 0023  
            ?_config_flywheel 0023           ??_config_user_tasks 0041                   _rot_ad_read 118C  
              ?_config_timer0 0023  
