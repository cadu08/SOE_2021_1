

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Feb 16 08:10:15 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87 ;;___wmul@product	offset	0
    88 ;;___wmul@multiplier	offset=-2 (param)
    89 ;;___wmul@multiplicand	offset=-4 (param)
    90 ;;thermostat_sensing_1@readed_temperature	offset	0
    91 ;;thermostat_value@temperatura_ambiente	offset	0
    92 ;;thermostat_value@resultadoAD	offset	2
    93 ;;___awdiv@quotient	offset	0
    94 ;;___awdiv@sign	offset	2
    95 ;;___awdiv@counter	offset	3
    96 ;;___awdiv@dividend	offset=-2 (param)
    97 ;;___awdiv@divisor	offset=-4 (param)
    98 ;;pipe_write@write_flag	offset	0
    99 ;;pipe_write@pipe	offset=-2 (param)
   100 ;;pipe_write@dado	offset=-4 (param)
   101 ;;sem_wait@s	offset=-2 (param)
   102 ;;RESTORE_CONTEXT@stack_size	offset	0
   103 ;;RESTORE_CONTEXT@task_running	offset	2
   104 ;;ROUND_ROBIN_sched@task_selected	offset	0
   105 ;;ROUND_ROBIN_sched@try	offset	2
   106 ;;sem_post@s	offset=-2 (param)
   107 ;;___lwmod@counter	offset	0
   108 ;;___lwmod@dividend	offset=-2 (param)
   109 ;;___lwmod@divisor	offset=-4 (param)
   110 ;;sem_get_value@s	offset=-18 (param)
   111 ;;ac_controller_1@room_temperature	offset	0
   112 ;;pipe_read@read_flag	offset	0
   113 ;;pipe_read@pipe	offset=-2 (param)
   114 ;;pipe_read@dado	offset=-4 (param)
   115 ;;___wmul@product	offset	0
   116 ;;___wmul@multiplier	offset=-2 (param)
   117 ;;___wmul@multiplicand	offset=-4 (param)
   118 ;;RESTORE_CONTEXT@stack_size	offset	0
   119 ;;RESTORE_CONTEXT@task_running	offset	2
   120 ;;ROUND_ROBIN_sched@task_selected	offset	0
   121 ;;ROUND_ROBIN_sched@try	offset	2
   122 ;;___lwmod@counter	offset	0
   123 ;;___lwmod@dividend	offset=-2 (param)
   124 ;;___lwmod@divisor	offset=-4 (param)
   125                           
   126                           	psect	idataCOMRAM
   127  0015B8                     __pidataCOMRAM:
   128                           	callstack 0
   129                           
   130                           ;initializer for _rr_quantum
   131  0015B8  0008               	dw	8
   132  0000                     _TOS	set	4093
   133  0000                     _ADRES	set	4035
   134  0000                     _TRISD	set	3989
   135  0000                     _ADCON2bits	set	4032
   136  0000                     _ADCON1	set	4033
   137  0000                     _ADCON1bits	set	4033
   138  0000                     _ADCON0bits	set	4034
   139  0000                     _TRISA	set	3986
   140  0000                     _TMR0L	set	4054
   141  0000                     _STKPTR	set	4092
   142  0000                     _STATUS	set	4056
   143  0000                     _BSR	set	4064
   144  0000                     _WREG	set	4072
   145  0000                     _T0CONbits	set	4053
   146  0000                     _INTCONbits	set	4082
   147  0000                     _PORTDbits	set	3971
   148  0000                     _LATDbits	set	3980
   149  0000                     _TRISDbits	set	3989
   150                           
   151                           ; #config settings
   152                           
   153                           	psect	cinit
   154  0013B2                     __pcinit:
   155                           	callstack 0
   156  0013B2                     start_initialization:
   157                           	callstack 0
   158  0013B2                     __initialization:
   159                           	callstack 0
   160                           
   161                           ; Initialize objects allocated to COMRAM (2 bytes)
   162                           ; load TBLPTR registers with __pidataCOMRAM
   163  0013B2  0EB8               	movlw	low __pidataCOMRAM
   164  0013B4  6EF6               	movwf	tblptrl,c
   165  0013B6  0E15               	movlw	high __pidataCOMRAM
   166  0013B8  6EF7               	movwf	tblptrh,c
   167  0013BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   168  0013BC  6EF8               	movwf	tblptru,c
   169  0013BE  0009               	tblrd		*+	;fetch initializer
   170  0013C0  CFF5 F067          	movff	tablat,__pdataCOMRAM
   171  0013C4  0009               	tblrd		*+	;fetch initializer
   172  0013C6  CFF5 F068          	movff	tablat,__pdataCOMRAM+1
   173                           
   174                           ; Clear objects allocated to BIGRAM (682 bytes)
   175  0013CA  EE01  F01A         	lfsr	0,__pbssBIGRAM
   176  0013CE  EE22 F0AA          	lfsr	2,682
   177  0013D2                     clear_0:
   178  0013D2  6AEE               	clrf	postinc0,c
   179  0013D4  50DD               	movf	postdec2,w,c
   180  0013D6  50D9               	movf	fsr2l,w,c
   181  0013D8  E1FC               	bnz	clear_0
   182  0013DA  50DA               	movf	fsr2h,w,c
   183  0013DC  E1FA               	bnz	clear_0
   184                           
   185                           ; Clear objects allocated to BANK1 (26 bytes)
   186  0013DE  EE01  F000         	lfsr	0,__pbssBANK1
   187  0013E2  0E1A               	movlw	26
   188  0013E4                     clear_1:
   189  0013E4  6AEE               	clrf	postinc0,c
   190  0013E6  06E8               	decf	wreg,f,c
   191  0013E8  E1FD               	bnz	clear_1
   192                           
   193                           ; Clear objects allocated to COMRAM (44 bytes)
   194  0013EA  EE00  F001         	lfsr	0,__pbssCOMRAM
   195  0013EE  0E2C               	movlw	44
   196  0013F0                     clear_2:
   197  0013F0  6AEE               	clrf	postinc0,c
   198  0013F2  06E8               	decf	wreg,f,c
   199  0013F4  E1FD               	bnz	clear_2
   200  0013F6                     end_of_initialization:
   201                           	callstack 0
   202  0013F6                     __end_of__initialization:
   203                           	callstack 0
   204  0013F6  0100               	movlb	0
   205  0013F8  EF20  F00A         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208  000001                     __pbssCOMRAM:
   209                           	callstack 0
   210  000001                     _room_temperature:
   211                           	callstack 0
   212  000001                     	ds	2
   213  000003                     _possivel:
   214                           	callstack 0
   215  000003                     	ds	2
   216  000005                     _prox_tarefa:
   217                           	callstack 0
   218  000005                     	ds	2
   219  000007                     _index:
   220                           	callstack 0
   221  000007                     	ds	2
   222  000009                     _sem_temp_r:
   223                           	callstack 0
   224  000009                     	ds	18
   225  00001B                     _sem_temp_w:
   226                           	callstack 0
   227  00001B                     	ds	18
   228                           
   229                           	psect	dataCOMRAM
   230  000067                     __pdataCOMRAM:
   231                           	callstack 0
   232  000067                     _rr_quantum:
   233                           	callstack 0
   234  000067                     	ds	2
   235                           
   236                           	psect	bssBANK1
   237  000100                     __pbssBANK1:
   238                           	callstack 0
   239  000100                     _pipe_temperature:
   240                           	callstack 0
   241  000100                     	ds	26
   242                           
   243                           	psect	bssBIGRAM
   244  00011A                     __pbssBIGRAM:
   245                           	callstack 0
   246  00011A                     _READY_QUEUE:
   247                           	callstack 0
   248  00011A                     	ds	682
   249                           
   250                           	psect	cstackBANK0
   251  000080                     __pcstackBANK0:
   252                           	callstack 0
   253  000080                     OS_create_task@prior:
   254                           	callstack 0
   255  000080                     sem_init@s:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x0
   259  000080                     	ds	2
   260  000082                     OS_create_task@func:
   261                           	callstack 0
   262  000082                     sem_init@val:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x2
   266  000082                     	ds	2
   267  000084                     ??_OS_create_task:
   268  000084                     pipe_init@pipe:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x4
   272  000084                     	ds	2
   273  000086                     pipe_init@tamanho:
   274                           	callstack 0
   275  000086                     OS_create_task@new_task:
   276                           	callstack 0
   277                           
   278                           ; 113 bytes @ 0x6
   279  000086                     	ds	2
   280  000088                     
   281                           ; 1 bytes @ 0x8
   282  000088                     	ds	111
   283  0000F7                     
   284                           ; 1 bytes @ 0x77
   285                           
   286                           	psect	cstackCOMRAM
   287  00004D                     __pcstackCOMRAM:
   288                           	callstack 0
   289  00004D                     ?_delay_release:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x0
   293  00004D                     	ds	2
   294  00004F                     
   295                           ; 1 bytes @ 0x2
   296  00004F                     	ds	2
   297  000051                     delay_release@task_released:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x4
   301  000051                     	ds	2
   302  000053                     delay_release@i:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x6
   306  000053                     	ds	2
   307  000055                     ??_ISR_timer:
   308                           
   309                           ; 1 bytes @ 0x8
   310  000055                     	ds	18
   311                           
   312 ;;
   313 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   314 ;;
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 14 in file "main.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  2   24[None  ] int 
   324 ;; Registers used:
   325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   331 ;;      Params:         0       0       0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0       0       0
   334 ;;      Totals:         0       0       0       0       0       0       0
   335 ;;Total ram usage:        0 bytes
   336 ;; Hardware stack levels required when called:   16
   337 ;; This function calls:
   338 ;;		_OS_config
   339 ;;		_OS_create_task
   340 ;;		_OS_start
   341 ;; This function is called by:
   342 ;;		Startup code after reset
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           	psect	text0
   347  001440                     __ptext0:
   348                           	callstack 0
   349  001440                     _main:
   350                           	callstack 15
   351  001440                     
   352                           ;main.c: 20:     if(1 == 1)
   353  001440  EC3E  F00A         	call	_OS_config	;wreg free
   354                           
   355                           ;main.c: 21:     {;main.c: 22:       OS_create_task(4, thermostat_sensing_1);
   356  001444  0E00               	movlw	0
   357  001446  0100               	movlb	0	; () banked
   358  001448  6F81               	movwf	(OS_create_task@prior+1)& (0+255),b
   359  00144A  0E04               	movlw	4
   360  00144C  6F80               	movwf	OS_create_task@prior& (0+255),b
   361  00144E  0EB0               	movlw	low _thermostat_sensing_1
   362  001450  6F82               	movwf	OS_create_task@func& (0+255),b
   363  001452  0E14               	movlw	high _thermostat_sensing_1
   364  001454  6F83               	movwf	(OS_create_task@func+1)& (0+255),b
   365  001456  EC1E  F009         	call	_OS_create_task	;wreg free
   366                           
   367                           ;main.c: 23:       OS_create_task(4, ac_controller_1);
   368  00145A  0E00               	movlw	0
   369  00145C  0100               	movlb	0	; () banked
   370  00145E  6F81               	movwf	(OS_create_task@prior+1)& (0+255),b
   371  001460  0E04               	movlw	4
   372  001462  6F80               	movwf	OS_create_task@prior& (0+255),b
   373  001464  0EB6               	movlw	low _ac_controller_1
   374  001466  6F82               	movwf	OS_create_task@func& (0+255),b
   375  001468  0E11               	movlw	high _ac_controller_1
   376  00146A  6F83               	movwf	(OS_create_task@func+1)& (0+255),b
   377  00146C  EC1E  F009         	call	_OS_create_task	;wreg free
   378  001470                     
   379                           ;main.c: 33:     OS_start();
   380  001470  ECC9  F00A         	call	_OS_start	;wreg free
   381  001474                     l28:
   382  001474  EF3A  F00A         	goto	l28
   383  001478  EF06  F000         	goto	start
   384  00147C                     __end_of_main:
   385                           	callstack 0
   386                           
   387 ;; *************** function _OS_start *****************
   388 ;; Defined at:
   389 ;;		line 32 in file "kernel.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   403 ;;      Params:         0       0       0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0       0       0
   406 ;;      Totals:         0       0       0       0       0       0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; Hardware stack levels required when called:   13
   410 ;; This function calls:
   411 ;;		_config_ad_conversor
   412 ;;		_config_flywheel
   413 ;;		_config_timer0
   414 ;; This function is called by:
   415 ;;		_main
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text1
   420  001592                     __ptext1:
   421                           	callstack 0
   422  001592                     _OS_start:
   423                           	callstack 17
   424  001592                     
   425                           ;kernel.c: 33:     config_timer0();
   426  001592  ECB2  F00A         	call	_config_timer0	;wreg free
   427                           
   428                           ;kernel.c: 36:     config_flywheel();
   429  001596  ECD2  F00A         	call	_config_flywheel	;wreg free
   430                           
   431                           ;kernel.c: 40:     config_ad_conversor();
   432  00159A  EC9F  F00A         	call	_config_ad_conversor	;wreg free
   433  00159E                     
   434                           ;kernel.c: 43:     (INTCONbits.GIE = 1);
   435  00159E  8EF2               	bsf	242,7,c	;volatile
   436  0015A0                     
   437                           ;kernel.c: 44:     T0CONbits.TMR0ON;
   438  0015A0  50D5               	movf	213,w,c	;volatile
   439  0015A2  0012               	return		;funcret
   440  0015A4                     __end_of_OS_start:
   441                           	callstack 0
   442                           
   443 ;; *************** function _config_timer0 *****************
   444 ;; Defined at:
   445 ;;		line 7 in file "config_hw.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   459 ;;      Params:         0       0       0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; Hardware stack levels required when called:   12
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_OS_start
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text2
   474  001564                     __ptext2:
   475                           	callstack 0
   476  001564                     _config_timer0:
   477                           	callstack 17
   478  001564                     
   479                           ;config_hw.c: 10:    INTCONbits.PEIE = 1;
   480  001564  8CF2               	bsf	242,6,c	;volatile
   481                           
   482                           ;config_hw.c: 11:    INTCONbits.TMR0IE = 1;
   483  001566  8AF2               	bsf	242,5,c	;volatile
   484                           
   485                           ;config_hw.c: 12:    INTCONbits.TMR0IF = 0;
   486  001568  94F2               	bcf	242,2,c	;volatile
   487                           
   488                           ;config_hw.c: 13:    T0CONbits.PSA = 0;
   489  00156A  96D5               	bcf	213,3,c	;volatile
   490  00156C                     
   491                           ;config_hw.c: 14:    T0CONbits.T0PS = 0b010;
   492  00156C  50D5               	movf	213,w,c	;volatile
   493  00156E  0BF8               	andlw	-8
   494  001570  0902               	iorlw	2
   495  001572  6ED5               	movwf	213,c	;volatile
   496  001574                     
   497                           ;config_hw.c: 15:    T0CONbits.T0CS = 0;
   498  001574  9AD5               	bcf	213,5,c	;volatile
   499                           
   500                           ;config_hw.c: 16:    TMR0L = 0;
   501  001576  0E00               	movlw	0
   502  001578  6ED6               	movwf	214,c	;volatile
   503  00157A  0012               	return		;funcret
   504  00157C                     __end_of_config_timer0:
   505                           	callstack 0
   506                           
   507 ;; *************** function _config_flywheel *****************
   508 ;; Defined at:
   509 ;;		line 38 in file "config_hw.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   523 ;;      Params:         0       0       0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:   12
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_OS_start
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text3
   538  0015A4                     __ptext3:
   539                           	callstack 0
   540  0015A4                     _config_flywheel:
   541                           	callstack 17
   542  0015A4                     
   543                           ;config_hw.c: 40:     TRISD = 0x00;
   544  0015A4  0E00               	movlw	0
   545  0015A6  6E95               	movwf	149,c	;volatile
   546  0015A8  0012               	return		;funcret
   547  0015AA                     __end_of_config_flywheel:
   548                           	callstack 0
   549                           
   550 ;; *************** function _config_ad_conversor *****************
   551 ;; Defined at:
   552 ;;		line 19 in file "config_hw.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, status,2
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   566 ;;      Params:         0       0       0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:   12
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_OS_start
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text4
   581  00153E                     __ptext4:
   582                           	callstack 0
   583  00153E                     _config_ad_conversor:
   584                           	callstack 17
   585  00153E                     
   586                           ;config_hw.c: 21:     TRISA = 0b00000001;
   587  00153E  0E01               	movlw	1
   588  001540  6E92               	movwf	146,c	;volatile
   589                           
   590                           ;config_hw.c: 22:     ADCON0bits.CHS = 0b0000;
   591  001542  0EC3               	movlw	-61
   592  001544  16C2               	andwf	194,f,c	;volatile
   593  001546                     
   594                           ;config_hw.c: 24:     ADCON1bits.VCFG1 = 0;
   595  001546  9AC1               	bcf	193,5,c	;volatile
   596  001548                     
   597                           ;config_hw.c: 25:     ADCON1bits.VCFG0 = 0;
   598  001548  98C1               	bcf	193,4,c	;volatile
   599                           
   600                           ;config_hw.c: 27:     ADCON1bits.PCFG = 0b0000;
   601  00154A  0EF0               	movlw	-16
   602  00154C  16C1               	andwf	193,f,c	;volatile
   603                           
   604                           ;config_hw.c: 28:     ADCON1 = 0x0E;
   605  00154E  0E0E               	movlw	14
   606  001550  6EC1               	movwf	193,c	;volatile
   607  001552                     
   608                           ;config_hw.c: 31:     ADCON2bits.ADFM = 1;
   609  001552  8EC0               	bsf	192,7,c	;volatile
   610                           
   611                           ;config_hw.c: 33:     ADCON2bits.ACQT = 0b111;
   612  001554  0E38               	movlw	56
   613  001556  12C0               	iorwf	192,f,c	;volatile
   614  001558                     
   615                           ;config_hw.c: 34:     ADCON0bits.ADON = 1;
   616  001558  80C2               	bsf	194,0,c	;volatile
   617                           
   618                           ;config_hw.c: 35:     ADCON2bits.ADCS = 0b110;
   619  00155A  50C0               	movf	192,w,c	;volatile
   620  00155C  0BF8               	andlw	-8
   621  00155E  0906               	iorlw	6
   622  001560  6EC0               	movwf	192,c	;volatile
   623  001562  0012               	return		;funcret
   624  001564                     __end_of_config_ad_conversor:
   625                           	callstack 0
   626                           
   627 ;; *************** function _OS_config *****************
   628 ;; Defined at:
   629 ;;		line 19 in file "kernel.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   643 ;;      Params:         0       0       0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:   15
   650 ;; This function calls:
   651 ;;		_OS_create_task
   652 ;;		_config_user_tasks
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text5
   659  00147C                     __ptext5:
   660                           	callstack 0
   661  00147C                     _OS_config:
   662                           	callstack 15
   663  00147C                     
   664                           ;kernel.c: 21:     READY_QUEUE.nr_of_tasks = 0;
   665  00147C  0E00               	movlw	0
   666  00147E  CFE8 F3C2          	movff	wreg,_READY_QUEUE+680
   667  001482  0E00               	movlw	0
   668  001484  CFE8 F3C3          	movff	wreg,_READY_QUEUE+681
   669                           
   670                           ;kernel.c: 22:     READY_QUEUE.task_running = 0;
   671  001488  0E00               	movlw	0
   672  00148A  CFE8 F3C0          	movff	wreg,_READY_QUEUE+678
   673  00148E  0E00               	movlw	0
   674  001490  CFE8 F3C1          	movff	wreg,_READY_QUEUE+679
   675  001494                     
   676                           ;kernel.c: 25:     OS_create_task(1, idle);
   677  001494  0E00               	movlw	0
   678  001496  0100               	movlb	0	; () banked
   679  001498  6F81               	movwf	(OS_create_task@prior+1)& (0+255),b
   680  00149A  0E01               	movlw	1
   681  00149C  6F80               	movwf	OS_create_task@prior& (0+255),b
   682  00149E  0EE4               	movlw	low _idle
   683  0014A0  6F82               	movwf	OS_create_task@func& (0+255),b
   684  0014A2  0E14               	movlw	high _idle
   685  0014A4  6F83               	movwf	(OS_create_task@func+1)& (0+255),b
   686  0014A6  EC1E  F009         	call	_OS_create_task	;# 
   687  0014AA                     
   688                           ;kernel.c: 29:     config_user_tasks();
   689  0014AA  ECFE  F009         	call	_config_user_tasks	;wreg free
   690  0014AE  0012               	return		;funcret
   691  0014B0                     __end_of_OS_config:
   692                           	callstack 0
   693                           
   694 ;; *************** function _config_user_tasks *****************
   695 ;; Defined at:
   696 ;;		line 5 in file "user_tasks.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   710 ;;      Params:         0       0       0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0
   713 ;;      Totals:         0       0       0       0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:   14
   717 ;; This function calls:
   718 ;;		_pipe_init
   719 ;;		_sem_init
   720 ;; This function is called by:
   721 ;;		_OS_config
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text6
   726  0013FC                     __ptext6:
   727                           	callstack 0
   728  0013FC                     _config_user_tasks:
   729                           	callstack 15
   730  0013FC                     
   731                           ;user_tasks.c: 8:    pipe_init(&pipe_temperature, 1);
   732  0013FC  0E00               	movlw	low _pipe_temperature
   733  0013FE  0100               	movlb	0	; () banked
   734  001400  6F84               	movwf	pipe_init@pipe& (0+255),b
   735  001402  0E01               	movlw	high _pipe_temperature
   736  001404  6F85               	movwf	(pipe_init@pipe+1)& (0+255),b
   737  001406  0E00               	movlw	0
   738  001408  6F87               	movwf	(pipe_init@tamanho+1)& (0+255),b
   739  00140A  0E01               	movlw	1
   740  00140C  6F86               	movwf	pipe_init@tamanho& (0+255),b
   741  00140E  EC83  F009         	call	_pipe_init	;wreg free
   742                           
   743                           ;user_tasks.c: 11:    sem_init(&sem_temp_w, 1);
   744  001412  0E1B               	movlw	low _sem_temp_w
   745  001414  0100               	movlb	0	; () banked
   746  001416  6F80               	movwf	sem_init@s& (0+255),b
   747  001418  0E00               	movlw	high _sem_temp_w
   748  00141A  6F81               	movwf	(sem_init@s+1)& (0+255),b
   749  00141C  0E00               	movlw	0
   750  00141E  6F83               	movwf	(sem_init@val+1)& (0+255),b
   751  001420  0E01               	movlw	1
   752  001422  6F82               	movwf	sem_init@val& (0+255),b
   753  001424  ECAF  F009         	call	_sem_init	;wreg free
   754                           
   755                           ;user_tasks.c: 15:    if(1 == 1){
   756  001428  0E09               	movlw	low _sem_temp_r
   757  00142A  0100               	movlb	0	; () banked
   758  00142C  6F80               	movwf	sem_init@s& (0+255),b
   759  00142E  0E00               	movlw	high _sem_temp_r
   760  001430  6F81               	movwf	(sem_init@s+1)& (0+255),b
   761  001432  0E00               	movlw	0
   762  001434  6F83               	movwf	(sem_init@val+1)& (0+255),b
   763  001436  0E00               	movlw	0
   764  001438  6F82               	movwf	sem_init@val& (0+255),b
   765  00143A  ECAF  F009         	call	_sem_init	;# 
   766  00143E  0012               	return		;funcret
   767  001440                     __end_of_config_user_tasks:
   768                           	callstack 0
   769                           
   770 ;; *************** function _pipe_init *****************
   771 ;; Defined at:
   772 ;;		line 4 in file "pipe.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  pipe            2    4[BANK0 ] PTR struct pipe
   775 ;;		 -> pipe_temperature(26), 
   776 ;;  tamanho         2    6[BANK0 ] int 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   788 ;;      Params:         0       4       0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0
   791 ;;      Totals:         0       4       0       0       0       0       0
   792 ;;Total ram usage:        4 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:   13
   795 ;; This function calls:
   796 ;;		_sem_init
   797 ;; This function is called by:
   798 ;;		_config_user_tasks
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text7
   803  001306                     __ptext7:
   804                           	callstack 0
   805  001306                     _pipe_init:
   806                           	callstack 15
   807  001306                     
   808                           ;pipe.c: 7:     pipe->size = pipe->read_pos = pipe->write_pos = 0;
   809  001306  0100               	movlb	0	; () banked
   810  001308  EE20 F006          	lfsr	2,6
   811  00130C  5184               	movf	pipe_init@pipe& (0+255),w,b
   812  00130E  26D9               	addwf	fsr2l,f,c
   813  001310  5185               	movf	(pipe_init@pipe+1)& (0+255),w,b
   814  001312  22DA               	addwfc	fsr2h,f,c
   815  001314  0E00               	movlw	0
   816  001316  6EDE               	movwf	postinc2,c
   817  001318  0E00               	movlw	0
   818  00131A  6EDD               	movwf	postdec2,c
   819  00131C  EE00 F004          	lfsr	0,4
   820  001320  5184               	movf	pipe_init@pipe& (0+255),w,b
   821  001322  26E9               	addwf	fsr0l,f,c
   822  001324  5185               	movf	(pipe_init@pipe+1)& (0+255),w,b
   823  001326  22EA               	addwfc	fsr0h,f,c
   824  001328  CFDE FFEE          	movff	postinc2,postinc0
   825  00132C  CFDD FFED          	movff	postdec2,postdec0
   826  001330  EE20 F002          	lfsr	2,2
   827  001334  5184               	movf	pipe_init@pipe& (0+255),w,b
   828  001336  26D9               	addwf	fsr2l,f,c
   829  001338  5185               	movf	(pipe_init@pipe+1)& (0+255),w,b
   830  00133A  22DA               	addwfc	fsr2h,f,c
   831  00133C  CFEE FFDE          	movff	postinc0,postinc2
   832  001340  CFED FFDD          	movff	postdec0,postdec2
   833  001344                     
   834                           ; BSR set to: 0
   835                           ;pipe.c: 8:     sem_init(&pipe->sem, 1);
   836  001344  0E08               	movlw	8
   837  001346  2584               	addwf	pipe_init@pipe& (0+255),w,b
   838  001348  6F80               	movwf	sem_init@s& (0+255),b
   839  00134A  0E00               	movlw	0
   840  00134C  2185               	addwfc	(pipe_init@pipe+1)& (0+255),w,b
   841  00134E  6F81               	movwf	(sem_init@s+1)& (0+255),b
   842  001350  0E00               	movlw	0
   843  001352  6F83               	movwf	(sem_init@val+1)& (0+255),b
   844  001354  0E01               	movlw	1
   845  001356  6F82               	movwf	sem_init@val& (0+255),b
   846  001358  ECAF  F009         	call	_sem_init	;wreg free
   847  00135C  0012               	return		;funcret
   848  00135E                     __end_of_pipe_init:
   849                           	callstack 0
   850                           
   851 ;; *************** function _sem_init *****************
   852 ;; Defined at:
   853 ;;		line 2 in file "semaphore.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  s               2    0[BANK0 ] PTR struct semaphore
   856 ;;		 -> sem_temp_r(18), sem_temp_w(18), pipe_temperature(26), 
   857 ;;  val             2    2[BANK0 ] int 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   869 ;;      Params:         0       4       0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0
   872 ;;      Totals:         0       4       0       0       0       0       0
   873 ;;Total ram usage:        4 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:   12
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_config_user_tasks
   880 ;;		_pipe_init
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text8
   885  00135E                     __ptext8:
   886                           	callstack 0
   887  00135E                     _sem_init:
   888                           	callstack 16
   889  00135E                     
   890                           ;semaphore.c: 3:     (INTCONbits.GIE = 0);
   891  00135E  9EF2               	bcf	242,7,c	;volatile
   892  001360                     
   893                           ;semaphore.c: 4:     s->s_count = val;
   894  001360  C080  FFD9         	movff	sem_init@s,fsr2l
   895  001364  C081  FFDA         	movff	sem_init@s+1,fsr2h
   896  001368  C082  FFDE         	movff	sem_init@val,postinc2
   897  00136C  C083  FFDD         	movff	sem_init@val+1,postdec2
   898  001370                     
   899                           ;semaphore.c: 5:     s->s_queue.queue_size = s->s_queue.queue_wait_pos = s->s_queue.queu
      +                          e_post_pos = 0;
   900  001370  0100               	movlb	0	; () banked
   901  001372  EE20 F010          	lfsr	2,16
   902  001376  5180               	movf	sem_init@s& (0+255),w,b
   903  001378  26D9               	addwf	fsr2l,f,c
   904  00137A  5181               	movf	(sem_init@s+1)& (0+255),w,b
   905  00137C  22DA               	addwfc	fsr2h,f,c
   906  00137E  0E00               	movlw	0
   907  001380  6EDE               	movwf	postinc2,c
   908  001382  0E00               	movlw	0
   909  001384  6EDD               	movwf	postdec2,c
   910  001386  EE00 F00E          	lfsr	0,14
   911  00138A  5180               	movf	sem_init@s& (0+255),w,b
   912  00138C  26E9               	addwf	fsr0l,f,c
   913  00138E  5181               	movf	(sem_init@s+1)& (0+255),w,b
   914  001390  22EA               	addwfc	fsr0h,f,c
   915  001392  CFDE FFEE          	movff	postinc2,postinc0
   916  001396  CFDD FFED          	movff	postdec2,postdec0
   917  00139A  EE20 F00C          	lfsr	2,12
   918  00139E  5180               	movf	sem_init@s& (0+255),w,b
   919  0013A0  26D9               	addwf	fsr2l,f,c
   920  0013A2  5181               	movf	(sem_init@s+1)& (0+255),w,b
   921  0013A4  22DA               	addwfc	fsr2h,f,c
   922  0013A6  CFEE FFDE          	movff	postinc0,postinc2
   923  0013AA  CFED FFDD          	movff	postdec0,postdec2
   924  0013AE                     
   925                           ; BSR set to: 0
   926                           ;semaphore.c: 7:     (INTCONbits.GIE = 1);
   927  0013AE  8EF2               	bsf	242,7,c	;volatile
   928  0013B0                     
   929                           ; BSR set to: 0
   930  0013B0  0012               	return		;funcret
   931  0013B2                     __end_of_sem_init:
   932                           	callstack 0
   933                           
   934 ;; *************** function _OS_create_task *****************
   935 ;; Defined at:
   936 ;;		line 60 in file "kernel.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  prior           2    0[BANK0 ] unsigned int 
   939 ;;  func            2    2[BANK0 ] PTR FTN()void 
   940 ;;		 -> idle(1), ac_controller_2(1), thermostat_sensing_2(1), ac_controller_1(1), 
   941 ;;		 -> thermostat_sensing_1(1), 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  new_task      113    6[BANK0 ] struct tcb
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   953 ;;      Params:         0       4       0       0       0       0       0
   954 ;;      Locals:         0     113       0       0       0       0       0
   955 ;;      Temps:          0       2       0       0       0       0       0
   956 ;;      Totals:         0     119       0       0       0       0       0
   957 ;;Total ram usage:      119 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:   13
   960 ;; This function calls:
   961 ;;		___wmul
   962 ;; This function is called by:
   963 ;;		_main
   964 ;;		_OS_config
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text9
   969  00123C                     __ptext9:
   970                           	callstack 0
   971  00123C                     _OS_create_task:
   972                           	callstack 17
   973  00123C                     
   974                           ;kernel.c: 62:     tcb_t new_task;;kernel.c: 64:     new_task.task_prior = prior;
   975  00123C  C080  F088         	movff	OS_create_task@prior,OS_create_task@new_task+2
   976  001240  C081  F089         	movff	OS_create_task@prior+1,OS_create_task@new_task+3
   977  001244                     
   978                           ;kernel.c: 65:     new_task.task_func = func;
   979  001244  C082  F0F3         	movff	OS_create_task@func,OS_create_task@new_task+109
   980  001248  C083  F0F4         	movff	OS_create_task@func+1,OS_create_task@new_task+110
   981  00124C                     
   982                           ;kernel.c: 66:     new_task.task_state = READY;
   983  00124C  0E00               	movlw	0
   984  00124E  0100               	movlb	0	; () banked
   985  001250  6F8A               	movwf	(OS_create_task@new_task+4)& (0+255),b
   986  001252                     
   987                           ; BSR set to: 0
   988                           ;kernel.c: 67:     new_task.task_context.stack_size = 0;
   989  001252  0E00               	movlw	0
   990  001254  6FF2               	movwf	(OS_create_task@new_task+108)& (0+255),b
   991  001256  0E00               	movlw	0
   992  001258  6FF1               	movwf	(OS_create_task@new_task+107)& (0+255),b
   993  00125A                     
   994                           ; BSR set to: 0
   995                           ;kernel.c: 68:     new_task.task_delay_time = 0;
   996  00125A  0E00               	movlw	0
   997  00125C  6FF6               	movwf	(OS_create_task@new_task+112)& (0+255),b
   998  00125E  0E00               	movlw	0
   999  001260  6FF5               	movwf	(OS_create_task@new_task+111)& (0+255),b
  1000  001262                     
  1001                           ; BSR set to: 0
  1002                           ;kernel.c: 72:     READY_QUEUE.QUEUE[READY_QUEUE.nr_of_tasks] = new_task;
  1003  001262  0E71               	movlw	113
  1004  001264  6EE6               	movwf	postinc1,c
  1005  001266  0E00               	movlw	0
  1006  001268  6EE6               	movwf	postinc1,c
  1007  00126A  EE23  F0C2         	lfsr	2,_READY_QUEUE+680
  1008  00126E  CFDE F084          	movff	postinc2,??_OS_create_task
  1009  001272  CFDD F085          	movff	postdec2,??_OS_create_task+1
  1010  001276  C084  FFE6         	movff	??_OS_create_task,postinc1
  1011  00127A  C085  FFE6         	movff	??_OS_create_task+1,postinc1
  1012  00127E  EC48  F008         	call	___wmul	;wreg free
  1013  001282  0E1A               	movlw	low _READY_QUEUE
  1014  001284  242D               	addwf	btemp^0,w,c
  1015  001286  6EE9               	movwf	fsr0l,c
  1016  001288  0E01               	movlw	high _READY_QUEUE
  1017  00128A  202E               	addwfc	(btemp+1)^0,w,c
  1018  00128C  6EEA               	movwf	fsr0h,c
  1019  00128E  EE20  F086         	lfsr	2,OS_create_task@new_task
  1020  001292  0E70               	movlw	112
  1021  001294                     u1081:
  1022  001294  CFDB FFEB          	movff	plusw2,plusw0
  1023  001298  06E8               	decf	wreg,f,c
  1024  00129A  E2FC               	bc	u1081
  1025  00129C                     
  1026                           ;kernel.c: 73:     READY_QUEUE.nr_of_tasks++;
  1027  00129C  EE23  F0C2         	lfsr	2,_READY_QUEUE+680
  1028  0012A0  2ADE               	incf	postinc2,f,c
  1029  0012A2  0E00               	movlw	0
  1030  0012A4  22DD               	addwfc	postdec2,f,c
  1031  0012A6  0012               	return		;funcret
  1032  0012A8                     __end_of_OS_create_task:
  1033                           	callstack 0
  1034                           
  1035 ;; *************** function ___wmul *****************
  1036 ;; Defined at:
  1037 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  multiplier      2  [STACK] unsigned int 
  1040 ;;  multiplicand    2  [STACK] unsigned int 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  product         2  [STACK] unsigned int 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2  [STACK] unsigned int 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1052 ;;      Params:         0       0       0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:   12
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_OS_create_task
  1063 ;;		_delay_release
  1064 ;;		_ISR_timer
  1065 ;;		_PRIORITY_sched
  1066 ;;		_sort_ready_queue
  1067 ;;		_OS_delay
  1068 ;;		_get_task_id
  1069 ;; This function uses a reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text10
  1073  001090                     __ptext10:
  1074                           	callstack 0
  1075  001090                     ___wmul:
  1076                           	callstack 0
  1077                           
  1078                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1079  001090  52E6               	movf	postinc1,f,c
  1080  001092  52E6               	movf	postinc1,f,c
  1081  001094                     
  1082                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1083  001094  0EFA               	movlw	-6
  1084  001096  CFE3 F038          	movff	plusw1,btemp+11
  1085                           
  1086                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1087  00109A  0EFC               	movlw	-4
  1088  00109C  50E3               	movf	plusw1,w,c
  1089  00109E  0238               	mulwf	(btemp+11)^0,c
  1090                           
  1091                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1092  0010A0  0EFE               	movlw	-2
  1093  0010A2  CFF3 FFE3          	movff	prodl,plusw1
  1094  0010A6  0EFF               	movlw	-1
  1095  0010A8  CFF4 FFE3          	movff	prodh,plusw1
  1096  0010AC                     
  1097                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1098  0010AC  0EFB               	movlw	251
  1099  0010AE  24E1               	addwf	fsr1l,w,c
  1100  0010B0  6ED9               	movwf	fsr2l,c
  1101  0010B2  0EFF               	movlw	255
  1102  0010B4  20E2               	addwfc	fsr1h,w,c
  1103  0010B6  6EDA               	movwf	fsr2h,c
  1104  0010B8  50DF               	movf	indf2,w,c
  1105  0010BA  6E38               	movwf	(btemp+11)^0,c
  1106                           
  1107                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1108  0010BC  0EFC               	movlw	-4
  1109  0010BE  50E3               	movf	plusw1,w,c
  1110  0010C0  0238               	mulwf	(btemp+11)^0,c
  1111  0010C2  CFF3 FFF4          	movff	prodl,prodh
  1112  0010C6  6AF3               	clrf	243,c
  1113                           
  1114                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1115  0010C8  50E1               	movf	fsr1l,w,c
  1116  0010CA  0FFE               	addlw	-2
  1117  0010CC  6ED9               	movwf	fsr2l,c
  1118  0010CE  50E2               	movf	fsr1h,w,c
  1119  0010D0  6EDA               	movwf	fsr2h,c
  1120  0010D2  0EFF               	movlw	255
  1121  0010D4  22DA               	addwfc	fsr2h,f,c
  1122  0010D6  50F3               	movf	243,w,c
  1123  0010D8  26DE               	addwf	postinc2,f,c
  1124  0010DA  50F4               	movf	244,w,c
  1125  0010DC  22DD               	addwfc	postdec2,f,c
  1126  0010DE                     
  1127                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1128  0010DE  0EFA               	movlw	-6
  1129  0010E0  CFE3 F038          	movff	plusw1,btemp+11
  1130                           
  1131                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1132  0010E4  0EFD               	movlw	253
  1133  0010E6  24E1               	addwf	fsr1l,w,c
  1134  0010E8  6ED9               	movwf	fsr2l,c
  1135  0010EA  0EFF               	movlw	255
  1136  0010EC  20E2               	addwfc	fsr1h,w,c
  1137  0010EE  6EDA               	movwf	fsr2h,c
  1138  0010F0  50DF               	movf	indf2,w,c
  1139  0010F2  0238               	mulwf	(btemp+11)^0,c
  1140  0010F4  CFF3 FFF4          	movff	prodl,prodh
  1141  0010F8  6AF3               	clrf	243,c
  1142                           
  1143                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1144  0010FA  50E1               	movf	fsr1l,w,c
  1145  0010FC  0FFE               	addlw	-2
  1146  0010FE  6ED9               	movwf	fsr2l,c
  1147  001100  50E2               	movf	fsr1h,w,c
  1148  001102  6EDA               	movwf	fsr2h,c
  1149  001104  0EFF               	movlw	255
  1150  001106  22DA               	addwfc	fsr2h,f,c
  1151  001108  50F3               	movf	243,w,c
  1152  00110A  26DE               	addwf	postinc2,f,c
  1153  00110C  50F4               	movf	244,w,c
  1154  00110E  22DD               	addwfc	postdec2,f,c
  1155  001110                     
  1156                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1157  001110  0EFE               	movlw	-2
  1158  001112  CFE3 F02D          	movff	plusw1,btemp
  1159  001116  0EFF               	movlw	-1
  1160  001118  CFE3 F02E          	movff	plusw1,btemp+1
  1161  00111C                     
  1162                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  1163  00111C  0EFA               	movlw	250
  1164  00111E  26E1               	addwf	fsr1l,f,c
  1165  001120  0EFF               	movlw	255
  1166  001122  22E2               	addwfc	fsr1h,f,c
  1167  001124  0012               	return		;funcret
  1168  001126                     __end_of___wmul:
  1169                           	callstack 0
  1170                           
  1171 ;; *************** function _idle *****************
  1172 ;; Defined at:
  1173 ;;		line 11 in file "kernel.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1  [STACK] void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, btemp+11
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1187 ;;      Params:         0       0       0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0
  1190 ;;      Totals:         0       0       0       0       0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    5
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_ROUND_ROBIN_sched
  1198 ;;		_OS_config
  1199 ;; This function uses a reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text11
  1203  0014E4                     __ptext11:
  1204                           	callstack 0
  1205  0014E4                     _idle:
  1206                           	callstack 21
  1207  0014E4                     
  1208                           ;kernel.c: 12:     TRISDbits.RD3 = 0;
  1209  0014E4  9695               	bcf	149,3,c	;volatile
  1210  0014E6                     l1436:
  1211                           
  1212                           ;kernel.c: 14:         LATDbits.LATD3 = ~PORTDbits.RD3;
  1213  0014E6  B683               	btfsc	131,3,c	;volatile
  1214  0014E8  EF78  F00A         	goto	u45_21
  1215  0014EC  EF7B  F00A         	goto	u45_20
  1216  0014F0                     u45_21:
  1217  0014F0  0E01               	movlw	1
  1218  0014F2  EF7C  F00A         	goto	u45_26
  1219  0014F6                     u45_20:
  1220  0014F6  0E00               	movlw	0
  1221  0014F8                     u45_26:
  1222  0014F8  0AFF               	xorlw	255
  1223  0014FA  6E38               	movwf	(btemp+11)^0,c
  1224  0014FC  4638               	rlncf	(btemp+11)^0,f,c
  1225  0014FE  4638               	rlncf	(btemp+11)^0,f,c
  1226  001500  4638               	rlncf	(btemp+11)^0,f,c
  1227  001502  508C               	movf	140,w,c	;volatile
  1228  001504  1838               	xorwf	(btemp+11)^0,w,c
  1229  001506  0BF7               	andlw	-9
  1230  001508  1838               	xorwf	(btemp+11)^0,w,c
  1231  00150A  6E8C               	movwf	140,c	;volatile
  1232  00150C                     
  1233                           ;kernel.c: 15:         __nop();
  1234  00150C  F000               	nop	
  1235  00150E  EF73  F00A         	goto	l1436
  1236                           
  1237                           ; _idle: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize 
      +                          = 0, vargsize = 0
  1238  001512  0012               	return		;funcret
  1239  001514                     __end_of_idle:
  1240                           	callstack 0
  1241                           
  1242 ;; *************** function _thermostat_sensing_1 *****************
  1243 ;; Defined at:
  1244 ;;		line 23 in file "user_tasks.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  readed_tempe    2  [STACK] int 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1  [STACK] void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1258 ;;      Params:         0       0       0       0       0       0       0
  1259 ;;      Locals:         0       0       0       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0
  1261 ;;      Totals:         0       0       0       0       0       0       0
  1262 ;;Total ram usage:        0 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:   11
  1265 ;; This function calls:
  1266 ;;		_pipe_write
  1267 ;;		_thermostat_value
  1268 ;; This function is called by:
  1269 ;;		_main
  1270 ;; This function uses a reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text12
  1274  0014B0                     __ptext12:
  1275                           	callstack 0
  1276  0014B0                     _thermostat_sensing_1:
  1277                           	callstack 0
  1278                           
  1279                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1280  0014B0  52E6               	movf	postinc1,f,c
  1281  0014B2  52E6               	movf	postinc1,f,c
  1282  0014B4                     l222:
  1283  0014B4                     
  1284                           ;user_tasks.c: 26:        readed_temperature = thermostat_value();
  1285  0014B4  EC93  F008         	call	_thermostat_value	;wreg free
  1286                           
  1287                           ;stkvar	thermostat_sensing_1@readed_temperature @ sp[(-2)+0]
  1288  0014B8  0EFE               	movlw	-2
  1289  0014BA  C02D  FFE3         	movff	btemp,plusw1
  1290  0014BE  0EFF               	movlw	-1
  1291  0014C0  C02E  FFE3         	movff	btemp+1,plusw1
  1292  0014C4                     
  1293                           ;user_tasks.c: 27:        pipe_write(&pipe_temperature, readed_temperature);
  1294                           ;stkvar	thermostat_sensing_1@readed_temperature @ sp[(-2)+0]
  1295  0014C4  0EFE               	movlw	-2
  1296  0014C6  CFE3 FFE6          	movff	plusw1,postinc1
  1297  0014CA  CFE3 FFE6          	movff	plusw1,postinc1
  1298  0014CE  0E00               	movlw	low _pipe_temperature
  1299  0014D0  6EE6               	movwf	postinc1,c
  1300  0014D2  0E01               	movlw	high _pipe_temperature
  1301  0014D4  6EE6               	movwf	postinc1,c
  1302  0014D6  ECC7  F004         	call	_pipe_write	;wreg free
  1303  0014DA  EF5A  F00A         	goto	l222
  1304                           
  1305                           ; _thermostat_sensing_1: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  1306  0014DE  52E5               	movf	postdec1,f,c
  1307  0014E0  52E5               	movf	postdec1,f,c
  1308  0014E2  0012               	return		;funcret
  1309  0014E4                     __end_of_thermostat_sensing_1:
  1310                           	callstack 0
  1311                           
  1312 ;; *************** function _thermostat_value *****************
  1313 ;; Defined at:
  1314 ;;		line 3 in file "thermostat.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  temperatura_    2  [STACK] int 
  1319 ;;  resultadoAD     2  [STACK] int 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  2  [STACK] int 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1329 ;;      Params:         0       0       0       0       0       0       0
  1330 ;;      Locals:         0       0       0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0
  1332 ;;      Totals:         0       0       0       0       0       0       0
  1333 ;;Total ram usage:        0 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    6
  1336 ;; This function calls:
  1337 ;;		___awdiv
  1338 ;; This function is called by:
  1339 ;;		_thermostat_sensing_1
  1340 ;;		_thermostat_sensing_2
  1341 ;; This function uses a reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text13
  1345  001126                     __ptext13:
  1346                           	callstack 0
  1347  001126                     _thermostat_value:
  1348                           	callstack 0
  1349                           
  1350                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1351  001126  52E6               	movf	postinc1,f,c
  1352  001128  52E6               	movf	postinc1,f,c
  1353  00112A  52E6               	movf	postinc1,f,c
  1354  00112C  52E6               	movf	postinc1,f,c
  1355  00112E                     
  1356                           ;thermostat.c: 4:     (INTCONbits.GIE = 0);
  1357  00112E  9EF2               	bcf	242,7,c	;volatile
  1358                           
  1359                           ;thermostat.c: 6:     ADCON0bits.ADON = 1;
  1360  001130  80C2               	bsf	194,0,c	;volatile
  1361  001132                     
  1362                           ;thermostat.c: 7:     ADCON0bits.CHS = 0b0000;
  1363  001132  0EC3               	movlw	-61
  1364  001134  16C2               	andwf	194,f,c	;volatile
  1365  001136                     
  1366                           ;thermostat.c: 10:     ADCON1bits.VCFG1 = 0;
  1367  001136  9AC1               	bcf	193,5,c	;volatile
  1368  001138                     
  1369                           ;thermostat.c: 11:     ADCON1bits.VCFG0 = 0;
  1370  001138  98C1               	bcf	193,4,c	;volatile
  1371                           
  1372                           ;thermostat.c: 14:     ADCON1bits.PCFG = 0b1110;
  1373  00113A  50C1               	movf	193,w,c	;volatile
  1374  00113C  0BF0               	andlw	-16
  1375  00113E  090E               	iorlw	14
  1376  001140  6EC1               	movwf	193,c	;volatile
  1377  001142                     
  1378                           ;thermostat.c: 17:     ADCON2bits.ADFM = 1;
  1379  001142  8EC0               	bsf	192,7,c	;volatile
  1380  001144                     
  1381                           ;thermostat.c: 20:     ADCON0bits.GODONE = 1;
  1382  001144  82C2               	bsf	194,1,c	;volatile
  1383  001146                     l353:
  1384  001146  B2C2               	btfsc	194,1,c	;volatile
  1385  001148  EFA8  F008         	goto	u75_21
  1386  00114C  EFAA  F008         	goto	u75_20
  1387  001150                     u75_21:
  1388  001150  EFA3  F008         	goto	l353
  1389  001154                     u75_20:
  1390  001154                     
  1391                           ;thermostat.c: 26:     int resultadoAD = ADRES;
  1392                           ;stkvar	thermostat_value@resultadoAD @ sp[(-4)+2]
  1393  001154  0EFE               	movlw	-2
  1394  001156  CFC3 FFE3          	movff	4035,plusw1	;volatile
  1395  00115A  0EFF               	movlw	-1
  1396  00115C  CFC4 FFE3          	movff	4036,plusw1	;volatile
  1397  001160                     
  1398                           ;thermostat.c: 28:     (INTCONbits.GIE = 1);
  1399  001160  8EF2               	bsf	242,7,c	;volatile
  1400  001162                     
  1401                           ;thermostat.c: 30:     int temperatura_ambiente = (150*resultadoAD)/307;
  1402  001162  0E33               	movlw	51
  1403  001164  6EE6               	movwf	postinc1,c
  1404  001166  0E01               	movlw	1
  1405  001168  6EE6               	movwf	postinc1,c
  1406                           
  1407                           ;stkvar	thermostat_value@resultadoAD @ sp[(-6)+2]
  1408  00116A  0EFC               	movlw	-4
  1409  00116C  CFE3 F037          	movff	plusw1,btemp+10
  1410  001170  0EFD               	movlw	-3
  1411  001172  CFE3 F038          	movff	plusw1,btemp+11
  1412  001176  0E96               	movlw	150
  1413  001178  0237               	mulwf	(btemp+10)^0,c
  1414  00117A  CFF3 F035          	movff	prodl,btemp+8
  1415  00117E  CFF4 F036          	movff	prodh,btemp+9
  1416  001182  0238               	mulwf	(btemp+11)^0,c
  1417  001184  50F3               	movf	prodl,w,c
  1418  001186  2636               	addwf	(btemp+9)^0,f,c
  1419  001188  C035  FFE6         	movff	btemp+8,postinc1
  1420  00118C  C036  FFE6         	movff	btemp+9,postinc1
  1421  001190  EC09  F004         	call	___awdiv	;wreg free
  1422                           
  1423                           ;stkvar	thermostat_value@temperatura_ambiente @ sp[(-4)+0]
  1424  001194  0EFC               	movlw	-4
  1425  001196  C02D  FFE3         	movff	btemp,plusw1
  1426  00119A  0EFD               	movlw	-3
  1427  00119C  C02E  FFE3         	movff	btemp+1,plusw1
  1428  0011A0                     
  1429                           ;thermostat.c: 32:     return temperatura_ambiente;
  1430                           ;stkvar	thermostat_value@temperatura_ambiente @ sp[(-4)+0]
  1431  0011A0  0EFC               	movlw	-4
  1432  0011A2  CFE3 F02D          	movff	plusw1,btemp
  1433  0011A6  0EFD               	movlw	-3
  1434  0011A8  CFE3 F02E          	movff	plusw1,btemp+1
  1435  0011AC                     
  1436                           ; _thermostat_value: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  1437  0011AC  52E5               	movf	postdec1,f,c
  1438  0011AE  52E5               	movf	postdec1,f,c
  1439  0011B0  52E5               	movf	postdec1,f,c
  1440  0011B2  52E5               	movf	postdec1,f,c
  1441  0011B4  0012               	return		;funcret
  1442  0011B6                     __end_of_thermostat_value:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function ___awdiv *****************
  1446 ;; Defined at:
  1447 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  dividend        2  [STACK] int 
  1450 ;;  divisor         2  [STACK] int 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  quotient        2  [STACK] int 
  1453 ;;  sign            1  [STACK] unsigned char 
  1454 ;;  counter         1  [STACK] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  2  [STACK] int 
  1457 ;; Registers used:
  1458 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1464 ;;      Params:         0       0       0       0       0       0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0
  1467 ;;      Totals:         0       0       0       0       0       0       0
  1468 ;;Total ram usage:        0 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    5
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_thermostat_value
  1475 ;; This function uses a reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text14
  1479  000812                     __ptext14:
  1480                           	callstack 0
  1481  000812                     ___awdiv:
  1482                           	callstack 0
  1483                           
  1484                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1485  000812  52E6               	movf	postinc1,f,c
  1486  000814  52E6               	movf	postinc1,f,c
  1487  000816  52E6               	movf	postinc1,f,c
  1488  000818  52E6               	movf	postinc1,f,c
  1489  00081A                     
  1490                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1491  00081A  0EFE               	movlw	-2
  1492  00081C  6AE3               	clrf	plusw1,c
  1493  00081E                     
  1494                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1495  00081E  0EF9               	movlw	-7
  1496  000820  BEE3               	btfsc	plusw1,7,c
  1497  000822  EF17  F004         	goto	u63_20
  1498  000826  EF15  F004         	goto	u63_21
  1499  00082A                     u63_21:
  1500  00082A  EF20  F004         	goto	l1706
  1501  00082E                     u63_20:
  1502  00082E                     
  1503                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1504                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1505  00082E  0EF8               	movlw	-8
  1506  000830  6CE3               	negf	plusw1,c
  1507  000832  0EF9               	movlw	-7
  1508  000834  1EE3               	comf	plusw1,f,c
  1509  000836  B0D8               	btfsc	status,0,c
  1510  000838  2AE3               	incf	plusw1,f,c
  1511  00083A                     
  1512                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1513  00083A  0EFE               	movlw	-2
  1514  00083C  6AE3               	clrf	plusw1,c
  1515  00083E  2AE3               	incf	plusw1,f,c
  1516  000840                     l1706:
  1517                           
  1518                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1519  000840  0EFB               	movlw	-5
  1520  000842  BEE3               	btfsc	plusw1,7,c
  1521  000844  EF28  F004         	goto	u64_20
  1522  000848  EF26  F004         	goto	u64_21
  1523  00084C                     u64_21:
  1524  00084C  EF30  F004         	goto	l1712
  1525  000850                     u64_20:
  1526  000850                     
  1527                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1528                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1529  000850  0EFA               	movlw	-6
  1530  000852  6CE3               	negf	plusw1,c
  1531  000854  0EFB               	movlw	-5
  1532  000856  1EE3               	comf	plusw1,f,c
  1533  000858  B0D8               	btfsc	status,0,c
  1534  00085A  2AE3               	incf	plusw1,f,c
  1535  00085C                     
  1536                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1537  00085C  0EFE               	movlw	-2
  1538  00085E  70E3               	btg	plusw1,0,c
  1539  000860                     l1712:
  1540                           
  1541                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1542  000860  0EFC               	movlw	-4
  1543  000862  6AE3               	clrf	plusw1,c
  1544  000864  0EFD               	movlw	-3
  1545  000866  6AE3               	clrf	plusw1,c
  1546  000868                     
  1547                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1548  000868  0EF8               	movlw	-8
  1549  00086A  CFE3 F02D          	movff	plusw1,btemp
  1550  00086E  0EF9               	movlw	-7
  1551  000870  50E3               	movf	plusw1,w,c
  1552  000872  102D               	iorwf	btemp^0,w,c
  1553  000874  B4D8               	btfsc	status,2,c
  1554  000876  EF3F  F004         	goto	u65_21
  1555  00087A  EF41  F004         	goto	u65_20
  1556  00087E                     u65_21:
  1557  00087E  EFAD  F004         	goto	l1736
  1558  000882                     u65_20:
  1559  000882                     
  1560                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  1561  000882  0EFF               	movlw	-1
  1562  000884  6AE3               	clrf	plusw1,c
  1563  000886  2AE3               	incf	plusw1,f,c
  1564  000888  EF57  F004         	goto	l1722
  1565  00088C                     l1718:
  1566                           
  1567                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1568  00088C  0EF8               	movlw	-8
  1569  00088E  50E3               	movf	plusw1,w,c
  1570  000890  90D8               	bcf	status,0,c
  1571  000892  34E8               	rlcf	wreg,w,c
  1572  000894  6E2D               	movwf	btemp^0,c
  1573  000896  0EF8               	movlw	-8
  1574  000898  C02D  FFE3         	movff	btemp,plusw1
  1575  00089C  0EF9               	movlw	-7
  1576  00089E  50E3               	movf	plusw1,w,c
  1577  0008A0  34E8               	rlcf	wreg,w,c
  1578  0008A2  6E2D               	movwf	btemp^0,c
  1579  0008A4  0EF9               	movlw	-7
  1580  0008A6  C02D  FFE3         	movff	btemp,plusw1
  1581  0008AA                     
  1582                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  1583  0008AA  0EFF               	movlw	-1
  1584  0008AC  2AE3               	incf	plusw1,f,c
  1585  0008AE                     l1722:
  1586                           
  1587                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1588  0008AE  0EF9               	movlw	-7
  1589  0008B0  AEE3               	btfss	plusw1,7,c
  1590  0008B2  EF5D  F004         	goto	u66_21
  1591  0008B6  EF5F  F004         	goto	u66_20
  1592  0008BA                     u66_21:
  1593  0008BA  EF46  F004         	goto	l1718
  1594  0008BE                     u66_20:
  1595  0008BE                     l1724:
  1596                           
  1597                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1598  0008BE  0EFC               	movlw	-4
  1599  0008C0  50E3               	movf	plusw1,w,c
  1600  0008C2  90D8               	bcf	status,0,c
  1601  0008C4  34E8               	rlcf	wreg,w,c
  1602  0008C6  6E2D               	movwf	btemp^0,c
  1603  0008C8  0EFC               	movlw	-4
  1604  0008CA  C02D  FFE3         	movff	btemp,plusw1
  1605  0008CE  0EFD               	movlw	-3
  1606  0008D0  50E3               	movf	plusw1,w,c
  1607  0008D2  34E8               	rlcf	wreg,w,c
  1608  0008D4  6E2D               	movwf	btemp^0,c
  1609  0008D6  0EFD               	movlw	-3
  1610  0008D8  C02D  FFE3         	movff	btemp,plusw1
  1611  0008DC                     
  1612                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1613  0008DC  0EF8               	movlw	-8
  1614  0008DE  CFE3 F037          	movff	plusw1,btemp+10
  1615  0008E2  0EF9               	movlw	-7
  1616  0008E4  CFE3 F038          	movff	plusw1,btemp+11
  1617                           
  1618                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1619  0008E8  0EFA               	movlw	-6
  1620  0008EA  CFE3 F035          	movff	plusw1,btemp+8
  1621  0008EE  0EFB               	movlw	-5
  1622  0008F0  CFE3 F036          	movff	plusw1,btemp+9
  1623  0008F4  5037               	movf	(btemp+10)^0,w,c
  1624  0008F6  5C35               	subwf	(btemp+8)^0,w,c
  1625  0008F8  5038               	movf	(btemp+11)^0,w,c
  1626  0008FA  5836               	subwfb	(btemp+9)^0,w,c
  1627  0008FC  A0D8               	btfss	status,0,c
  1628  0008FE  EF83  F004         	goto	u67_21
  1629  000902  EF85  F004         	goto	u67_20
  1630  000906                     u67_21:
  1631  000906  EF99  F004         	goto	l1732
  1632  00090A                     u67_20:
  1633  00090A                     
  1634                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1635                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  1636  00090A  0EFA               	movlw	-6
  1637  00090C  50E3               	movf	plusw1,w,c
  1638  00090E  6E2D               	movwf	btemp^0,c
  1639  000910  0EF8               	movlw	-8
  1640  000912  50E3               	movf	plusw1,w,c
  1641  000914  5E2D               	subwf	btemp^0,f,c
  1642  000916  0EFA               	movlw	-6
  1643  000918  C02D  FFE3         	movff	btemp,plusw1
  1644  00091C  0EFB               	movlw	-5
  1645  00091E  50E3               	movf	plusw1,w,c
  1646  000920  6E2D               	movwf	btemp^0,c
  1647  000922  0EF9               	movlw	-7
  1648  000924  50E3               	movf	plusw1,w,c
  1649  000926  5A2D               	subwfb	btemp^0,f,c
  1650  000928  0EFB               	movlw	-5
  1651  00092A  C02D  FFE3         	movff	btemp,plusw1
  1652  00092E                     
  1653                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1654  00092E  0EFC               	movlw	-4
  1655  000930  80E3               	bsf	plusw1,0,c
  1656  000932                     l1732:
  1657                           
  1658                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  1659  000932  90D8               	bcf	status,0,c
  1660  000934  0EF9               	movlw	-7
  1661  000936  32E3               	rrcf	plusw1,f,c
  1662  000938  0EF8               	movlw	-8
  1663  00093A  32E3               	rrcf	plusw1,f,c
  1664  00093C                     
  1665                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  1666  00093C  0EFF               	movlw	-1
  1667  00093E  50E3               	movf	plusw1,w,c
  1668  000940  6E2D               	movwf	btemp^0,c
  1669  000942  0E01               	movlw	1
  1670  000944  5E2D               	subwf	btemp^0,f,c
  1671  000946  0EFF               	movlw	-1
  1672  000948  C02D  FFE3         	movff	btemp,plusw1
  1673  00094C  A4D8               	btfss	status,2,c
  1674  00094E  EFAB  F004         	goto	u68_21
  1675  000952  EFAD  F004         	goto	u68_20
  1676  000956                     u68_21:
  1677  000956  EF5F  F004         	goto	l1724
  1678  00095A                     u68_20:
  1679  00095A                     l1736:
  1680                           
  1681                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  1682  00095A  0EFE               	movlw	-2
  1683  00095C  50E3               	movf	plusw1,w,c
  1684  00095E  B4D8               	btfsc	status,2,c
  1685  000960  EFB4  F004         	goto	u69_21
  1686  000964  EFB6  F004         	goto	u69_20
  1687  000968                     u69_21:
  1688  000968  EFBC  F004         	goto	l1740
  1689  00096C                     u69_20:
  1690  00096C                     
  1691                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1692                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1693  00096C  0EFC               	movlw	-4
  1694  00096E  6CE3               	negf	plusw1,c
  1695  000970  0EFD               	movlw	-3
  1696  000972  1EE3               	comf	plusw1,f,c
  1697  000974  B0D8               	btfsc	status,0,c
  1698  000976  2AE3               	incf	plusw1,f,c
  1699  000978                     l1740:
  1700                           
  1701                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  1702  000978  0EFC               	movlw	-4
  1703  00097A  CFE3 F02D          	movff	plusw1,btemp
  1704  00097E  0EFD               	movlw	-3
  1705  000980  CFE3 F02E          	movff	plusw1,btemp+1
  1706  000984                     
  1707                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  1708  000984  0EF8               	movlw	248
  1709  000986  26E1               	addwf	fsr1l,f,c
  1710  000988  0EFF               	movlw	255
  1711  00098A  22E2               	addwfc	fsr1h,f,c
  1712  00098C  0012               	return		;funcret
  1713  00098E                     __end_of___awdiv:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function _pipe_write *****************
  1717 ;; Defined at:
  1718 ;;		line 32 in file "pipe.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  pipe            2  [STACK] PTR struct pipe
  1721 ;;		 -> pipe_temperature(26), 
  1722 ;;  dado            2  [STACK] int 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  write_flag      1  [STACK] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1  [STACK] void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         0       0       0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:   10
  1741 ;; This function calls:
  1742 ;;		_sem_get_value
  1743 ;;		_sem_post
  1744 ;;		_sem_wait
  1745 ;; This function is called by:
  1746 ;;		_thermostat_sensing_1
  1747 ;; This function uses a reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text15
  1751  00098E                     __ptext15:
  1752                           	callstack 0
  1753  00098E                     _pipe_write:
  1754                           	callstack 0
  1755                           
  1756                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1757  00098E  52E6               	movf	postinc1,f,c
  1758  000990                     
  1759                           ;pipe.c: 33:     (INTCONbits.GIE = 0);
  1760  000990  9EF2               	bcf	242,7,c	;volatile
  1761  000992                     
  1762                           ;pipe.c: 35:     bool write_flag = 0;
  1763                           ;stkvar	pipe_write@write_flag @ sp[(-1)+0]
  1764  000992  0EFF               	movlw	-1
  1765  000994  6AE3               	clrf	plusw1,c
  1766  000996                     l1812:
  1767                           
  1768                           ;pipe.c: 38:         if(pipe->size < 1) {
  1769                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1770  000996  0EFD               	movlw	-3
  1771  000998  CFE3 F037          	movff	plusw1,btemp+10
  1772  00099C  0EFE               	movlw	-2
  1773  00099E  CFE3 F038          	movff	plusw1,btemp+11
  1774  0009A2  0E02               	movlw	2
  1775  0009A4  2437               	addwf	(btemp+10)^0,w,c
  1776  0009A6  6ED9               	movwf	fsr2l,c
  1777  0009A8  0E00               	movlw	0
  1778  0009AA  2038               	addwfc	(btemp+11)^0,w,c
  1779  0009AC  6EDA               	movwf	fsr2h,c
  1780  0009AE  50DE               	movf	postinc2,w,c
  1781  0009B0  10DE               	iorwf	postinc2,w,c
  1782  0009B2  A4D8               	btfss	status,2,c
  1783  0009B4  EFDE  F004         	goto	u76_21
  1784  0009B8  EFE0  F004         	goto	u76_20
  1785  0009BC                     u76_21:
  1786  0009BC  EF5A  F005         	goto	l326
  1787  0009C0                     u76_20:
  1788  0009C0                     
  1789                           ;pipe.c: 39:             pipe->msg[pipe->write_pos] = dado;
  1790                           ;stkvar	pipe_write@dado @ sp[(-1)+-4]
  1791  0009C0  50E1               	movf	fsr1l,w,c
  1792  0009C2  0FFB               	addlw	-5
  1793  0009C4  6ED9               	movwf	fsr2l,c
  1794  0009C6  50E2               	movf	fsr1h,w,c
  1795  0009C8  6EDA               	movwf	fsr2h,c
  1796  0009CA  0EFF               	movlw	255
  1797  0009CC  22DA               	addwfc	fsr2h,f,c
  1798                           
  1799                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1800  0009CE  0EFD               	movlw	-3
  1801  0009D0  CFE3 F037          	movff	plusw1,btemp+10
  1802  0009D4  0EFE               	movlw	-2
  1803  0009D6  CFE3 F038          	movff	plusw1,btemp+11
  1804  0009DA  0E06               	movlw	6
  1805  0009DC  2437               	addwf	(btemp+10)^0,w,c
  1806  0009DE  6EE9               	movwf	fsr0l,c
  1807  0009E0  0E00               	movlw	0
  1808  0009E2  2038               	addwfc	(btemp+11)^0,w,c
  1809  0009E4  6EEA               	movwf	fsr0h,c
  1810  0009E6  CFEE F037          	movff	postinc0,btemp+10
  1811  0009EA  CFED F038          	movff	postdec0,btemp+11
  1812  0009EE  90D8               	bcf	status,0,c
  1813  0009F0  3437               	rlcf	(btemp+10)^0,w,c
  1814  0009F2  6E35               	movwf	(btemp+8)^0,c
  1815  0009F4  3438               	rlcf	(btemp+11)^0,w,c
  1816  0009F6  6E36               	movwf	(btemp+9)^0,c
  1817                           
  1818                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1819  0009F8  0EFD               	movlw	-3
  1820  0009FA  CFE3 F037          	movff	plusw1,btemp+10
  1821  0009FE  0EFE               	movlw	-2
  1822  000A00  CFE3 F038          	movff	plusw1,btemp+11
  1823  000A04  5035               	movf	(btemp+8)^0,w,c
  1824  000A06  2437               	addwf	(btemp+10)^0,w,c
  1825  000A08  6EE9               	movwf	fsr0l,c
  1826  000A0A  5036               	movf	(btemp+9)^0,w,c
  1827  000A0C  2038               	addwfc	(btemp+11)^0,w,c
  1828  000A0E  6EEA               	movwf	fsr0h,c
  1829  000A10  CFDE FFEE          	movff	postinc2,postinc0
  1830  000A14  CFDD FFED          	movff	postdec2,postdec0
  1831  000A18                     
  1832                           ;pipe.c: 40:             pipe->write_pos = (pipe->write_pos + 1) % 1;
  1833                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1834  000A18  0EFD               	movlw	-3
  1835  000A1A  CFE3 F037          	movff	plusw1,btemp+10
  1836  000A1E  0EFE               	movlw	-2
  1837  000A20  CFE3 F038          	movff	plusw1,btemp+11
  1838  000A24  0E06               	movlw	6
  1839  000A26  2437               	addwf	(btemp+10)^0,w,c
  1840  000A28  6ED9               	movwf	fsr2l,c
  1841  000A2A  0E00               	movlw	0
  1842  000A2C  2038               	addwfc	(btemp+11)^0,w,c
  1843  000A2E  6EDA               	movwf	fsr2h,c
  1844  000A30  0E00               	movlw	0
  1845  000A32  6EDE               	movwf	postinc2,c
  1846  000A34  0E00               	movlw	0
  1847  000A36  6EDD               	movwf	postdec2,c
  1848  000A38                     
  1849                           ;pipe.c: 41:             pipe->size++;
  1850                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1851  000A38  0EFD               	movlw	-3
  1852  000A3A  CFE3 F037          	movff	plusw1,btemp+10
  1853  000A3E  0EFE               	movlw	-2
  1854  000A40  CFE3 F038          	movff	plusw1,btemp+11
  1855  000A44  0E02               	movlw	2
  1856  000A46  2437               	addwf	(btemp+10)^0,w,c
  1857  000A48  6ED9               	movwf	fsr2l,c
  1858  000A4A  0E00               	movlw	0
  1859  000A4C  2038               	addwfc	(btemp+11)^0,w,c
  1860  000A4E  6EDA               	movwf	fsr2h,c
  1861  000A50  2ADE               	incf	postinc2,f,c
  1862  000A52  0E00               	movlw	0
  1863  000A54  22DD               	addwfc	postdec2,f,c
  1864  000A56                     
  1865                           ;pipe.c: 42:             write_flag = 1;
  1866                           ;stkvar	pipe_write@write_flag @ sp[(-1)+0]
  1867  000A56  0EFF               	movlw	-1
  1868  000A58  6AE3               	clrf	plusw1,c
  1869  000A5A  2AE3               	incf	plusw1,f,c
  1870  000A5C                     
  1871                           ;pipe.c: 43:             if(sem_get_value(pipe->sem) < 0){
  1872                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1873  000A5C  0EFD               	movlw	-3
  1874  000A5E  CFE3 F037          	movff	plusw1,btemp+10
  1875  000A62  0EFE               	movlw	-2
  1876  000A64  CFE3 F038          	movff	plusw1,btemp+11
  1877  000A68  0E08               	movlw	8
  1878  000A6A  2437               	addwf	(btemp+10)^0,w,c
  1879  000A6C  6ED9               	movwf	fsr2l,c
  1880  000A6E  0E00               	movlw	0
  1881  000A70  2038               	addwfc	(btemp+11)^0,w,c
  1882  000A72  6EDA               	movwf	fsr2h,c
  1883  000A74  0E12               	movlw	18
  1884  000A76                     u77_21:
  1885  000A76  CFDE FFE6          	movff	postinc2,postinc1
  1886  000A7A  2CE8               	decfsz	wreg,w,c
  1887  000A7C  EF3B  F005         	goto	u77_21
  1888  000A80  ECBE  F00A         	call	_sem_get_value	;wreg free
  1889  000A84  BE2E               	btfsc	(btemp+1)^0,7,c
  1890  000A86  EF49  F005         	goto	u78_20
  1891  000A8A  EF47  F005         	goto	u78_21
  1892  000A8E                     u78_21:
  1893  000A8E  EF6A  F005         	goto	l1828
  1894  000A92                     u78_20:
  1895  000A92                     
  1896                           ;pipe.c: 44:                 sem_post(&pipe->sem);
  1897                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1898  000A92  0EFD               	movlw	-3
  1899  000A94  50E3               	movf	plusw1,w,c
  1900  000A96  0F08               	addlw	8
  1901  000A98  6E37               	movwf	(btemp+10)^0,c
  1902  000A9A  0EFE               	movlw	-2
  1903  000A9C  CFE3 F038          	movff	plusw1,btemp+11
  1904  000AA0  0E00               	movlw	0
  1905  000AA2  2238               	addwfc	(btemp+11)^0,f,c
  1906  000AA4  C037  FFE6         	movff	btemp+10,postinc1
  1907  000AA8  C038  FFE6         	movff	btemp+11,postinc1
  1908  000AAC  ECC5  F006         	call	_sem_post	;wreg free
  1909  000AB0  EF6A  F005         	goto	l1828
  1910  000AB4                     l326:
  1911                           
  1912                           ;pipe.c: 48:             (INTCONbits.GIE = 1);
  1913  000AB4  8EF2               	bsf	242,7,c	;volatile
  1914  000AB6                     
  1915                           ;pipe.c: 49:             sem_wait(&pipe->sem);
  1916                           ;stkvar	pipe_write@pipe @ sp[(-1)+-2]
  1917  000AB6  0EFD               	movlw	-3
  1918  000AB8  50E3               	movf	plusw1,w,c
  1919  000ABA  0F08               	addlw	8
  1920  000ABC  6E37               	movwf	(btemp+10)^0,c
  1921  000ABE  0EFE               	movlw	-2
  1922  000AC0  CFE3 F038          	movff	plusw1,btemp+11
  1923  000AC4  0E00               	movlw	0
  1924  000AC6  2238               	addwfc	(btemp+11)^0,f,c
  1925  000AC8  C037  FFE6         	movff	btemp+10,postinc1
  1926  000ACC  C038  FFE6         	movff	btemp+11,postinc1
  1927  000AD0  EC0A  F000         	call	_sem_wait	;wreg free
  1928  000AD4                     l1828:
  1929                           
  1930                           ;pipe.c: 51:     } while(!write_flag);
  1931                           ;stkvar	pipe_write@write_flag @ sp[(-1)+0]
  1932  000AD4  0EFF               	movlw	-1
  1933  000AD6  50E3               	movf	plusw1,w,c
  1934  000AD8  B4D8               	btfsc	status,2,c
  1935  000ADA  EF71  F005         	goto	u79_21
  1936  000ADE  EF73  F005         	goto	u79_20
  1937  000AE2                     u79_21:
  1938  000AE2  EFCB  F004         	goto	l1812
  1939  000AE6                     u79_20:
  1940  000AE6                     
  1941                           ;pipe.c: 53:     (INTCONbits.GIE = 1);
  1942  000AE6  8EF2               	bsf	242,7,c	;volatile
  1943  000AE8                     
  1944                           ; _pipe_write: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  1945  000AE8  0EFB               	movlw	251
  1946  000AEA  26E1               	addwf	fsr1l,f,c
  1947  000AEC  0EFF               	movlw	255
  1948  000AEE  22E2               	addwfc	fsr1h,f,c
  1949  000AF0  0012               	return		;funcret
  1950  000AF2                     __end_of_pipe_write:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _sem_wait *****************
  1954 ;; Defined at:
  1955 ;;		line 10 in file "semaphore.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  s               2  [STACK] PTR struct semaphore
  1958 ;;		 -> sem_temp_r(18), sem_temp_w(18), pipe_temperature(26), 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1  [STACK] void 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1970 ;;      Params:         0       0       0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0
  1973 ;;      Totals:         0       0       0       0       0       0       0
  1974 ;;Total ram usage:        0 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    9
  1977 ;; This function calls:
  1978 ;;		_RESTORE_CONTEXT
  1979 ;;		___lwmod
  1980 ;; This function is called by:
  1981 ;;		_pipe_read
  1982 ;;		_pipe_write
  1983 ;;		_thermostat_sensing_2
  1984 ;;		_ac_controller_2
  1985 ;; This function uses a reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text16
  1989  000014                     __ptext16:
  1990                           	callstack 0
  1991  000014                     _sem_wait:
  1992                           	callstack 16
  1993  000014                     
  1994                           ;semaphore.c: 11:     (INTCONbits.GIE = 0);
  1995  000014  9EF2               	bcf	242,7,c	;volatile
  1996  000016                     
  1997                           ;semaphore.c: 13:     s->s_count--;
  1998                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  1999  000016  0EFE               	movlw	-2
  2000  000018  CFE3 FFD9          	movff	plusw1,fsr2l
  2001  00001C  0EFF               	movlw	-1
  2002  00001E  CFE3 FFDA          	movff	plusw1,fsr2h
  2003  000022  06DE               	decf	postinc2,f,c
  2004  000024  0E00               	movlw	0
  2005  000026  5ADD               	subwfb	postdec2,f,c
  2006  000028                     
  2007                           ;semaphore.c: 14:     if(s->s_count < 0){
  2008                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2009  000028  0EFE               	movlw	-2
  2010  00002A  CFE3 FFD9          	movff	plusw1,fsr2l
  2011  00002E  0EFF               	movlw	-1
  2012  000030  CFE3 FFDA          	movff	plusw1,fsr2h
  2013  000034  0E01               	movlw	1
  2014  000036  BEDB               	btfsc	plusw2,7,c
  2015  000038  EF22  F000         	goto	u84_20
  2016  00003C  EF20  F000         	goto	u84_21
  2017  000040                     u84_21:
  2018  000040  EF85  F001         	goto	l1894
  2019  000044                     u84_20:
  2020  000044                     
  2021                           ;semaphore.c: 17:         s->s_queue.TASKS[s->s_queue.queue_wait_pos] = READY_QUEUE.task
      +                          _running;
  2022  000044  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  2023                           
  2024                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2025  000048  0EFE               	movlw	-2
  2026  00004A  CFE3 F037          	movff	plusw1,btemp+10
  2027  00004E  0EFF               	movlw	-1
  2028  000050  CFE3 F038          	movff	plusw1,btemp+11
  2029  000054  0E0E               	movlw	14
  2030  000056  2437               	addwf	(btemp+10)^0,w,c
  2031  000058  6EE9               	movwf	fsr0l,c
  2032  00005A  0E00               	movlw	0
  2033  00005C  2038               	addwfc	(btemp+11)^0,w,c
  2034  00005E  6EEA               	movwf	fsr0h,c
  2035  000060  CFEE F037          	movff	postinc0,btemp+10
  2036  000064  CFED F038          	movff	postdec0,btemp+11
  2037  000068  90D8               	bcf	status,0,c
  2038  00006A  3437               	rlcf	(btemp+10)^0,w,c
  2039  00006C  6E35               	movwf	(btemp+8)^0,c
  2040  00006E  3438               	rlcf	(btemp+11)^0,w,c
  2041  000070  6E36               	movwf	(btemp+9)^0,c
  2042                           
  2043                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2044  000072  0EFE               	movlw	-2
  2045  000074  50E3               	movf	plusw1,w,c
  2046  000076  2635               	addwf	(btemp+8)^0,f,c
  2047  000078  0EFF               	movlw	-1
  2048  00007A  50E3               	movf	plusw1,w,c
  2049  00007C  2236               	addwfc	(btemp+9)^0,f,c
  2050  00007E  0E02               	movlw	2
  2051  000080  2435               	addwf	(btemp+8)^0,w,c
  2052  000082  6EE9               	movwf	fsr0l,c
  2053  000084  0E00               	movlw	0
  2054  000086  2036               	addwfc	(btemp+9)^0,w,c
  2055  000088  6EEA               	movwf	fsr0h,c
  2056  00008A  CFDE FFEE          	movff	postinc2,postinc0
  2057  00008E  CFDD FFED          	movff	postdec2,postdec0
  2058  000092                     
  2059                           ;semaphore.c: 18:         s->s_queue.queue_wait_pos = (s->s_queue.queue_wait_pos + 1) % 
      +                          5;
  2060  000092  0E05               	movlw	5
  2061  000094  6EE6               	movwf	postinc1,c
  2062  000096  0E00               	movlw	0
  2063  000098  6EE6               	movwf	postinc1,c
  2064                           
  2065                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  2066  00009A  0EFC               	movlw	-4
  2067  00009C  CFE3 F037          	movff	plusw1,btemp+10
  2068  0000A0  0EFD               	movlw	-3
  2069  0000A2  CFE3 F038          	movff	plusw1,btemp+11
  2070  0000A6  0E0E               	movlw	14
  2071  0000A8  2437               	addwf	(btemp+10)^0,w,c
  2072  0000AA  6ED9               	movwf	fsr2l,c
  2073  0000AC  0E00               	movlw	0
  2074  0000AE  2038               	addwfc	(btemp+11)^0,w,c
  2075  0000B0  6EDA               	movwf	fsr2h,c
  2076  0000B2  CFDE F037          	movff	postinc2,btemp+10
  2077  0000B6  CFDD F038          	movff	postdec2,btemp+11
  2078  0000BA  0E01               	movlw	1
  2079  0000BC  2637               	addwf	(btemp+10)^0,f,c
  2080  0000BE  0E00               	movlw	0
  2081  0000C0  2238               	addwfc	(btemp+11)^0,f,c
  2082  0000C2  C037  FFE6         	movff	btemp+10,postinc1
  2083  0000C6  C038  FFE6         	movff	btemp+11,postinc1
  2084  0000CA  ECD4  F007         	call	___lwmod	;wreg free
  2085                           
  2086                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2087  0000CE  0EFE               	movlw	-2
  2088  0000D0  CFE3 F037          	movff	plusw1,btemp+10
  2089  0000D4  0EFF               	movlw	-1
  2090  0000D6  CFE3 F038          	movff	plusw1,btemp+11
  2091  0000DA  0E0E               	movlw	14
  2092  0000DC  2437               	addwf	(btemp+10)^0,w,c
  2093  0000DE  6ED9               	movwf	fsr2l,c
  2094  0000E0  0E00               	movlw	0
  2095  0000E2  2038               	addwfc	(btemp+11)^0,w,c
  2096  0000E4  6EDA               	movwf	fsr2h,c
  2097  0000E6  C02D  FFDE         	movff	btemp,postinc2
  2098  0000EA  C02E  FFDD         	movff	btemp+1,postdec2
  2099  0000EE                     
  2100                           ;semaphore.c: 19:         s->s_queue.queue_size++;
  2101                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  2102  0000EE  0EFE               	movlw	-2
  2103  0000F0  CFE3 F037          	movff	plusw1,btemp+10
  2104  0000F4  0EFF               	movlw	-1
  2105  0000F6  CFE3 F038          	movff	plusw1,btemp+11
  2106  0000FA  0E0C               	movlw	12
  2107  0000FC  2437               	addwf	(btemp+10)^0,w,c
  2108  0000FE  6ED9               	movwf	fsr2l,c
  2109  000100  0E00               	movlw	0
  2110  000102  2038               	addwfc	(btemp+11)^0,w,c
  2111  000104  6EDA               	movwf	fsr2h,c
  2112  000106  2ADE               	incf	postinc2,f,c
  2113  000108  0E00               	movlw	0
  2114  00010A  22DD               	addwfc	postdec2,f,c
  2115  00010C  9EF2               	bcf	242,7,c	;volatile
  2116  00010E  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  2117  000112  CFDE F037          	movff	postinc2,btemp+10
  2118  000116  CFDD F038          	movff	postdec2,btemp+11
  2119  00011A  0E71               	movlw	113
  2120  00011C  0237               	mulwf	(btemp+10)^0,c
  2121  00011E  CFF3 F035          	movff	prodl,btemp+8
  2122  000122  CFF4 F036          	movff	prodh,btemp+9
  2123  000126  0238               	mulwf	(btemp+11)^0,c
  2124  000128  50F3               	movf	prodl,w,c
  2125  00012A  2636               	addwf	(btemp+9)^0,f,c
  2126  00012C  0E85               	movlw	low (_READY_QUEUE+107)
  2127  00012E  2435               	addwf	(btemp+8)^0,w,c
  2128  000130  6ED9               	movwf	fsr2l,c
  2129  000132  0E01               	movlw	high (_READY_QUEUE+107)
  2130  000134  2036               	addwfc	(btemp+9)^0,w,c
  2131  000136  6EDA               	movwf	fsr2h,c
  2132  000138  50DE               	movf	postinc2,w,c
  2133  00013A  10DE               	iorwf	postinc2,w,c
  2134  00013C  B4D8               	btfsc	status,2,c
  2135  00013E  EFA3  F000         	goto	u85_21
  2136  000142  EFA5  F000         	goto	u85_20
  2137  000146                     u85_21:
  2138  000146  EF6B  F001         	goto	l1888
  2139  00014A                     u85_20:
  2140  00014A  6A07               	clrf	_index^0,c
  2141  00014C  6A08               	clrf	(_index+1)^0,c
  2142  00014E  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  2143  000152  CFDE F037          	movff	postinc2,btemp+10
  2144  000156  CFDD F038          	movff	postdec2,btemp+11
  2145  00015A  0E71               	movlw	113
  2146  00015C  0237               	mulwf	(btemp+10)^0,c
  2147  00015E  CFF3 F035          	movff	prodl,btemp+8
  2148  000162  CFF4 F036          	movff	prodh,btemp+9
  2149  000166  0238               	mulwf	(btemp+11)^0,c
  2150  000168  50F3               	movf	prodl,w,c
  2151  00016A  2636               	addwf	(btemp+9)^0,f,c
  2152  00016C  0E1E               	movlw	low (_READY_QUEUE+4)
  2153  00016E  2435               	addwf	(btemp+8)^0,w,c
  2154  000170  6ED9               	movwf	fsr2l,c
  2155  000172  0E01               	movlw	high (_READY_QUEUE+4)
  2156  000174  2036               	addwfc	(btemp+9)^0,w,c
  2157  000176  6EDA               	movwf	fsr2h,c
  2158  000178  0E03               	movlw	3
  2159  00017A  6EDF               	movwf	indf2,c
  2160  00017C  6E37               	movwf	(btemp+10)^0,c
  2161  00017E  6A38               	clrf	(btemp+11)^0,c
  2162  000180  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  2163  000184  CFDE F035          	movff	postinc2,btemp+8
  2164  000188  CFDD F036          	movff	postdec2,btemp+9
  2165  00018C  0E71               	movlw	113
  2166  00018E  0235               	mulwf	(btemp+8)^0,c
  2167  000190  CFF3 F033          	movff	prodl,btemp+6
  2168  000194  CFF4 F034          	movff	prodh,btemp+7
  2169  000198  0236               	mulwf	(btemp+9)^0,c
  2170  00019A  50F3               	movf	prodl,w,c
  2171  00019C  2634               	addwf	(btemp+7)^0,f,c
  2172  00019E  0E21               	movlw	low (_READY_QUEUE+7)
  2173  0001A0  2433               	addwf	(btemp+6)^0,w,c
  2174  0001A2  6ED9               	movwf	fsr2l,c
  2175  0001A4  0E01               	movlw	high (_READY_QUEUE+7)
  2176  0001A6  2034               	addwfc	(btemp+7)^0,w,c
  2177  0001A8  6EDA               	movwf	fsr2h,c
  2178  0001AA  C037  FFDE         	movff	btemp+10,postinc2
  2179  0001AE  C038  FFDD         	movff	btemp+11,postdec2
  2180  0001B2  50E0               	movf	224,w,c	;volatile
  2181  0001B4  6E37               	movwf	(btemp+10)^0,c
  2182  0001B6  6A38               	clrf	(btemp+11)^0,c
  2183  0001B8  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  2184  0001BC  CFDE F035          	movff	postinc2,btemp+8
  2185  0001C0  CFDD F036          	movff	postdec2,btemp+9
  2186  0001C4  0E71               	movlw	113
  2187  0001C6  0235               	mulwf	(btemp+8)^0,c
  2188  0001C8  CFF3 F033          	movff	prodl,btemp+6
  2189  0001CC  CFF4 F034          	movff	prodh,btemp+7
  2190  0001D0  0236               	mulwf	(btemp+9)^0,c
  2191  0001D2  50F3               	movf	prodl,w,c
  2192  0001D4  2634               	addwf	(btemp+7)^0,f,c
  2193  0001D6  0E23               	movlw	low (_READY_QUEUE+9)
  2194  0001D8  2433               	addwf	(btemp+6)^0,w,c
  2195  0001DA  6ED9               	movwf	fsr2l,c
  2196  0001DC  0E01               	movlw	high (_READY_QUEUE+9)
  2197  0001DE  2034               	addwfc	(btemp+7)^0,w,c
  2198  0001E0  6EDA               	movwf	fsr2h,c
  2199  0001E2  C037  FFDE         	movff	btemp+10,postinc2
  2200  0001E6  C038  FFDD         	movff	btemp+11,postdec2
  2201  0001EA  50D8               	movf	216,w,c	;volatile
  2202  0001EC  6E37               	movwf	(btemp+10)^0,c
  2203  0001EE  6A38               	clrf	(btemp+11)^0,c
  2204  0001F0  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  2205  0001F4  CFDE F035          	movff	postinc2,btemp+8
  2206  0001F8  CFDD F036          	movff	postdec2,btemp+9
  2207  0001FC  0E71               	movlw	113
  2208  0001FE  0235               	mulwf	(btemp+8)^0,c
  2209  000200  CFF3 F033          	movff	prodl,btemp+6
  2210  000204  CFF4 F034          	movff	prodh,btemp+7
  2211  000208  0236               	mulwf	(btemp+9)^0,c
  2212  00020A  50F3               	movf	prodl,w,c
  2213  00020C  2634               	addwf	(btemp+7)^0,f,c
  2214  00020E  0E1F               	movlw	low (_READY_QUEUE+5)
  2215  000210  2433               	addwf	(btemp+6)^0,w,c
  2216  000212  6ED9               	movwf	fsr2l,c
  2217  000214  0E01               	movlw	high (_READY_QUEUE+5)
  2218  000216  2034               	addwfc	(btemp+7)^0,w,c
  2219  000218  6EDA               	movwf	fsr2h,c
  2220  00021A  C037  FFDE         	movff	btemp+10,postinc2
  2221  00021E  C038  FFDD         	movff	btemp+11,postdec2
  2222  000222  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  2223  000226  CFDE F037          	movff	postinc2,btemp+10
  2224  00022A  CFDD F038          	movff	postdec2,btemp+11
  2225  00022E  0E71               	movlw	113
  2226  000230  0237               	mulwf	(btemp+10)^0,c
  2227  000232  CFF3 F035          	movff	prodl,btemp+8
  2228  000236  CFF4 F036          	movff	prodh,btemp+9
  2229  00023A  0238               	mulwf	(btemp+11)^0,c
  2230  00023C  50F3               	movf	prodl,w,c
  2231  00023E  2636               	addwf	(btemp+9)^0,f,c
  2232  000240  0E85               	movlw	low (_READY_QUEUE+107)
  2233  000242  2435               	addwf	(btemp+8)^0,w,c
  2234  000244  6ED9               	movwf	fsr2l,c
  2235  000246  0E01               	movlw	high (_READY_QUEUE+107)
  2236  000248  2036               	addwfc	(btemp+9)^0,w,c
  2237  00024A  6EDA               	movwf	fsr2h,c
  2238  00024C  0E00               	movlw	0
  2239  00024E  6EDE               	movwf	postinc2,c
  2240  000250  0E00               	movlw	0
  2241  000252  6EDD               	movwf	postdec2,c
  2242  000254                     l288:
  2243  000254  C007  F037         	movff	_index,btemp+10
  2244  000258  C008  F038         	movff	_index+1,btemp+11
  2245  00025C  0E03               	movlw	3
  2246  00025E  0237               	mulwf	(btemp+10)^0,c
  2247  000260  CFF3 F035          	movff	prodl,btemp+8
  2248  000264  CFF4 F036          	movff	prodh,btemp+9
  2249  000268  0238               	mulwf	(btemp+11)^0,c
  2250  00026A  50F3               	movf	prodl,w,c
  2251  00026C  2636               	addwf	(btemp+9)^0,f,c
  2252  00026E  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  2253  000272  CFDE F037          	movff	postinc2,btemp+10
  2254  000276  CFDD F038          	movff	postdec2,btemp+11
  2255  00027A  0E71               	movlw	113
  2256  00027C  0237               	mulwf	(btemp+10)^0,c
  2257  00027E  CFF3 F033          	movff	prodl,btemp+6
  2258  000282  CFF4 F034          	movff	prodh,btemp+7
  2259  000286  0238               	mulwf	(btemp+11)^0,c
  2260  000288  50F3               	movf	prodl,w,c
  2261  00028A  2634               	addwf	(btemp+7)^0,f,c
  2262  00028C  0E1A               	movlw	low _READY_QUEUE
  2263  00028E  6E37               	movwf	(btemp+10)^0,c
  2264  000290  0E01               	movlw	high _READY_QUEUE
  2265  000292  6E38               	movwf	(btemp+11)^0,c
  2266  000294  0E0B               	movlw	11
  2267  000296  2637               	addwf	(btemp+10)^0,f,c
  2268  000298  0E00               	movlw	0
  2269  00029A  2238               	addwfc	(btemp+11)^0,f,c
  2270  00029C  5033               	movf	(btemp+6)^0,w,c
  2271  00029E  2637               	addwf	(btemp+10)^0,f,c
  2272  0002A0  5034               	movf	(btemp+7)^0,w,c
  2273  0002A2  2238               	addwfc	(btemp+11)^0,f,c
  2274  0002A4  5035               	movf	(btemp+8)^0,w,c
  2275  0002A6  2437               	addwf	(btemp+10)^0,w,c
  2276  0002A8  6ED9               	movwf	fsr2l,c
  2277  0002AA  5036               	movf	(btemp+9)^0,w,c
  2278  0002AC  2038               	addwfc	(btemp+11)^0,w,c
  2279  0002AE  6EDA               	movwf	fsr2h,c
  2280  0002B0  CFFD FFDE          	movff	tosl,postinc2	;volatile
  2281  0002B4  CFFE FFDE          	movff	tosh,postinc2	;volatile
  2282  0002B8  CFFF FFDE          	movff	tosu,postinc2	;volatile
  2283  0002BC  4A07               	infsnz	_index^0,f,c
  2284  0002BE  2A08               	incf	(_index+1)^0,f,c
  2285  0002C0  0006               	pop		;# 
  2286  0002C2  50FC               	movf	252,w,c	;volatile
  2287  0002C4  A4D8               	btfss	status,2,c
  2288  0002C6  EF67  F001         	goto	u86_21
  2289  0002CA  EF69  F001         	goto	u86_20
  2290  0002CE                     u86_21:
  2291  0002CE  EF2A  F001         	goto	l288
  2292  0002D2                     u86_20:
  2293  0002D2  EF82  F001         	goto	l1890
  2294  0002D6                     l1888:
  2295  0002D6  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  2296  0002DA  CFDE F037          	movff	postinc2,btemp+10
  2297  0002DE  CFDD F038          	movff	postdec2,btemp+11
  2298  0002E2  0E71               	movlw	113
  2299  0002E4  0237               	mulwf	(btemp+10)^0,c
  2300  0002E6  CFF3 F035          	movff	prodl,btemp+8
  2301  0002EA  CFF4 F036          	movff	prodh,btemp+9
  2302  0002EE  0238               	mulwf	(btemp+11)^0,c
  2303  0002F0  50F3               	movf	prodl,w,c
  2304  0002F2  2636               	addwf	(btemp+9)^0,f,c
  2305  0002F4  0E1E               	movlw	low (_READY_QUEUE+4)
  2306  0002F6  2435               	addwf	(btemp+8)^0,w,c
  2307  0002F8  6ED9               	movwf	fsr2l,c
  2308  0002FA  0E01               	movlw	high (_READY_QUEUE+4)
  2309  0002FC  2036               	addwfc	(btemp+9)^0,w,c
  2310  0002FE  6EDA               	movwf	fsr2h,c
  2311  000300  0E03               	movlw	3
  2312  000302  6EDF               	movwf	indf2,c
  2313  000304                     l1890:
  2314  000304  8EF2               	bsf	242,7,c	;volatile
  2315  000306                     
  2316                           ;semaphore.c: 21:         RESTORE_CONTEXT();
  2317  000306  ECE0  F002         	call	_RESTORE_CONTEXT	;wreg free
  2318  00030A                     l1894:
  2319                           
  2320                           ;semaphore.c: 23:     (INTCONbits.GIE = 1);
  2321  00030A  8EF2               	bsf	242,7,c	;volatile
  2322  00030C                     
  2323                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2324  00030C  52E5               	movf	postdec1,f,c
  2325  00030E  52E5               	movf	postdec1,f,c
  2326  000310  0012               	return		;funcret
  2327  000312                     __end_of_sem_wait:
  2328                           	callstack 0
  2329                           
  2330 ;; *************** function _RESTORE_CONTEXT *****************
  2331 ;; Defined at:
  2332 ;;		line 125 in file "kernel.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  stack_size      2  [STACK] unsigned int 
  2337 ;;  task_running    2  [STACK] unsigned int 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1  [STACK] void 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2347 ;;      Params:         0       0       0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0
  2350 ;;      Totals:         0       0       0       0       0       0       0
  2351 ;;Total ram usage:        0 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    8
  2354 ;; This function calls:
  2355 ;;		_scheduler
  2356 ;; This function is called by:
  2357 ;;		_ISR_timer
  2358 ;;		_sem_wait
  2359 ;;		_OS_delay
  2360 ;; This function uses a reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text17
  2364  0005C0                     __ptext17:
  2365                           	callstack 0
  2366  0005C0                     _RESTORE_CONTEXT:
  2367                           	callstack 0
  2368                           
  2369                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2370  0005C0  52E6               	movf	postinc1,f,c
  2371  0005C2  52E6               	movf	postinc1,f,c
  2372  0005C4  52E6               	movf	postinc1,f,c
  2373  0005C6  52E6               	movf	postinc1,f,c
  2374  0005C8                     
  2375                           ;kernel.c: 127:         (INTCONbits.GIE = 0);
  2376  0005C8  9EF2               	bcf	242,7,c	;volatile
  2377  0005CA                     
  2378                           ;kernel.c: 128:         READY_QUEUE.task_running = scheduler();
  2379  0005CA  ECD5  F00A         	call	_scheduler	;wreg free
  2380  0005CE  C02D  F3C0         	movff	btemp,_READY_QUEUE+678
  2381  0005D2  C02E  F3C1         	movff	btemp+1,_READY_QUEUE+679
  2382  0005D6                     
  2383                           ;kernel.c: 129:         u_int task_running = READY_QUEUE.task_running;
  2384                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2385  0005D6  0EFE               	movlw	-2
  2386  0005D8  C3C0  FFE3         	movff	_READY_QUEUE+678,plusw1
  2387  0005DC  0EFF               	movlw	-1
  2388  0005DE  C3C1  FFE3         	movff	_READY_QUEUE+679,plusw1
  2389  0005E2                     
  2390                           ;kernel.c: 130:         READY_QUEUE.QUEUE[task_running].task_state = RUNNING;
  2391                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2392  0005E2  0EFE               	movlw	-2
  2393  0005E4  CFE3 F037          	movff	plusw1,btemp+10
  2394  0005E8  0EFF               	movlw	-1
  2395  0005EA  CFE3 F038          	movff	plusw1,btemp+11
  2396  0005EE  0E71               	movlw	113
  2397  0005F0  0237               	mulwf	(btemp+10)^0,c
  2398  0005F2  CFF3 F035          	movff	prodl,btemp+8
  2399  0005F6  CFF4 F036          	movff	prodh,btemp+9
  2400  0005FA  0238               	mulwf	(btemp+11)^0,c
  2401  0005FC  50F3               	movf	prodl,w,c
  2402  0005FE  2636               	addwf	(btemp+9)^0,f,c
  2403  000600  0E1E               	movlw	low (_READY_QUEUE+4)
  2404  000602  2435               	addwf	(btemp+8)^0,w,c
  2405  000604  6ED9               	movwf	fsr2l,c
  2406  000606  0E01               	movlw	high (_READY_QUEUE+4)
  2407  000608  2036               	addwfc	(btemp+9)^0,w,c
  2408  00060A  6EDA               	movwf	fsr2h,c
  2409  00060C  0E01               	movlw	1
  2410  00060E  6EDF               	movwf	indf2,c
  2411  000610                     
  2412                           ;kernel.c: 131:         STKPTR = 0;
  2413  000610  6AFC               	clrf	252,c	;volatile
  2414  000612                     
  2415                           ;kernel.c: 132:         if(READY_QUEUE.QUEUE[task_running].task_context.stack_size > 0) 
      +                          {
  2416                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2417  000612  0EFE               	movlw	-2
  2418  000614  CFE3 F037          	movff	plusw1,btemp+10
  2419  000618  0EFF               	movlw	-1
  2420  00061A  CFE3 F038          	movff	plusw1,btemp+11
  2421  00061E  0E71               	movlw	113
  2422  000620  0237               	mulwf	(btemp+10)^0,c
  2423  000622  CFF3 F035          	movff	prodl,btemp+8
  2424  000626  CFF4 F036          	movff	prodh,btemp+9
  2425  00062A  0238               	mulwf	(btemp+11)^0,c
  2426  00062C  50F3               	movf	prodl,w,c
  2427  00062E  2636               	addwf	(btemp+9)^0,f,c
  2428  000630  0E85               	movlw	low (_READY_QUEUE+107)
  2429  000632  2435               	addwf	(btemp+8)^0,w,c
  2430  000634  6ED9               	movwf	fsr2l,c
  2431  000636  0E01               	movlw	high (_READY_QUEUE+107)
  2432  000638  2036               	addwfc	(btemp+9)^0,w,c
  2433  00063A  6EDA               	movwf	fsr2h,c
  2434  00063C  50DE               	movf	postinc2,w,c
  2435  00063E  10DE               	iorwf	postinc2,w,c
  2436  000640  B4D8               	btfsc	status,2,c
  2437  000642  EF25  F003         	goto	u70_21
  2438  000646  EF27  F003         	goto	u70_20
  2439  00064A                     u70_21:
  2440  00064A  EFE4  F003         	goto	l185
  2441  00064E                     u70_20:
  2442  00064E                     
  2443                           ;kernel.c: 133:             BSR = READY_QUEUE.QUEUE[task_running].task_context.BSR_reg;
  2444                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2445  00064E  0EFE               	movlw	-2
  2446  000650  CFE3 F037          	movff	plusw1,btemp+10
  2447  000654  0EFF               	movlw	-1
  2448  000656  CFE3 F038          	movff	plusw1,btemp+11
  2449  00065A  0E71               	movlw	113
  2450  00065C  0237               	mulwf	(btemp+10)^0,c
  2451  00065E  CFF3 F035          	movff	prodl,btemp+8
  2452  000662  CFF4 F036          	movff	prodh,btemp+9
  2453  000666  0238               	mulwf	(btemp+11)^0,c
  2454  000668  50F3               	movf	prodl,w,c
  2455  00066A  2636               	addwf	(btemp+9)^0,f,c
  2456  00066C  0E23               	movlw	low (_READY_QUEUE+9)
  2457  00066E  2435               	addwf	(btemp+8)^0,w,c
  2458  000670  6ED9               	movwf	fsr2l,c
  2459  000672  0E01               	movlw	high (_READY_QUEUE+9)
  2460  000674  2036               	addwfc	(btemp+9)^0,w,c
  2461  000676  6EDA               	movwf	fsr2h,c
  2462  000678  50DF               	movf	indf2,w,c
  2463  00067A  6EE0               	movwf	224,c	;volatile
  2464                           
  2465                           ;kernel.c: 134:             STATUS = READY_QUEUE.QUEUE[task_running].task_context.STATUS
      +                          _reg;
  2466                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2467  00067C  0EFE               	movlw	-2
  2468  00067E  CFE3 F037          	movff	plusw1,btemp+10
  2469  000682  0EFF               	movlw	-1
  2470  000684  CFE3 F038          	movff	plusw1,btemp+11
  2471  000688  0E71               	movlw	113
  2472  00068A  0237               	mulwf	(btemp+10)^0,c
  2473  00068C  CFF3 F035          	movff	prodl,btemp+8
  2474  000690  CFF4 F036          	movff	prodh,btemp+9
  2475  000694  0238               	mulwf	(btemp+11)^0,c
  2476  000696  50F3               	movf	prodl,w,c
  2477  000698  2636               	addwf	(btemp+9)^0,f,c
  2478  00069A  0E1F               	movlw	low (_READY_QUEUE+5)
  2479  00069C  2435               	addwf	(btemp+8)^0,w,c
  2480  00069E  6ED9               	movwf	fsr2l,c
  2481  0006A0  0E01               	movlw	high (_READY_QUEUE+5)
  2482  0006A2  2036               	addwfc	(btemp+9)^0,w,c
  2483  0006A4  6EDA               	movwf	fsr2h,c
  2484  0006A6  50DF               	movf	indf2,w,c
  2485  0006A8  6ED8               	movwf	216,c	;volatile
  2486                           
  2487                           ;kernel.c: 135:             WREG = READY_QUEUE.QUEUE[task_running].task_context.WORK_reg
      +                          ;
  2488                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2489  0006AA  0EFE               	movlw	-2
  2490  0006AC  CFE3 F037          	movff	plusw1,btemp+10
  2491  0006B0  0EFF               	movlw	-1
  2492  0006B2  CFE3 F038          	movff	plusw1,btemp+11
  2493  0006B6  0E71               	movlw	113
  2494  0006B8  0237               	mulwf	(btemp+10)^0,c
  2495  0006BA  CFF3 F035          	movff	prodl,btemp+8
  2496  0006BE  CFF4 F036          	movff	prodh,btemp+9
  2497  0006C2  0238               	mulwf	(btemp+11)^0,c
  2498  0006C4  50F3               	movf	prodl,w,c
  2499  0006C6  2636               	addwf	(btemp+9)^0,f,c
  2500  0006C8  0E21               	movlw	low (_READY_QUEUE+7)
  2501  0006CA  2435               	addwf	(btemp+8)^0,w,c
  2502  0006CC  6ED9               	movwf	fsr2l,c
  2503  0006CE  0E01               	movlw	high (_READY_QUEUE+7)
  2504  0006D0  2036               	addwfc	(btemp+9)^0,w,c
  2505  0006D2  6EDA               	movwf	fsr2h,c
  2506  0006D4  50DF               	movf	indf2,w,c
  2507  0006D6  6E38               	movwf	(btemp+11)^0,c
  2508  0006D8  5038               	movf	(btemp+11)^0,w,c
  2509                           
  2510                           ;kernel.c: 136:             u_int stack_size = READY_QUEUE.QUEUE[task_running].task_cont
      +                          ext.stack_size;
  2511                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2512  0006DA  0EFE               	movlw	-2
  2513  0006DC  CFE3 F037          	movff	plusw1,btemp+10
  2514  0006E0  0EFF               	movlw	-1
  2515  0006E2  CFE3 F038          	movff	plusw1,btemp+11
  2516  0006E6  0E71               	movlw	113
  2517  0006E8  0237               	mulwf	(btemp+10)^0,c
  2518  0006EA  CFF3 F035          	movff	prodl,btemp+8
  2519  0006EE  CFF4 F036          	movff	prodh,btemp+9
  2520  0006F2  0238               	mulwf	(btemp+11)^0,c
  2521  0006F4  50F3               	movf	prodl,w,c
  2522  0006F6  2636               	addwf	(btemp+9)^0,f,c
  2523  0006F8  0E85               	movlw	low (_READY_QUEUE+107)
  2524  0006FA  2435               	addwf	(btemp+8)^0,w,c
  2525  0006FC  6ED9               	movwf	fsr2l,c
  2526  0006FE  0E01               	movlw	high (_READY_QUEUE+107)
  2527  000700  2036               	addwfc	(btemp+9)^0,w,c
  2528  000702  6EDA               	movwf	fsr2h,c
  2529  000704  CFDE F037          	movff	postinc2,btemp+10
  2530  000708  CFDD F038          	movff	postdec2,btemp+11
  2531                           
  2532                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2533  00070C  0EFC               	movlw	-4
  2534  00070E  C037  FFE3         	movff	btemp+10,plusw1
  2535  000712  0EFD               	movlw	-3
  2536  000714  C038  FFE3         	movff	btemp+11,plusw1
  2537                           
  2538                           ;kernel.c: 137:             while (stack_size) {
  2539  000718  EFD5  F003         	goto	l1766
  2540  00071C                     l187:
  2541  00071C  0005               	push		;# 
  2542  00071E                     
  2543                           ;kernel.c: 139:                 TOS = READY_QUEUE.QUEUE[task_running].task_context.STACK
      +                          _regs[stack_size-1];
  2544                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2545  00071E  0EFC               	movlw	-4
  2546  000720  CFE3 F037          	movff	plusw1,btemp+10
  2547  000724  0EFD               	movlw	-3
  2548  000726  CFE3 F038          	movff	plusw1,btemp+11
  2549  00072A  0E03               	movlw	3
  2550  00072C  0237               	mulwf	(btemp+10)^0,c
  2551  00072E  CFF3 F035          	movff	prodl,btemp+8
  2552  000732  CFF4 F036          	movff	prodh,btemp+9
  2553  000736  0238               	mulwf	(btemp+11)^0,c
  2554  000738  50F3               	movf	prodl,w,c
  2555  00073A  2636               	addwf	(btemp+9)^0,f,c
  2556                           
  2557                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2558  00073C  0EFE               	movlw	-2
  2559  00073E  CFE3 F037          	movff	plusw1,btemp+10
  2560  000742  0EFF               	movlw	-1
  2561  000744  CFE3 F038          	movff	plusw1,btemp+11
  2562  000748  0E71               	movlw	113
  2563  00074A  0237               	mulwf	(btemp+10)^0,c
  2564  00074C  CFF3 F033          	movff	prodl,btemp+6
  2565  000750  CFF4 F034          	movff	prodh,btemp+7
  2566  000754  0238               	mulwf	(btemp+11)^0,c
  2567  000756  50F3               	movf	prodl,w,c
  2568  000758  2634               	addwf	(btemp+7)^0,f,c
  2569  00075A  0E1A               	movlw	low _READY_QUEUE
  2570  00075C  6E37               	movwf	(btemp+10)^0,c
  2571  00075E  0E01               	movlw	high _READY_QUEUE
  2572  000760  6E38               	movwf	(btemp+11)^0,c
  2573  000762  0E08               	movlw	8
  2574  000764  2637               	addwf	(btemp+10)^0,f,c
  2575  000766  0E00               	movlw	0
  2576  000768  2238               	addwfc	(btemp+11)^0,f,c
  2577  00076A  5033               	movf	(btemp+6)^0,w,c
  2578  00076C  2637               	addwf	(btemp+10)^0,f,c
  2579  00076E  5034               	movf	(btemp+7)^0,w,c
  2580  000770  2238               	addwfc	(btemp+11)^0,f,c
  2581  000772  5035               	movf	(btemp+8)^0,w,c
  2582  000774  2437               	addwf	(btemp+10)^0,w,c
  2583  000776  6ED9               	movwf	fsr2l,c
  2584  000778  5036               	movf	(btemp+9)^0,w,c
  2585  00077A  2038               	addwfc	(btemp+11)^0,w,c
  2586  00077C  6EDA               	movwf	fsr2h,c
  2587  00077E  CFDE FFFD          	movff	postinc2,tosl	;volatile
  2588  000782  CFDE FFFE          	movff	postinc2,tosh	;volatile
  2589  000786  CFDD FFFF          	movff	postdec2,tosu	;volatile
  2590  00078A                     
  2591                           ;kernel.c: 140:                 stack_size--;
  2592                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2593  00078A  0EFC               	movlw	-4
  2594  00078C  CFE3 F02D          	movff	plusw1,btemp
  2595  000790  0E01               	movlw	1
  2596  000792  5E2D               	subwf	btemp^0,f,c
  2597  000794  0EFC               	movlw	-4
  2598  000796  C02D  FFE3         	movff	btemp,plusw1
  2599  00079A  0EFD               	movlw	-3
  2600  00079C  CFE3 F02D          	movff	plusw1,btemp
  2601  0007A0  0E00               	movlw	0
  2602  0007A2  5A2D               	subwfb	btemp^0,f,c
  2603  0007A4  0EFD               	movlw	-3
  2604  0007A6  C02D  FFE3         	movff	btemp,plusw1
  2605  0007AA                     l1766:
  2606                           
  2607                           ;kernel.c: 137:             while (stack_size) {
  2608                           ;stkvar	RESTORE_CONTEXT@stack_size @ sp[(-4)+0]
  2609  0007AA  0EFC               	movlw	-4
  2610  0007AC  CFE3 F02D          	movff	plusw1,btemp
  2611  0007B0  0EFD               	movlw	-3
  2612  0007B2  50E3               	movf	plusw1,w,c
  2613  0007B4  102D               	iorwf	btemp^0,w,c
  2614  0007B6  A4D8               	btfss	status,2,c
  2615  0007B8  EFE0  F003         	goto	u71_21
  2616  0007BC  EFE2  F003         	goto	u71_20
  2617  0007C0                     u71_21:
  2618  0007C0  EF8E  F003         	goto	l187
  2619  0007C4                     u71_20:
  2620  0007C4  EF03  F004         	goto	l1770
  2621  0007C8                     l185:
  2622  0007C8  0005               	push		;# 
  2623  0007CA                     
  2624                           ;kernel.c: 145:             TOS = READY_QUEUE.QUEUE[task_running].task_func;
  2625                           ;stkvar	RESTORE_CONTEXT@task_running @ sp[(-4)+2]
  2626  0007CA  0EFE               	movlw	-2
  2627  0007CC  CFE3 F037          	movff	plusw1,btemp+10
  2628  0007D0  0EFF               	movlw	-1
  2629  0007D2  CFE3 F038          	movff	plusw1,btemp+11
  2630  0007D6  0E71               	movlw	113
  2631  0007D8  0237               	mulwf	(btemp+10)^0,c
  2632  0007DA  CFF3 F035          	movff	prodl,btemp+8
  2633  0007DE  CFF4 F036          	movff	prodh,btemp+9
  2634  0007E2  0238               	mulwf	(btemp+11)^0,c
  2635  0007E4  50F3               	movf	prodl,w,c
  2636  0007E6  2636               	addwf	(btemp+9)^0,f,c
  2637  0007E8  0E87               	movlw	low (_READY_QUEUE+109)
  2638  0007EA  2435               	addwf	(btemp+8)^0,w,c
  2639  0007EC  6ED9               	movwf	fsr2l,c
  2640  0007EE  0E01               	movlw	high (_READY_QUEUE+109)
  2641  0007F0  2036               	addwfc	(btemp+9)^0,w,c
  2642  0007F2  6EDA               	movwf	fsr2h,c
  2643  0007F4  CFDE F037          	movff	postinc2,btemp+10
  2644  0007F8  CFDD F038          	movff	postdec2,btemp+11
  2645  0007FC  C037  FFFD         	movff	btemp+10,tosl	;volatile
  2646  000800  C038  FFFE         	movff	btemp+11,tosh	;volatile
  2647  000804  6AFF               	clrf	255,c	;volatile
  2648  000806                     l1770:
  2649                           
  2650                           ;kernel.c: 147:     (INTCONbits.GIE = 1);
  2651  000806  8EF2               	bsf	242,7,c	;volatile
  2652  000808                     
  2653                           ; _RESTORE_CONTEXT: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  2654  000808  52E5               	movf	postdec1,f,c
  2655  00080A  52E5               	movf	postdec1,f,c
  2656  00080C  52E5               	movf	postdec1,f,c
  2657  00080E  52E5               	movf	postdec1,f,c
  2658  000810  0012               	return		;funcret
  2659  000812                     __end_of_RESTORE_CONTEXT:
  2660                           	callstack 0
  2661                           
  2662 ;; *************** function _scheduler *****************
  2663 ;; Defined at:
  2664 ;;		line 13 in file "scheduler.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  2  [STACK] unsigned int 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2678 ;;      Params:         0       0       0       0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0
  2681 ;;      Totals:         0       0       0       0       0       0       0
  2682 ;;Total ram usage:        0 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    7
  2685 ;; This function calls:
  2686 ;;		_ROUND_ROBIN_sched
  2687 ;; This function is called by:
  2688 ;;		_RESTORE_CONTEXT
  2689 ;; This function uses a reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text18
  2693  0015AA                     __ptext18:
  2694                           	callstack 0
  2695  0015AA                     _scheduler:
  2696                           	callstack 10
  2697  0015AA                     
  2698                           ;scheduler.c: 16:    return ROUND_ROBIN_sched();
  2699  0015AA  EC2A  F006         	call	_ROUND_ROBIN_sched	;wreg free
  2700  0015AE                     
  2701                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2702  0015AE  0012               	return		;funcret
  2703  0015B0                     __end_of_scheduler:
  2704                           	callstack 0
  2705                           
  2706 ;; *************** function _ROUND_ROBIN_sched *****************
  2707 ;; Defined at:
  2708 ;;		line 22 in file "scheduler.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  task_selecte    2  [STACK] unsigned int 
  2713 ;;  try             2  [STACK] unsigned int 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  2  [STACK] unsigned int 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2723 ;;      Params:         0       0       0       0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0
  2726 ;;      Totals:         0       0       0       0       0       0       0
  2727 ;;Total ram usage:        0 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    6
  2730 ;; This function calls:
  2731 ;;		___lwmod
  2732 ;; This function is called by:
  2733 ;;		_scheduler
  2734 ;; This function uses a reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text19
  2738  000C54                     __ptext19:
  2739                           	callstack 0
  2740  000C54                     _ROUND_ROBIN_sched:
  2741                           	callstack 0
  2742                           
  2743                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2744  000C54  52E6               	movf	postinc1,f,c
  2745  000C56  52E6               	movf	postinc1,f,c
  2746  000C58  52E6               	movf	postinc1,f,c
  2747  000C5A  52E6               	movf	postinc1,f,c
  2748  000C5C                     
  2749                           ;scheduler.c: 24:    u_int task_selected = READY_QUEUE.task_running, try = 0;
  2750                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2751  000C5C  0EFC               	movlw	-4
  2752  000C5E  C3C0  FFE3         	movff	_READY_QUEUE+678,plusw1
  2753  000C62  0EFD               	movlw	-3
  2754  000C64  C3C1  FFE3         	movff	_READY_QUEUE+679,plusw1
  2755                           
  2756                           ;stkvar	ROUND_ROBIN_sched@try @ sp[(-4)+2]
  2757  000C68  0EFE               	movlw	-2
  2758  000C6A  6AE3               	clrf	plusw1,c
  2759  000C6C  0EFF               	movlw	-1
  2760  000C6E  6AE3               	clrf	plusw1,c
  2761  000C70                     l1640:
  2762                           
  2763                           ;scheduler.c: 27:       task_selected = (task_selected+1) % READY_QUEUE.nr_of_tasks;
  2764  000C70  EE23  F0C2         	lfsr	2,_READY_QUEUE+680
  2765  000C74  CFDE F037          	movff	postinc2,btemp+10
  2766  000C78  CFDD F038          	movff	postdec2,btemp+11
  2767  000C7C  C037  FFE6         	movff	btemp+10,postinc1
  2768  000C80  C038  FFE6         	movff	btemp+11,postinc1
  2769                           
  2770                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-6)+0]
  2771  000C84  0EFA               	movlw	-6
  2772  000C86  50E3               	movf	plusw1,w,c
  2773  000C88  0F01               	addlw	1
  2774  000C8A  6E37               	movwf	(btemp+10)^0,c
  2775  000C8C  0EFB               	movlw	-5
  2776  000C8E  CFE3 F038          	movff	plusw1,btemp+11
  2777  000C92  0E00               	movlw	0
  2778  000C94  2238               	addwfc	(btemp+11)^0,f,c
  2779  000C96  C037  FFE6         	movff	btemp+10,postinc1
  2780  000C9A  C038  FFE6         	movff	btemp+11,postinc1
  2781  000C9E  ECD4  F007         	call	___lwmod	;wreg free
  2782                           
  2783                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2784  000CA2  0EFC               	movlw	-4
  2785  000CA4  C02D  FFE3         	movff	btemp,plusw1
  2786  000CA8  0EFD               	movlw	-3
  2787  000CAA  C02E  FFE3         	movff	btemp+1,plusw1
  2788  000CAE                     
  2789                           ;scheduler.c: 28:       if (try == READY_QUEUE.nr_of_tasks) {
  2790                           ;stkvar	ROUND_ROBIN_sched@try @ sp[(-4)+2]
  2791  000CAE  EE23  F0C2         	lfsr	2,_READY_QUEUE+680
  2792  000CB2  0EFE               	movlw	-2
  2793  000CB4  50E3               	movf	plusw1,w,c
  2794  000CB6  18DE               	xorwf	postinc2,w,c
  2795  000CB8  E108               	bnz	u59_21
  2796  000CBA  0EFF               	movlw	-1
  2797  000CBC  50E3               	movf	plusw1,w,c
  2798  000CBE  18DE               	xorwf	postinc2,w,c
  2799  000CC0  A4D8               	btfss	status,2,c
  2800  000CC2  EF65  F006         	goto	u59_21
  2801  000CC6  EF67  F006         	goto	u59_20
  2802  000CCA                     u59_21:
  2803  000CCA  EF6D  F006         	goto	l1648
  2804  000CCE                     u59_20:
  2805  000CCE                     
  2806                           ;scheduler.c: 29:          return 0;
  2807  000CCE  0E00               	movlw	0
  2808  000CD0  6E2D               	movwf	btemp^0,c
  2809  000CD2  0E00               	movlw	0
  2810  000CD4  6E2E               	movwf	(btemp+1)^0,c
  2811  000CD6  EFC0  F006         	goto	l51
  2812  000CDA                     l1648:
  2813                           
  2814                           ;scheduler.c: 31:       try++;
  2815                           ;stkvar	ROUND_ROBIN_sched@try @ sp[(-4)+2]
  2816  000CDA  0EFE               	movlw	-2
  2817  000CDC  50E3               	movf	plusw1,w,c
  2818  000CDE  0F01               	addlw	1
  2819  000CE0  6E2D               	movwf	btemp^0,c
  2820  000CE2  0EFE               	movlw	-2
  2821  000CE4  C02D  FFE3         	movff	btemp,plusw1
  2822  000CE8  6A2D               	clrf	btemp^0,c
  2823  000CEA  0EFF               	movlw	-1
  2824  000CEC  50E3               	movf	plusw1,w,c
  2825  000CEE  202D               	addwfc	btemp^0,w,c
  2826  000CF0  6E2D               	movwf	btemp^0,c
  2827  000CF2  0EFF               	movlw	-1
  2828  000CF4  C02D  FFE3         	movff	btemp,plusw1
  2829  000CF8                     
  2830                           ;scheduler.c: 32:    } while (READY_QUEUE.QUEUE[task_selected].task_state != READY ||
  2831                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2832  000CF8  0EFC               	movlw	-4
  2833  000CFA  CFE3 F037          	movff	plusw1,btemp+10
  2834  000CFE  0EFD               	movlw	-3
  2835  000D00  CFE3 F038          	movff	plusw1,btemp+11
  2836  000D04  0E71               	movlw	113
  2837  000D06  0237               	mulwf	(btemp+10)^0,c
  2838  000D08  CFF3 F035          	movff	prodl,btemp+8
  2839  000D0C  CFF4 F036          	movff	prodh,btemp+9
  2840  000D10  0238               	mulwf	(btemp+11)^0,c
  2841  000D12  50F3               	movf	prodl,w,c
  2842  000D14  2636               	addwf	(btemp+9)^0,f,c
  2843  000D16  0E1E               	movlw	low (_READY_QUEUE+4)
  2844  000D18  2435               	addwf	(btemp+8)^0,w,c
  2845  000D1A  6ED9               	movwf	fsr2l,c
  2846  000D1C  0E01               	movlw	high (_READY_QUEUE+4)
  2847  000D1E  2036               	addwfc	(btemp+9)^0,w,c
  2848  000D20  6EDA               	movwf	fsr2h,c
  2849  000D22  50DF               	movf	indf2,w,c
  2850  000D24  A4D8               	btfss	status,2,c
  2851  000D26  EF97  F006         	goto	u60_21
  2852  000D2A  EF99  F006         	goto	u60_20
  2853  000D2E                     u60_21:
  2854  000D2E  EF38  F006         	goto	l1640
  2855  000D32                     u60_20:
  2856  000D32                     
  2857                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2858  000D32  0EFC               	movlw	-4
  2859  000D34  CFE3 F037          	movff	plusw1,btemp+10
  2860  000D38  0EFD               	movlw	-3
  2861  000D3A  CFE3 F038          	movff	plusw1,btemp+11
  2862  000D3E  0E71               	movlw	113
  2863  000D40  0237               	mulwf	(btemp+10)^0,c
  2864  000D42  CFF3 F035          	movff	prodl,btemp+8
  2865  000D46  CFF4 F036          	movff	prodh,btemp+9
  2866  000D4A  0238               	mulwf	(btemp+11)^0,c
  2867  000D4C  50F3               	movf	prodl,w,c
  2868  000D4E  2636               	addwf	(btemp+9)^0,f,c
  2869  000D50  0E87               	movlw	low (_READY_QUEUE+109)
  2870  000D52  2435               	addwf	(btemp+8)^0,w,c
  2871  000D54  6ED9               	movwf	fsr2l,c
  2872  000D56  0E01               	movlw	high (_READY_QUEUE+109)
  2873  000D58  2036               	addwfc	(btemp+9)^0,w,c
  2874  000D5A  6EDA               	movwf	fsr2h,c
  2875  000D5C  0EE4               	movlw	low _idle
  2876  000D5E  18DE               	xorwf	postinc2,w,c
  2877  000D60  E109               	bnz	u61_20
  2878  000D62  0E14               	movlw	high _idle
  2879  000D64  18DE               	xorwf	postinc2,w,c
  2880  000D66  B4D8               	btfsc	status,2,c
  2881  000D68  EFB8  F006         	goto	u61_21
  2882  000D6C  EFBA  F006         	goto	u61_20
  2883  000D70                     u61_21:
  2884  000D70  EF38  F006         	goto	l1640
  2885  000D74                     u61_20:
  2886  000D74                     
  2887                           ;scheduler.c: 35:    return task_selected;
  2888                           ;stkvar	ROUND_ROBIN_sched@task_selected @ sp[(-4)+0]
  2889  000D74  0EFC               	movlw	-4
  2890  000D76  CFE3 F02D          	movff	plusw1,btemp
  2891  000D7A  0EFD               	movlw	-3
  2892  000D7C  CFE3 F02E          	movff	plusw1,btemp+1
  2893  000D80                     l51:
  2894                           
  2895                           ; _ROUND_ROBIN_sched: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  2896  000D80  52E5               	movf	postdec1,f,c
  2897  000D82  52E5               	movf	postdec1,f,c
  2898  000D84  52E5               	movf	postdec1,f,c
  2899  000D86  52E5               	movf	postdec1,f,c
  2900  000D88  0012               	return		;funcret
  2901  000D8A                     __end_of_ROUND_ROBIN_sched:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _sem_post *****************
  2905 ;; Defined at:
  2906 ;;		line 26 in file "semaphore.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  s               2  [STACK] PTR struct semaphore
  2909 ;;		 -> sem_temp_r(18), sem_temp_w(18), pipe_temperature(26), 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1  [STACK] void 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2921 ;;      Params:         0       0       0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    6
  2928 ;; This function calls:
  2929 ;;		___lwmod
  2930 ;; This function is called by:
  2931 ;;		_pipe_read
  2932 ;;		_pipe_write
  2933 ;;		_thermostat_sensing_2
  2934 ;;		_ac_controller_2
  2935 ;; This function uses a reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text20
  2939  000D8A                     __ptext20:
  2940                           	callstack 0
  2941  000D8A                     _sem_post:
  2942                           	callstack 19
  2943  000D8A                     
  2944                           ;semaphore.c: 27:     (INTCONbits.GIE = 0);
  2945  000D8A  9EF2               	bcf	242,7,c	;volatile
  2946  000D8C                     
  2947                           ;semaphore.c: 28:     s->s_count++;
  2948                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2949  000D8C  0EFE               	movlw	-2
  2950  000D8E  CFE3 FFD9          	movff	plusw1,fsr2l
  2951  000D92  0EFF               	movlw	-1
  2952  000D94  CFE3 FFDA          	movff	plusw1,fsr2h
  2953  000D98  2ADE               	incf	postinc2,f,c
  2954  000D9A  0E00               	movlw	0
  2955  000D9C  22DD               	addwfc	postdec2,f,c
  2956  000D9E                     
  2957                           ;semaphore.c: 29:     if(s->s_count <= 0) {
  2958                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2959  000D9E  0EFE               	movlw	-2
  2960  000DA0  CFE3 FFD9          	movff	plusw1,fsr2l
  2961  000DA4  0EFF               	movlw	-1
  2962  000DA6  CFE3 FFDA          	movff	plusw1,fsr2h
  2963  000DAA  0E01               	movlw	1
  2964  000DAC  BEDB               	btfsc	plusw2,7,c
  2965  000DAE  EFE4  F006         	goto	u87_20
  2966  000DB2  0E01               	movlw	1
  2967  000DB4  50DB               	movf	plusw2,w,c
  2968  000DB6  E106               	bnz	u87_21
  2969  000DB8  04DE               	decf	postinc2,w,c
  2970  000DBA  B0D8               	btfsc	status,0,c
  2971  000DBC  EFE2  F006         	goto	u87_21
  2972  000DC0  EFE4  F006         	goto	u87_20
  2973  000DC4                     u87_21:
  2974  000DC4  EF57  F007         	goto	l1908
  2975  000DC8                     u87_20:
  2976  000DC8                     
  2977                           ;semaphore.c: 31:         READY_QUEUE.QUEUE[s->s_queue.TASKS[s->s_queue.queue_post_pos]]
      +                          .task_state = READY;
  2978                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2979  000DC8  0EFE               	movlw	-2
  2980  000DCA  CFE3 F037          	movff	plusw1,btemp+10
  2981  000DCE  0EFF               	movlw	-1
  2982  000DD0  CFE3 F038          	movff	plusw1,btemp+11
  2983  000DD4  0E10               	movlw	16
  2984  000DD6  2437               	addwf	(btemp+10)^0,w,c
  2985  000DD8  6ED9               	movwf	fsr2l,c
  2986  000DDA  0E00               	movlw	0
  2987  000DDC  2038               	addwfc	(btemp+11)^0,w,c
  2988  000DDE  6EDA               	movwf	fsr2h,c
  2989  000DE0  CFDE F037          	movff	postinc2,btemp+10
  2990  000DE4  CFDD F038          	movff	postdec2,btemp+11
  2991  000DE8  90D8               	bcf	status,0,c
  2992  000DEA  3437               	rlcf	(btemp+10)^0,w,c
  2993  000DEC  6E35               	movwf	(btemp+8)^0,c
  2994  000DEE  3438               	rlcf	(btemp+11)^0,w,c
  2995  000DF0  6E36               	movwf	(btemp+9)^0,c
  2996                           
  2997                           ;stkvar	sem_post@s @ sp[(0)+-2]
  2998  000DF2  0EFE               	movlw	-2
  2999  000DF4  50E3               	movf	plusw1,w,c
  3000  000DF6  2635               	addwf	(btemp+8)^0,f,c
  3001  000DF8  0EFF               	movlw	-1
  3002  000DFA  50E3               	movf	plusw1,w,c
  3003  000DFC  2236               	addwfc	(btemp+9)^0,f,c
  3004  000DFE  0E02               	movlw	2
  3005  000E00  2435               	addwf	(btemp+8)^0,w,c
  3006  000E02  6ED9               	movwf	fsr2l,c
  3007  000E04  0E00               	movlw	0
  3008  000E06  2036               	addwfc	(btemp+9)^0,w,c
  3009  000E08  6EDA               	movwf	fsr2h,c
  3010  000E0A  CFDE F037          	movff	postinc2,btemp+10
  3011  000E0E  CFDD F038          	movff	postdec2,btemp+11
  3012  000E12  0E71               	movlw	113
  3013  000E14  0237               	mulwf	(btemp+10)^0,c
  3014  000E16  CFF3 F035          	movff	prodl,btemp+8
  3015  000E1A  CFF4 F036          	movff	prodh,btemp+9
  3016  000E1E  0238               	mulwf	(btemp+11)^0,c
  3017  000E20  50F3               	movf	prodl,w,c
  3018  000E22  2636               	addwf	(btemp+9)^0,f,c
  3019  000E24  0E1E               	movlw	low (_READY_QUEUE+4)
  3020  000E26  2435               	addwf	(btemp+8)^0,w,c
  3021  000E28  6ED9               	movwf	fsr2l,c
  3022  000E2A  0E01               	movlw	high (_READY_QUEUE+4)
  3023  000E2C  2036               	addwfc	(btemp+9)^0,w,c
  3024  000E2E  6EDA               	movwf	fsr2h,c
  3025  000E30  0E00               	movlw	0
  3026  000E32  6EDF               	movwf	indf2,c
  3027  000E34                     
  3028                           ;semaphore.c: 32:         s->s_queue.queue_post_pos = (s->s_queue.queue_post_pos+1)%5;
  3029  000E34  0E05               	movlw	5
  3030  000E36  6EE6               	movwf	postinc1,c
  3031  000E38  0E00               	movlw	0
  3032  000E3A  6EE6               	movwf	postinc1,c
  3033                           
  3034                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  3035  000E3C  0EFC               	movlw	-4
  3036  000E3E  CFE3 F037          	movff	plusw1,btemp+10
  3037  000E42  0EFD               	movlw	-3
  3038  000E44  CFE3 F038          	movff	plusw1,btemp+11
  3039  000E48  0E10               	movlw	16
  3040  000E4A  2437               	addwf	(btemp+10)^0,w,c
  3041  000E4C  6ED9               	movwf	fsr2l,c
  3042  000E4E  0E00               	movlw	0
  3043  000E50  2038               	addwfc	(btemp+11)^0,w,c
  3044  000E52  6EDA               	movwf	fsr2h,c
  3045  000E54  CFDE F037          	movff	postinc2,btemp+10
  3046  000E58  CFDD F038          	movff	postdec2,btemp+11
  3047  000E5C  0E01               	movlw	1
  3048  000E5E  2637               	addwf	(btemp+10)^0,f,c
  3049  000E60  0E00               	movlw	0
  3050  000E62  2238               	addwfc	(btemp+11)^0,f,c
  3051  000E64  C037  FFE6         	movff	btemp+10,postinc1
  3052  000E68  C038  FFE6         	movff	btemp+11,postinc1
  3053  000E6C  ECD4  F007         	call	___lwmod	;wreg free
  3054                           
  3055                           ;stkvar	sem_post@s @ sp[(0)+-2]
  3056  000E70  0EFE               	movlw	-2
  3057  000E72  CFE3 F037          	movff	plusw1,btemp+10
  3058  000E76  0EFF               	movlw	-1
  3059  000E78  CFE3 F038          	movff	plusw1,btemp+11
  3060  000E7C  0E10               	movlw	16
  3061  000E7E  2437               	addwf	(btemp+10)^0,w,c
  3062  000E80  6ED9               	movwf	fsr2l,c
  3063  000E82  0E00               	movlw	0
  3064  000E84  2038               	addwfc	(btemp+11)^0,w,c
  3065  000E86  6EDA               	movwf	fsr2h,c
  3066  000E88  C02D  FFDE         	movff	btemp,postinc2
  3067  000E8C  C02E  FFDD         	movff	btemp+1,postdec2
  3068  000E90                     
  3069                           ;semaphore.c: 33:         s->s_queue.queue_size--;
  3070                           ;stkvar	sem_post@s @ sp[(0)+-2]
  3071  000E90  0EFE               	movlw	-2
  3072  000E92  CFE3 F037          	movff	plusw1,btemp+10
  3073  000E96  0EFF               	movlw	-1
  3074  000E98  CFE3 F038          	movff	plusw1,btemp+11
  3075  000E9C  0E0C               	movlw	12
  3076  000E9E  2437               	addwf	(btemp+10)^0,w,c
  3077  000EA0  6ED9               	movwf	fsr2l,c
  3078  000EA2  0E00               	movlw	0
  3079  000EA4  2038               	addwfc	(btemp+11)^0,w,c
  3080  000EA6  6EDA               	movwf	fsr2h,c
  3081  000EA8  06DE               	decf	postinc2,f,c
  3082  000EAA  0E00               	movlw	0
  3083  000EAC  5ADD               	subwfb	postdec2,f,c
  3084  000EAE                     l1908:
  3085                           
  3086                           ;semaphore.c: 35:     (INTCONbits.GIE = 1);
  3087  000EAE  8EF2               	bsf	242,7,c	;volatile
  3088  000EB0                     
  3089                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3090  000EB0  52E5               	movf	postdec1,f,c
  3091  000EB2  52E5               	movf	postdec1,f,c
  3092  000EB4  0012               	return		;funcret
  3093  000EB6                     __end_of_sem_post:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function ___lwmod *****************
  3097 ;; Defined at:
  3098 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwmod.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  dividend        2  [STACK] unsigned int 
  3101 ;;  divisor         2  [STACK] unsigned int 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  counter         1  [STACK] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  2  [STACK] unsigned int 
  3106 ;; Registers used:
  3107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3113 ;;      Params:         0       0       0       0       0       0       0
  3114 ;;      Locals:         0       0       0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0
  3116 ;;      Totals:         0       0       0       0       0       0       0
  3117 ;;Total ram usage:        0 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    5
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_ROUND_ROBIN_sched
  3124 ;;		_sem_wait
  3125 ;;		_sem_post
  3126 ;;		_PRIORITY_sched
  3127 ;; This function uses a reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text21
  3131  000FA8                     __ptext21:
  3132                           	callstack 0
  3133  000FA8                     ___lwmod:
  3134                           	callstack 0
  3135                           
  3136                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3137  000FA8  52E6               	movf	postinc1,f,c
  3138  000FAA                     
  3139                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3140  000FAA  0EFB               	movlw	-5
  3141  000FAC  CFE3 F02D          	movff	plusw1,btemp
  3142  000FB0  0EFC               	movlw	-4
  3143  000FB2  50E3               	movf	plusw1,w,c
  3144  000FB4  102D               	iorwf	btemp^0,w,c
  3145  000FB6  B4D8               	btfsc	status,2,c
  3146  000FB8  EFE0  F007         	goto	u55_21
  3147  000FBC  EFE2  F007         	goto	u55_20
  3148  000FC0                     u55_21:
  3149  000FC0  EF3D  F008         	goto	l1634
  3150  000FC4                     u55_20:
  3151  000FC4                     
  3152                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3153  000FC4  0EFF               	movlw	-1
  3154  000FC6  6AE3               	clrf	plusw1,c
  3155  000FC8  2AE3               	incf	plusw1,f,c
  3156  000FCA  EFF8  F007         	goto	l1624
  3157  000FCE                     l1620:
  3158                           
  3159                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3160  000FCE  0EFB               	movlw	-5
  3161  000FD0  50E3               	movf	plusw1,w,c
  3162  000FD2  90D8               	bcf	status,0,c
  3163  000FD4  34E8               	rlcf	wreg,w,c
  3164  000FD6  6E2D               	movwf	btemp^0,c
  3165  000FD8  0EFB               	movlw	-5
  3166  000FDA  C02D  FFE3         	movff	btemp,plusw1
  3167  000FDE  0EFC               	movlw	-4
  3168  000FE0  50E3               	movf	plusw1,w,c
  3169  000FE2  34E8               	rlcf	wreg,w,c
  3170  000FE4  6E2D               	movwf	btemp^0,c
  3171  000FE6  0EFC               	movlw	-4
  3172  000FE8  C02D  FFE3         	movff	btemp,plusw1
  3173  000FEC                     
  3174                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3175  000FEC  0EFF               	movlw	-1
  3176  000FEE  2AE3               	incf	plusw1,f,c
  3177  000FF0                     l1624:
  3178                           
  3179                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3180  000FF0  0EFC               	movlw	-4
  3181  000FF2  AEE3               	btfss	plusw1,7,c
  3182  000FF4  EFFE  F007         	goto	u56_21
  3183  000FF8  EF00  F008         	goto	u56_20
  3184  000FFC                     u56_21:
  3185  000FFC  EFE7  F007         	goto	l1620
  3186  001000                     u56_20:
  3187  001000                     l1626:
  3188                           
  3189                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3190  001000  0EFB               	movlw	-5
  3191  001002  CFE3 F037          	movff	plusw1,btemp+10
  3192  001006  0EFC               	movlw	-4
  3193  001008  CFE3 F038          	movff	plusw1,btemp+11
  3194                           
  3195                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3196  00100C  0EFD               	movlw	-3
  3197  00100E  CFE3 F035          	movff	plusw1,btemp+8
  3198  001012  0EFE               	movlw	-2
  3199  001014  CFE3 F036          	movff	plusw1,btemp+9
  3200  001018  5037               	movf	(btemp+10)^0,w,c
  3201  00101A  5C35               	subwf	(btemp+8)^0,w,c
  3202  00101C  5038               	movf	(btemp+11)^0,w,c
  3203  00101E  5836               	subwfb	(btemp+9)^0,w,c
  3204  001020  A0D8               	btfss	status,0,c
  3205  001022  EF15  F008         	goto	u57_21
  3206  001026  EF17  F008         	goto	u57_20
  3207  00102A                     u57_21:
  3208  00102A  EF29  F008         	goto	l1630
  3209  00102E                     u57_20:
  3210  00102E                     
  3211                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3212                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3213  00102E  0EFD               	movlw	-3
  3214  001030  50E3               	movf	plusw1,w,c
  3215  001032  6E2D               	movwf	btemp^0,c
  3216  001034  0EFB               	movlw	-5
  3217  001036  50E3               	movf	plusw1,w,c
  3218  001038  5E2D               	subwf	btemp^0,f,c
  3219  00103A  0EFD               	movlw	-3
  3220  00103C  C02D  FFE3         	movff	btemp,plusw1
  3221  001040  0EFE               	movlw	-2
  3222  001042  50E3               	movf	plusw1,w,c
  3223  001044  6E2D               	movwf	btemp^0,c
  3224  001046  0EFC               	movlw	-4
  3225  001048  50E3               	movf	plusw1,w,c
  3226  00104A  5A2D               	subwfb	btemp^0,f,c
  3227  00104C  0EFE               	movlw	-2
  3228  00104E  C02D  FFE3         	movff	btemp,plusw1
  3229  001052                     l1630:
  3230                           
  3231                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3232  001052  90D8               	bcf	status,0,c
  3233  001054  0EFC               	movlw	-4
  3234  001056  32E3               	rrcf	plusw1,f,c
  3235  001058  0EFB               	movlw	-5
  3236  00105A  32E3               	rrcf	plusw1,f,c
  3237  00105C                     
  3238                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3239  00105C  0EFF               	movlw	-1
  3240  00105E  50E3               	movf	plusw1,w,c
  3241  001060  6E2D               	movwf	btemp^0,c
  3242  001062  0E01               	movlw	1
  3243  001064  5E2D               	subwf	btemp^0,f,c
  3244  001066  0EFF               	movlw	-1
  3245  001068  C02D  FFE3         	movff	btemp,plusw1
  3246  00106C  A4D8               	btfss	status,2,c
  3247  00106E  EF3B  F008         	goto	u58_21
  3248  001072  EF3D  F008         	goto	u58_20
  3249  001076                     u58_21:
  3250  001076  EF00  F008         	goto	l1626
  3251  00107A                     u58_20:
  3252  00107A                     l1634:
  3253                           
  3254                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3255  00107A  0EFD               	movlw	-3
  3256  00107C  CFE3 F02D          	movff	plusw1,btemp
  3257  001080  0EFE               	movlw	-2
  3258  001082  CFE3 F02E          	movff	plusw1,btemp+1
  3259  001086                     
  3260                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  3261  001086  0EFB               	movlw	251
  3262  001088  26E1               	addwf	fsr1l,f,c
  3263  00108A  0EFF               	movlw	255
  3264  00108C  22E2               	addwfc	fsr1h,f,c
  3265  00108E  0012               	return		;funcret
  3266  001090                     __end_of___lwmod:
  3267                           	callstack 0
  3268                           
  3269 ;; *************** function _sem_get_value *****************
  3270 ;; Defined at:
  3271 ;;		line 38 in file "semaphore.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  s              18  [STACK] struct semaphore
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  2  [STACK] int 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3285 ;;      Params:         0       0       0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0
  3288 ;;      Totals:         0       0       0       0       0       0       0
  3289 ;;Total ram usage:        0 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    5
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_pipe_read
  3296 ;;		_pipe_write
  3297 ;; This function uses a reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text22
  3301  00157C                     __ptext22:
  3302                           	callstack 0
  3303  00157C                     _sem_get_value:
  3304                           	callstack 19
  3305  00157C                     
  3306                           ;semaphore.c: 39:     return s.s_count;
  3307                           ;stkvar	sem_get_value@s @ sp[(0)+-18]
  3308  00157C  0EEE               	movlw	-18
  3309  00157E  CFE3 F02D          	movff	plusw1,btemp
  3310  001582  0EEF               	movlw	-17
  3311  001584  CFE3 F02E          	movff	plusw1,btemp+1
  3312  001588                     
  3313                           ; _sem_get_value: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18
      +                          , argsize = 18, vargsize = 0
  3314  001588  0EEE               	movlw	238
  3315  00158A  26E1               	addwf	fsr1l,f,c
  3316  00158C  0EFF               	movlw	255
  3317  00158E  22E2               	addwfc	fsr1h,f,c
  3318  001590  0012               	return		;funcret
  3319  001592                     __end_of_sem_get_value:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _ac_controller_1 *****************
  3323 ;; Defined at:
  3324 ;;		line 31 in file "user_tasks.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  room_tempera    2  [STACK] int 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1  [STACK] void 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3338 ;;      Params:         0       0       0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:   11
  3345 ;; This function calls:
  3346 ;;		_pipe_read
  3347 ;;		_turn_off_ac
  3348 ;;		_turn_on_ac
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text23
  3355  0011B6                     __ptext23:
  3356                           	callstack 0
  3357  0011B6                     _ac_controller_1:
  3358                           	callstack 0
  3359                           
  3360                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3361  0011B6  52E6               	movf	postinc1,f,c
  3362  0011B8  52E6               	movf	postinc1,f,c
  3363  0011BA                     l228:
  3364  0011BA                     
  3365                           ;user_tasks.c: 35:       pipe_read(&pipe_temperature, &room_temperature);
  3366                           ;stkvar	ac_controller_1@room_temperature @ sp[(-2)+0]
  3367  0011BA  0EFE               	movlw	254
  3368  0011BC  24E1               	addwf	fsr1l,w,c
  3369  0011BE  6E2D               	movwf	btemp^0,c
  3370  0011C0  0EFF               	movlw	255
  3371  0011C2  20E2               	addwfc	fsr1h,w,c
  3372  0011C4  6E2E               	movwf	(btemp+1)^0,c
  3373  0011C6  C02D  FFE6         	movff	btemp,postinc1
  3374  0011CA  C02E  FFE6         	movff	btemp+1,postinc1
  3375  0011CE  0E00               	movlw	low _pipe_temperature
  3376  0011D0  6EE6               	movwf	postinc1,c
  3377  0011D2  0E01               	movlw	high _pipe_temperature
  3378  0011D4  6EE6               	movwf	postinc1,c
  3379  0011D6  EC79  F005         	call	_pipe_read	;wreg free
  3380  0011DA                     
  3381                           ;user_tasks.c: 37:       if(room_temperature < (32 - 2)){
  3382                           ;stkvar	ac_controller_1@room_temperature @ sp[(-2)+0]
  3383  0011DA  0EFF               	movlw	-1
  3384  0011DC  BEE3               	btfsc	plusw1,7,c
  3385  0011DE  EF00  F009         	goto	u104_20
  3386  0011E2  0EFF               	movlw	-1
  3387  0011E4  50E3               	movf	plusw1,w,c
  3388  0011E6  E10A               	bnz	u104_21
  3389  0011E8  0EFE               	movlw	-2
  3390  0011EA  CFE3 F02D          	movff	plusw1,btemp
  3391  0011EE  0E1E               	movlw	30
  3392  0011F0  5E2D               	subwf	btemp^0,f,c
  3393  0011F2  B0D8               	btfsc	status,0,c
  3394  0011F4  EFFE  F008         	goto	u104_21
  3395  0011F8  EF00  F009         	goto	u104_20
  3396  0011FC                     u104_21:
  3397  0011FC  EF04  F009         	goto	l2100
  3398  001200                     u104_20:
  3399  001200                     
  3400                           ;user_tasks.c: 38:          turn_off_ac();
  3401  001200  ECDA  F00A         	call	_turn_off_ac	;wreg free
  3402                           
  3403                           ;user_tasks.c: 39:       }else if(room_temperature > (32 + 2)){
  3404  001204  EFDD  F008         	goto	l228
  3405  001208                     l2100:
  3406                           
  3407                           ;stkvar	ac_controller_1@room_temperature @ sp[(-2)+0]
  3408  001208  0EFF               	movlw	-1
  3409  00120A  BEE3               	btfsc	plusw1,7,c
  3410  00120C  EF15  F009         	goto	u105_21
  3411  001210  0EFF               	movlw	-1
  3412  001212  50E3               	movf	plusw1,w,c
  3413  001214  E10C               	bnz	u105_20
  3414  001216  0EFE               	movlw	-2
  3415  001218  CFE3 F02D          	movff	plusw1,btemp
  3416  00121C  0E23               	movlw	35
  3417  00121E  5E2D               	subwf	btemp^0,f,c
  3418  001220  A0D8               	btfss	status,0,c
  3419  001222  EF15  F009         	goto	u105_21
  3420  001226  EF17  F009         	goto	u105_20
  3421  00122A                     u105_21:
  3422  00122A  EFDD  F008         	goto	l228
  3423  00122E                     u105_20:
  3424  00122E                     
  3425                           ;user_tasks.c: 40:          turn_on_ac();
  3426  00122E  ECD8  F00A         	call	_turn_on_ac	;wreg free
  3427  001232  EFDD  F008         	goto	l228
  3428                           
  3429                           ; _ac_controller_1: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  3430  001236  52E5               	movf	postdec1,f,c
  3431  001238  52E5               	movf	postdec1,f,c
  3432  00123A  0012               	return		;funcret
  3433  00123C                     __end_of_ac_controller_1:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _turn_on_ac *****************
  3437 ;; Defined at:
  3438 ;;		line 9 in file "motores.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1  [STACK] void 
  3445 ;; Registers used:
  3446 ;;		None
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3452 ;;      Params:         0       0       0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    5
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_ac_controller_1
  3463 ;;		_ac_controller_2
  3464 ;; This function uses a reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text24
  3468  0015B0                     __ptext24:
  3469                           	callstack 0
  3470  0015B0                     _turn_on_ac:
  3471                           	callstack 20
  3472  0015B0                     
  3473                           ;motores.c: 10:     PORTDbits.RD0 = 1;
  3474  0015B0  8083               	bsf	131,0,c	;volatile
  3475  0015B2                     
  3476                           ; _turn_on_ac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3477  0015B2  0012               	return		;funcret
  3478  0015B4                     __end_of_turn_on_ac:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _turn_off_ac *****************
  3482 ;; Defined at:
  3483 ;;		line 5 in file "motores.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1  [STACK] void 
  3490 ;; Registers used:
  3491 ;;		None
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3497 ;;      Params:         0       0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0
  3500 ;;      Totals:         0       0       0       0       0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    5
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_ac_controller_1
  3508 ;;		_ac_controller_2
  3509 ;; This function uses a reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text25
  3513  0015B4                     __ptext25:
  3514                           	callstack 0
  3515  0015B4                     _turn_off_ac:
  3516                           	callstack 20
  3517  0015B4                     
  3518                           ;motores.c: 6:     PORTDbits.RD0 = 0;
  3519  0015B4  9083               	bcf	131,0,c	;volatile
  3520  0015B6                     
  3521                           ; _turn_off_ac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  3522  0015B6  0012               	return		;funcret
  3523  0015B8                     __end_of_turn_off_ac:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _pipe_read *****************
  3527 ;; Defined at:
  3528 ;;		line 10 in file "pipe.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  pipe            2  [STACK] PTR struct pipe
  3531 ;;		 -> pipe_temperature(26), 
  3532 ;;  dado            2  [STACK] PTR int 
  3533 ;;		 -> ac_controller_1@room_temperature(2), 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  read_flag       1  [STACK] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1  [STACK] void 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3545 ;;      Params:         0       0       0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0
  3548 ;;      Totals:         0       0       0       0       0       0       0
  3549 ;;Total ram usage:        0 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:   10
  3552 ;; This function calls:
  3553 ;;		_sem_get_value
  3554 ;;		_sem_post
  3555 ;;		_sem_wait
  3556 ;; This function is called by:
  3557 ;;		_ac_controller_1
  3558 ;; This function uses a reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text26
  3562  000AF2                     __ptext26:
  3563                           	callstack 0
  3564  000AF2                     _pipe_read:
  3565                           	callstack 0
  3566                           
  3567                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3568  000AF2  52E6               	movf	postinc1,f,c
  3569  000AF4                     
  3570                           ;pipe.c: 11:     (INTCONbits.GIE = 0);
  3571  000AF4  9EF2               	bcf	242,7,c	;volatile
  3572  000AF6                     
  3573                           ;pipe.c: 13:     bool read_flag = 0;
  3574                           ;stkvar	pipe_read@read_flag @ sp[(-1)+0]
  3575  000AF6  0EFF               	movlw	-1
  3576  000AF8  6AE3               	clrf	plusw1,c
  3577  000AFA                     l1834:
  3578                           
  3579                           ;pipe.c: 16:         if (pipe->size > 0){
  3580                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3581  000AFA  0EFD               	movlw	-3
  3582  000AFC  CFE3 F037          	movff	plusw1,btemp+10
  3583  000B00  0EFE               	movlw	-2
  3584  000B02  CFE3 F038          	movff	plusw1,btemp+11
  3585  000B06  0E02               	movlw	2
  3586  000B08  2437               	addwf	(btemp+10)^0,w,c
  3587  000B0A  6ED9               	movwf	fsr2l,c
  3588  000B0C  0E00               	movlw	0
  3589  000B0E  2038               	addwfc	(btemp+11)^0,w,c
  3590  000B10  6EDA               	movwf	fsr2h,c
  3591  000B12  50DE               	movf	postinc2,w,c
  3592  000B14  10DE               	iorwf	postinc2,w,c
  3593  000B16  B4D8               	btfsc	status,2,c
  3594  000B18  EF90  F005         	goto	u80_21
  3595  000B1C  EF92  F005         	goto	u80_20
  3596  000B20                     u80_21:
  3597  000B20  EF0B  F006         	goto	l318
  3598  000B24                     u80_20:
  3599  000B24                     
  3600                           ;pipe.c: 17:             *dado = pipe->msg[pipe->read_pos];
  3601                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3602  000B24  0EFD               	movlw	-3
  3603  000B26  CFE3 F037          	movff	plusw1,btemp+10
  3604  000B2A  0EFE               	movlw	-2
  3605  000B2C  CFE3 F038          	movff	plusw1,btemp+11
  3606  000B30  0E04               	movlw	4
  3607  000B32  2437               	addwf	(btemp+10)^0,w,c
  3608  000B34  6ED9               	movwf	fsr2l,c
  3609  000B36  0E00               	movlw	0
  3610  000B38  2038               	addwfc	(btemp+11)^0,w,c
  3611  000B3A  6EDA               	movwf	fsr2h,c
  3612  000B3C  CFDE F037          	movff	postinc2,btemp+10
  3613  000B40  CFDD F038          	movff	postdec2,btemp+11
  3614  000B44  90D8               	bcf	status,0,c
  3615  000B46  3437               	rlcf	(btemp+10)^0,w,c
  3616  000B48  6E35               	movwf	(btemp+8)^0,c
  3617  000B4A  3438               	rlcf	(btemp+11)^0,w,c
  3618  000B4C  6E36               	movwf	(btemp+9)^0,c
  3619                           
  3620                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3621  000B4E  0EFD               	movlw	-3
  3622  000B50  CFE3 F037          	movff	plusw1,btemp+10
  3623  000B54  0EFE               	movlw	-2
  3624  000B56  CFE3 F038          	movff	plusw1,btemp+11
  3625  000B5A  5035               	movf	(btemp+8)^0,w,c
  3626  000B5C  2437               	addwf	(btemp+10)^0,w,c
  3627  000B5E  6ED9               	movwf	fsr2l,c
  3628  000B60  5036               	movf	(btemp+9)^0,w,c
  3629  000B62  2038               	addwfc	(btemp+11)^0,w,c
  3630  000B64  6EDA               	movwf	fsr2h,c
  3631                           
  3632                           ;stkvar	pipe_read@dado @ sp[(-1)+-4]
  3633  000B66  0EFB               	movlw	-5
  3634  000B68  CFE3 FFE9          	movff	plusw1,fsr0l
  3635  000B6C  0EFC               	movlw	-4
  3636  000B6E  CFE3 FFEA          	movff	plusw1,fsr0h
  3637  000B72  CFDE FFEE          	movff	postinc2,postinc0
  3638  000B76  CFDD FFED          	movff	postdec2,postdec0
  3639  000B7A                     
  3640                           ;pipe.c: 18:             pipe->read_pos = (pipe->read_pos + 1) % 1;
  3641                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3642  000B7A  0EFD               	movlw	-3
  3643  000B7C  CFE3 F037          	movff	plusw1,btemp+10
  3644  000B80  0EFE               	movlw	-2
  3645  000B82  CFE3 F038          	movff	plusw1,btemp+11
  3646  000B86  0E04               	movlw	4
  3647  000B88  2437               	addwf	(btemp+10)^0,w,c
  3648  000B8A  6ED9               	movwf	fsr2l,c
  3649  000B8C  0E00               	movlw	0
  3650  000B8E  2038               	addwfc	(btemp+11)^0,w,c
  3651  000B90  6EDA               	movwf	fsr2h,c
  3652  000B92  0E00               	movlw	0
  3653  000B94  6EDE               	movwf	postinc2,c
  3654  000B96  0E00               	movlw	0
  3655  000B98  6EDD               	movwf	postdec2,c
  3656  000B9A                     
  3657                           ;pipe.c: 19:             pipe->size--;
  3658                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3659  000B9A  0EFD               	movlw	-3
  3660  000B9C  CFE3 F037          	movff	plusw1,btemp+10
  3661  000BA0  0EFE               	movlw	-2
  3662  000BA2  CFE3 F038          	movff	plusw1,btemp+11
  3663  000BA6  0E02               	movlw	2
  3664  000BA8  2437               	addwf	(btemp+10)^0,w,c
  3665  000BAA  6ED9               	movwf	fsr2l,c
  3666  000BAC  0E00               	movlw	0
  3667  000BAE  2038               	addwfc	(btemp+11)^0,w,c
  3668  000BB0  6EDA               	movwf	fsr2h,c
  3669  000BB2  06DE               	decf	postinc2,f,c
  3670  000BB4  0E00               	movlw	0
  3671  000BB6  5ADD               	subwfb	postdec2,f,c
  3672  000BB8                     
  3673                           ;pipe.c: 20:             read_flag = 1;
  3674                           ;stkvar	pipe_read@read_flag @ sp[(-1)+0]
  3675  000BB8  0EFF               	movlw	-1
  3676  000BBA  6AE3               	clrf	plusw1,c
  3677  000BBC  2AE3               	incf	plusw1,f,c
  3678  000BBE                     
  3679                           ;pipe.c: 21:             if(sem_get_value(pipe->sem) < 0){
  3680                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3681  000BBE  0EFD               	movlw	-3
  3682  000BC0  CFE3 F037          	movff	plusw1,btemp+10
  3683  000BC4  0EFE               	movlw	-2
  3684  000BC6  CFE3 F038          	movff	plusw1,btemp+11
  3685  000BCA  0E08               	movlw	8
  3686  000BCC  2437               	addwf	(btemp+10)^0,w,c
  3687  000BCE  6ED9               	movwf	fsr2l,c
  3688  000BD0  0E00               	movlw	0
  3689  000BD2  2038               	addwfc	(btemp+11)^0,w,c
  3690  000BD4  6EDA               	movwf	fsr2h,c
  3691  000BD6  0E12               	movlw	18
  3692  000BD8                     u81_21:
  3693  000BD8  CFDE FFE6          	movff	postinc2,postinc1
  3694  000BDC  2CE8               	decfsz	wreg,w,c
  3695  000BDE  EFEC  F005         	goto	u81_21
  3696  000BE2  ECBE  F00A         	call	_sem_get_value	;wreg free
  3697  000BE6  BE2E               	btfsc	(btemp+1)^0,7,c
  3698  000BE8  EFFA  F005         	goto	u82_20
  3699  000BEC  EFF8  F005         	goto	u82_21
  3700  000BF0                     u82_21:
  3701  000BF0  EF1B  F006         	goto	l1850
  3702  000BF4                     u82_20:
  3703  000BF4                     
  3704                           ;pipe.c: 22:                 sem_post(&pipe->sem);
  3705                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3706  000BF4  0EFD               	movlw	-3
  3707  000BF6  50E3               	movf	plusw1,w,c
  3708  000BF8  0F08               	addlw	8
  3709  000BFA  6E37               	movwf	(btemp+10)^0,c
  3710  000BFC  0EFE               	movlw	-2
  3711  000BFE  CFE3 F038          	movff	plusw1,btemp+11
  3712  000C02  0E00               	movlw	0
  3713  000C04  2238               	addwfc	(btemp+11)^0,f,c
  3714  000C06  C037  FFE6         	movff	btemp+10,postinc1
  3715  000C0A  C038  FFE6         	movff	btemp+11,postinc1
  3716  000C0E  ECC5  F006         	call	_sem_post	;wreg free
  3717  000C12  EF1B  F006         	goto	l1850
  3718  000C16                     l318:
  3719                           
  3720                           ;pipe.c: 26:             (INTCONbits.GIE = 1);
  3721  000C16  8EF2               	bsf	242,7,c	;volatile
  3722  000C18                     
  3723                           ;pipe.c: 27:             sem_wait(&pipe->sem);
  3724                           ;stkvar	pipe_read@pipe @ sp[(-1)+-2]
  3725  000C18  0EFD               	movlw	-3
  3726  000C1A  50E3               	movf	plusw1,w,c
  3727  000C1C  0F08               	addlw	8
  3728  000C1E  6E37               	movwf	(btemp+10)^0,c
  3729  000C20  0EFE               	movlw	-2
  3730  000C22  CFE3 F038          	movff	plusw1,btemp+11
  3731  000C26  0E00               	movlw	0
  3732  000C28  2238               	addwfc	(btemp+11)^0,f,c
  3733  000C2A  C037  FFE6         	movff	btemp+10,postinc1
  3734  000C2E  C038  FFE6         	movff	btemp+11,postinc1
  3735  000C32  EC0A  F000         	call	_sem_wait	;wreg free
  3736  000C36                     l1850:
  3737                           
  3738                           ;pipe.c: 29:     }while(!read_flag);
  3739                           ;stkvar	pipe_read@read_flag @ sp[(-1)+0]
  3740  000C36  0EFF               	movlw	-1
  3741  000C38  50E3               	movf	plusw1,w,c
  3742  000C3A  B4D8               	btfsc	status,2,c
  3743  000C3C  EF22  F006         	goto	u83_21
  3744  000C40  EF24  F006         	goto	u83_20
  3745  000C44                     u83_21:
  3746  000C44  EF7D  F005         	goto	l1834
  3747  000C48                     u83_20:
  3748  000C48                     
  3749                           ;pipe.c: 30:     (INTCONbits.GIE = 1);
  3750  000C48  8EF2               	bsf	242,7,c	;volatile
  3751  000C4A                     
  3752                           ; _pipe_read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3753  000C4A  0EFB               	movlw	251
  3754  000C4C  26E1               	addwf	fsr1l,f,c
  3755  000C4E  0EFF               	movlw	255
  3756  000C50  22E2               	addwfc	fsr1h,f,c
  3757  000C52  0012               	return		;funcret
  3758  000C54                     __end_of_pipe_read:
  3759                           	callstack 0
  3760                           
  3761 ;; *************** function _thermostat_sensing_2 *****************
  3762 ;; Defined at:
  3763 ;;		line 9 in file "user_tasks_2.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1  [STACK] void 
  3770 ;; Registers used:
  3771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3777 ;;      Params:         0       0       0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:   10
  3784 ;; This function calls:
  3785 ;;		_sem_post
  3786 ;;		_sem_wait
  3787 ;;		_thermostat_value
  3788 ;; This function is called by:
  3789 ;;		_main
  3790 ;; This function uses a reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text27
  3794  001514                     __ptext27:
  3795                           	callstack 0
  3796  001514                     _thermostat_sensing_2:
  3797                           	callstack 16
  3798  001514                     l377:
  3799  001514                     
  3800                           ;user_tasks_2.c: 12:    {;user_tasks_2.c: 16:       sem_wait(&sem_temp_w);
  3801  001514  0E1B               	movlw	low _sem_temp_w
  3802  001516  6EE6               	movwf	postinc1,c
  3803  001518  0E00               	movlw	high _sem_temp_w
  3804  00151A  6EE6               	movwf	postinc1,c
  3805  00151C  EC0A  F000         	call	_sem_wait	;wreg free
  3806  001520                     
  3807                           ;user_tasks_2.c: 19:       room_temperature = thermostat_value();
  3808  001520  EC93  F008         	call	_thermostat_value	;wreg free
  3809  001524  C02D  F001         	movff	btemp,_room_temperature
  3810  001528  C02E  F002         	movff	btemp+1,_room_temperature+1
  3811  00152C                     
  3812                           ;user_tasks_2.c: 24:       sem_post(&sem_temp_r);
  3813  00152C  0E09               	movlw	low _sem_temp_r
  3814  00152E  6EE6               	movwf	postinc1,c
  3815  001530  0E00               	movlw	high _sem_temp_r
  3816  001532  6EE6               	movwf	postinc1,c
  3817  001534  ECC5  F006         	call	_sem_post	;wreg free
  3818  001538  EF8A  F00A         	goto	l377
  3819                           
  3820                           ; _thermostat_sensing_2: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3821  00153C  0012               	return		;funcret
  3822  00153E                     __end_of_thermostat_sensing_2:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _ac_controller_2 *****************
  3826 ;; Defined at:
  3827 ;;		line 28 in file "user_tasks_2.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1  [STACK] void 
  3834 ;; Registers used:
  3835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3841 ;;      Params:         0       0       0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:   10
  3848 ;; This function calls:
  3849 ;;		_sem_post
  3850 ;;		_sem_wait
  3851 ;;		_turn_off_ac
  3852 ;;		_turn_on_ac
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text28
  3859  0012A8                     __ptext28:
  3860                           	callstack 0
  3861  0012A8                     _ac_controller_2:
  3862                           	callstack 16
  3863  0012A8                     l383:
  3864  0012A8                     
  3865                           ;user_tasks_2.c: 31:    {;user_tasks_2.c: 34:       sem_wait(&sem_temp_r);
  3866  0012A8  0E09               	movlw	low _sem_temp_r
  3867  0012AA  6EE6               	movwf	postinc1,c
  3868  0012AC  0E00               	movlw	high _sem_temp_r
  3869  0012AE  6EE6               	movwf	postinc1,c
  3870  0012B0  EC0A  F000         	call	_sem_wait	;wreg free
  3871  0012B4                     
  3872                           ;user_tasks_2.c: 36:       if(room_temperature >= (32 + 2))
  3873  0012B4  BE02               	btfsc	(_room_temperature+1)^0,7,c
  3874  0012B6  EF66  F009         	goto	u106_21
  3875  0012BA  5002               	movf	(_room_temperature+1)^0,w,c
  3876  0012BC  E109               	bnz	u106_20
  3877  0012BE  0E22               	movlw	34
  3878  0012C0  5C01               	subwf	_room_temperature^0,w,c
  3879  0012C2  A0D8               	btfss	status,0,c
  3880  0012C4  EF66  F009         	goto	u106_21
  3881  0012C8  EF68  F009         	goto	u106_20
  3882  0012CC                     u106_21:
  3883  0012CC  EF6A  F009         	goto	l2116
  3884  0012D0                     u106_20:
  3885  0012D0                     
  3886                           ;user_tasks_2.c: 37:       {;user_tasks_2.c: 38:          turn_on_ac();
  3887  0012D0  ECD8  F00A         	call	_turn_on_ac	;wreg free
  3888  0012D4                     l2116:
  3889                           
  3890                           ;user_tasks_2.c: 41:       if(room_temperature <= (32 - 2))
  3891  0012D4  BE02               	btfsc	(_room_temperature+1)^0,7,c
  3892  0012D6  EF78  F009         	goto	u107_20
  3893  0012DA  5002               	movf	(_room_temperature+1)^0,w,c
  3894  0012DC  E107               	bnz	u107_21
  3895  0012DE  0E1F               	movlw	31
  3896  0012E0  5C01               	subwf	_room_temperature^0,w,c
  3897  0012E2  B0D8               	btfsc	status,0,c
  3898  0012E4  EF76  F009         	goto	u107_21
  3899  0012E8  EF78  F009         	goto	u107_20
  3900  0012EC                     u107_21:
  3901  0012EC  EF7A  F009         	goto	l2120
  3902  0012F0                     u107_20:
  3903  0012F0                     
  3904                           ;user_tasks_2.c: 42:       {;user_tasks_2.c: 43:          turn_off_ac();
  3905  0012F0  ECDA  F00A         	call	_turn_off_ac	;wreg free
  3906  0012F4                     l2120:
  3907                           
  3908                           ;user_tasks_2.c: 48:       sem_post(&sem_temp_w);
  3909  0012F4  0E1B               	movlw	low _sem_temp_w
  3910  0012F6  6EE6               	movwf	postinc1,c
  3911  0012F8  0E00               	movlw	high _sem_temp_w
  3912  0012FA  6EE6               	movwf	postinc1,c
  3913  0012FC  ECC5  F006         	call	_sem_post	;wreg free
  3914  001300  EF54  F009         	goto	l383
  3915                           
  3916                           ; _ac_controller_2: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  3917  001304  0012               	return		;funcret
  3918  001306                     __end_of_ac_controller_2:
  3919                           	callstack 0
  3920                           
  3921 ;; *************** function _ISR_timer *****************
  3922 ;; Defined at:
  3923 ;;		line 95 in file "kernel.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3937 ;;      Params:         0       0       0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0       0       0
  3939 ;;      Temps:         18       0       0       0       0       0       0
  3940 ;;      Totals:        18       0       0       0       0       0       0
  3941 ;;Total ram usage:       18 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    4
  3944 ;; This function calls:
  3945 ;;		_RESTORE_CONTEXT
  3946 ;;		___wmul
  3947 ;;		_delay_release
  3948 ;; This function is called by:
  3949 ;;		Interrupt level 2
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	intcode
  3954  000008                     __pintcode:
  3955                           	callstack 0
  3956  000008                     _ISR_timer:
  3957                           	callstack 15
  3958                           
  3959                           ;incstack = 0
  3960  000008  ED89  F001         	call	int_func,f	;refresh shadow registers
  3961                           
  3962                           	psect	intcode_body
  3963  000312                     __pintcode_body:
  3964                           	callstack 15
  3965  000312                     int_func:
  3966                           	callstack 15
  3967  000312  0006               	pop		; remove dummy address from shadow register refresh
  3968  000314  CFE1 F059          	movff	fsr1l,??_ISR_timer+4
  3969  000318  CFE2 F05A          	movff	fsr1h,??_ISR_timer+5
  3970  00031C  CFD9 F05B          	movff	fsr2l,??_ISR_timer+6
  3971  000320  CFDA F05C          	movff	fsr2h,??_ISR_timer+7
  3972  000324  CFF3 F05D          	movff	prodl,??_ISR_timer+8
  3973  000328  CFF4 F05E          	movff	prodh,??_ISR_timer+9
  3974  00032C  C02D  F05F         	movff	btemp,??_ISR_timer+10
  3975  000330  C02E  F060         	movff	btemp+1,??_ISR_timer+11
  3976  000334  C033  F061         	movff	btemp+6,??_ISR_timer+12
  3977  000338  C034  F062         	movff	btemp+7,??_ISR_timer+13
  3978  00033C  C035  F063         	movff	btemp+8,??_ISR_timer+14
  3979  000340  C036  F064         	movff	btemp+9,??_ISR_timer+15
  3980  000344  C037  F065         	movff	btemp+10,??_ISR_timer+16
  3981  000348  C038  F066         	movff	btemp+11,??_ISR_timer+17
  3982  00034C  EE14  F084         	lfsr	1,___inthi_sp
  3983  000350                     
  3984                           ;kernel.c: 98:     TMR0L = 0;
  3985  000350  0E00               	movlw	0
  3986  000352  6ED6               	movwf	214,c	;volatile
  3987  000354                     
  3988                           ;kernel.c: 99:     INTCONbits.TMR0IF = 0;
  3989  000354  94F2               	bcf	242,2,c	;volatile
  3990  000356                     
  3991                           ;kernel.c: 100:     rr_quantum--;
  3992  000356  0667               	decf	_rr_quantum^0,f,c
  3993  000358  A0D8               	btfss	status,0,c
  3994  00035A  0668               	decf	(_rr_quantum+1)^0,f,c
  3995  00035C                     
  3996                           ;kernel.c: 102:     if (delay_release() && 1 == 2) {
  3997  00035C  EC5B  F007         	call	_delay_release	;wreg free
  3998  000360                     
  3999                           ;kernel.c: 113:         if(rr_quantum == 0){
  4000  000360  5067               	movf	_rr_quantum^0,w,c
  4001  000362  1068               	iorwf	(_rr_quantum+1)^0,w,c
  4002  000364  A4D8               	btfss	status,2,c
  4003  000366  EFB7  F001         	goto	i2u101_41
  4004  00036A  EFB9  F001         	goto	i2u101_40
  4005  00036E                     i2u101_41:
  4006  00036E  EFC3  F002         	goto	i2l181
  4007  000372                     i2u101_40:
  4008  000372                     
  4009                           ;kernel.c: 114:             rr_quantum = 8;
  4010  000372  0E00               	movlw	0
  4011  000374  6E68               	movwf	(_rr_quantum+1)^0,c
  4012  000376  0E08               	movlw	8
  4013  000378  6E67               	movwf	_rr_quantum^0,c
  4014  00037A  9EF2               	bcf	242,7,c	;volatile
  4015  00037C  0E71               	movlw	113
  4016  00037E  6EE6               	movwf	postinc1,c
  4017  000380  0E00               	movlw	0
  4018  000382  6EE6               	movwf	postinc1,c
  4019  000384  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  4020  000388  CFDE F055          	movff	postinc2,??_ISR_timer
  4021  00038C  CFDD F056          	movff	postdec2,??_ISR_timer+1
  4022  000390  C055  FFE6         	movff	??_ISR_timer,postinc1
  4023  000394  C056  FFE6         	movff	??_ISR_timer+1,postinc1
  4024  000398  EC48  F008         	call	___wmul	;wreg free
  4025  00039C  0E85               	movlw	low (_READY_QUEUE+107)
  4026  00039E  242D               	addwf	btemp^0,w,c
  4027  0003A0  6ED9               	movwf	fsr2l,c
  4028  0003A2  0E01               	movlw	high (_READY_QUEUE+107)
  4029  0003A4  202E               	addwfc	(btemp+1)^0,w,c
  4030  0003A6  6EDA               	movwf	fsr2h,c
  4031  0003A8  50DE               	movf	postinc2,w,c
  4032  0003AA  10DE               	iorwf	postinc2,w,c
  4033  0003AC  B4D8               	btfsc	status,2,c
  4034  0003AE  EFDB  F001         	goto	i2u102_41
  4035  0003B2  EFDD  F001         	goto	i2u102_40
  4036  0003B6                     i2u102_41:
  4037  0003B6  EFA8  F002         	goto	i2l2084
  4038  0003BA                     i2u102_40:
  4039  0003BA  0E00               	movlw	0
  4040  0003BC  6E08               	movwf	(_index+1)^0,c
  4041  0003BE  0E00               	movlw	0
  4042  0003C0  6E07               	movwf	_index^0,c
  4043  0003C2  0E71               	movlw	113
  4044  0003C4  6EE6               	movwf	postinc1,c
  4045  0003C6  0E00               	movlw	0
  4046  0003C8  6EE6               	movwf	postinc1,c
  4047  0003CA  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  4048  0003CE  CFDE F055          	movff	postinc2,??_ISR_timer
  4049  0003D2  CFDD F056          	movff	postdec2,??_ISR_timer+1
  4050  0003D6  C055  FFE6         	movff	??_ISR_timer,postinc1
  4051  0003DA  C056  FFE6         	movff	??_ISR_timer+1,postinc1
  4052  0003DE  EC48  F008         	call	___wmul	;wreg free
  4053  0003E2  0E1E               	movlw	low (_READY_QUEUE+4)
  4054  0003E4  242D               	addwf	btemp^0,w,c
  4055  0003E6  6ED9               	movwf	fsr2l,c
  4056  0003E8  0E01               	movlw	high (_READY_QUEUE+4)
  4057  0003EA  202E               	addwfc	(btemp+1)^0,w,c
  4058  0003EC  6EDA               	movwf	fsr2h,c
  4059  0003EE  0E00               	movlw	0
  4060  0003F0  6EDF               	movwf	indf2,c
  4061  0003F2  6E55               	movwf	??_ISR_timer^0,c
  4062  0003F4  6A56               	clrf	(??_ISR_timer+1)^0,c
  4063  0003F6  0E71               	movlw	113
  4064  0003F8  6EE6               	movwf	postinc1,c
  4065  0003FA  0E00               	movlw	0
  4066  0003FC  6EE6               	movwf	postinc1,c
  4067  0003FE  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  4068  000402  CFDE F057          	movff	postinc2,??_ISR_timer+2
  4069  000406  CFDD F058          	movff	postdec2,??_ISR_timer+3
  4070  00040A  C057  FFE6         	movff	??_ISR_timer+2,postinc1
  4071  00040E  C058  FFE6         	movff	??_ISR_timer+3,postinc1
  4072  000412  EC48  F008         	call	___wmul	;wreg free
  4073  000416  0E21               	movlw	low (_READY_QUEUE+7)
  4074  000418  242D               	addwf	btemp^0,w,c
  4075  00041A  6ED9               	movwf	fsr2l,c
  4076  00041C  0E01               	movlw	high (_READY_QUEUE+7)
  4077  00041E  202E               	addwfc	(btemp+1)^0,w,c
  4078  000420  6EDA               	movwf	fsr2h,c
  4079  000422  C055  FFDE         	movff	??_ISR_timer,postinc2
  4080  000426  C056  FFDD         	movff	??_ISR_timer+1,postdec2
  4081  00042A  50E0               	movf	224,w,c	;volatile
  4082  00042C  6E55               	movwf	??_ISR_timer^0,c
  4083  00042E  6A56               	clrf	(??_ISR_timer+1)^0,c
  4084  000430  0E71               	movlw	113
  4085  000432  6EE6               	movwf	postinc1,c
  4086  000434  0E00               	movlw	0
  4087  000436  6EE6               	movwf	postinc1,c
  4088  000438  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  4089  00043C  CFDE F057          	movff	postinc2,??_ISR_timer+2
  4090  000440  CFDD F058          	movff	postdec2,??_ISR_timer+3
  4091  000444  C057  FFE6         	movff	??_ISR_timer+2,postinc1
  4092  000448  C058  FFE6         	movff	??_ISR_timer+3,postinc1
  4093  00044C  EC48  F008         	call	___wmul	;wreg free
  4094  000450  0E23               	movlw	low (_READY_QUEUE+9)
  4095  000452  242D               	addwf	btemp^0,w,c
  4096  000454  6ED9               	movwf	fsr2l,c
  4097  000456  0E01               	movlw	high (_READY_QUEUE+9)
  4098  000458  202E               	addwfc	(btemp+1)^0,w,c
  4099  00045A  6EDA               	movwf	fsr2h,c
  4100  00045C  C055  FFDE         	movff	??_ISR_timer,postinc2
  4101  000460  C056  FFDD         	movff	??_ISR_timer+1,postdec2
  4102  000464  50D8               	movf	216,w,c	;volatile
  4103  000466  6E55               	movwf	??_ISR_timer^0,c
  4104  000468  6A56               	clrf	(??_ISR_timer+1)^0,c
  4105  00046A  0E71               	movlw	113
  4106  00046C  6EE6               	movwf	postinc1,c
  4107  00046E  0E00               	movlw	0
  4108  000470  6EE6               	movwf	postinc1,c
  4109  000472  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  4110  000476  CFDE F057          	movff	postinc2,??_ISR_timer+2
  4111  00047A  CFDD F058          	movff	postdec2,??_ISR_timer+3
  4112  00047E  C057  FFE6         	movff	??_ISR_timer+2,postinc1
  4113  000482  C058  FFE6         	movff	??_ISR_timer+3,postinc1
  4114  000486  EC48  F008         	call	___wmul	;wreg free
  4115  00048A  0E1F               	movlw	low (_READY_QUEUE+5)
  4116  00048C  242D               	addwf	btemp^0,w,c
  4117  00048E  6ED9               	movwf	fsr2l,c
  4118  000490  0E01               	movlw	high (_READY_QUEUE+5)
  4119  000492  202E               	addwfc	(btemp+1)^0,w,c
  4120  000494  6EDA               	movwf	fsr2h,c
  4121  000496  C055  FFDE         	movff	??_ISR_timer,postinc2
  4122  00049A  C056  FFDD         	movff	??_ISR_timer+1,postdec2
  4123  00049E  0E71               	movlw	113
  4124  0004A0  6EE6               	movwf	postinc1,c
  4125  0004A2  0E00               	movlw	0
  4126  0004A4  6EE6               	movwf	postinc1,c
  4127  0004A6  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  4128  0004AA  CFDE F055          	movff	postinc2,??_ISR_timer
  4129  0004AE  CFDD F056          	movff	postdec2,??_ISR_timer+1
  4130  0004B2  C055  FFE6         	movff	??_ISR_timer,postinc1
  4131  0004B6  C056  FFE6         	movff	??_ISR_timer+1,postinc1
  4132  0004BA  EC48  F008         	call	___wmul	;wreg free
  4133  0004BE  0E85               	movlw	low (_READY_QUEUE+107)
  4134  0004C0  242D               	addwf	btemp^0,w,c
  4135  0004C2  6ED9               	movwf	fsr2l,c
  4136  0004C4  0E01               	movlw	high (_READY_QUEUE+107)
  4137  0004C6  202E               	addwfc	(btemp+1)^0,w,c
  4138  0004C8  6EDA               	movwf	fsr2h,c
  4139  0004CA  0E00               	movlw	0
  4140  0004CC  6EDE               	movwf	postinc2,c
  4141  0004CE  0E00               	movlw	0
  4142  0004D0  6EDD               	movwf	postdec2,c
  4143  0004D2                     i2l2078:
  4144  0004D2  0E71               	movlw	113
  4145  0004D4  6EE6               	movwf	postinc1,c
  4146  0004D6  0E00               	movlw	0
  4147  0004D8  6EE6               	movwf	postinc1,c
  4148  0004DA  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  4149  0004DE  CFDE F055          	movff	postinc2,??_ISR_timer
  4150  0004E2  CFDD F056          	movff	postdec2,??_ISR_timer+1
  4151  0004E6  C055  FFE6         	movff	??_ISR_timer,postinc1
  4152  0004EA  C056  FFE6         	movff	??_ISR_timer+1,postinc1
  4153  0004EE  EC48  F008         	call	___wmul	;wreg free
  4154  0004F2  0E1A               	movlw	low _READY_QUEUE
  4155  0004F4  6E57               	movwf	(??_ISR_timer+2)^0,c
  4156  0004F6  0E01               	movlw	high _READY_QUEUE
  4157  0004F8  6E58               	movwf	(??_ISR_timer+3)^0,c
  4158  0004FA  0E0B               	movlw	11
  4159  0004FC  2657               	addwf	(??_ISR_timer+2)^0,f,c
  4160  0004FE  0E00               	movlw	0
  4161  000500  2258               	addwfc	(??_ISR_timer+3)^0,f,c
  4162  000502  502D               	movf	btemp^0,w,c
  4163  000504  2657               	addwf	(??_ISR_timer+2)^0,f,c
  4164  000506  502E               	movf	(btemp+1)^0,w,c
  4165  000508  2258               	addwfc	(??_ISR_timer+3)^0,f,c
  4166  00050A  0E03               	movlw	3
  4167  00050C  6EE6               	movwf	postinc1,c
  4168  00050E  0E00               	movlw	0
  4169  000510  6EE6               	movwf	postinc1,c
  4170  000512  C007  FFE6         	movff	_index,postinc1
  4171  000516  C008  FFE6         	movff	_index+1,postinc1
  4172  00051A  EC48  F008         	call	___wmul	;wreg free
  4173  00051E  502D               	movf	btemp^0,w,c
  4174  000520  2457               	addwf	(??_ISR_timer+2)^0,w,c
  4175  000522  6ED9               	movwf	fsr2l,c
  4176  000524  502E               	movf	(btemp+1)^0,w,c
  4177  000526  2058               	addwfc	(??_ISR_timer+3)^0,w,c
  4178  000528  6EDA               	movwf	fsr2h,c
  4179  00052A  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4180  00052E  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4181  000532  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4182  000536  4A07               	infsnz	_index^0,f,c
  4183  000538  2A08               	incf	(_index+1)^0,f,c
  4184  00053A  0006               	pop		;# 
  4185  00053C  50FC               	movf	252,w,c	;volatile
  4186  00053E  A4D8               	btfss	status,2,c
  4187  000540  EFA4  F002         	goto	i2u103_41
  4188  000544  EFA6  F002         	goto	i2u103_40
  4189  000548                     i2u103_41:
  4190  000548  EF69  F002         	goto	i2l2078
  4191  00054C                     i2u103_40:
  4192  00054C  EFC0  F002         	goto	i2l2086
  4193  000550                     i2l2084:
  4194  000550  0E71               	movlw	113
  4195  000552  6EE6               	movwf	postinc1,c
  4196  000554  0E00               	movlw	0
  4197  000556  6EE6               	movwf	postinc1,c
  4198  000558  EE23  F0C0         	lfsr	2,_READY_QUEUE+678
  4199  00055C  CFDE F055          	movff	postinc2,??_ISR_timer
  4200  000560  CFDD F056          	movff	postdec2,??_ISR_timer+1
  4201  000564  C055  FFE6         	movff	??_ISR_timer,postinc1
  4202  000568  C056  FFE6         	movff	??_ISR_timer+1,postinc1
  4203  00056C  EC48  F008         	call	___wmul	;wreg free
  4204  000570  0E1E               	movlw	low (_READY_QUEUE+4)
  4205  000572  242D               	addwf	btemp^0,w,c
  4206  000574  6ED9               	movwf	fsr2l,c
  4207  000576  0E01               	movlw	high (_READY_QUEUE+4)
  4208  000578  202E               	addwfc	(btemp+1)^0,w,c
  4209  00057A  6EDA               	movwf	fsr2h,c
  4210  00057C  0E00               	movlw	0
  4211  00057E  6EDF               	movwf	indf2,c
  4212  000580                     i2l2086:
  4213  000580  8EF2               	bsf	242,7,c	;volatile
  4214  000582                     
  4215                           ;kernel.c: 116:             RESTORE_CONTEXT();
  4216  000582  ECE0  F002         	call	_RESTORE_CONTEXT	;wreg free
  4217  000586                     i2l181:
  4218  000586  C066  F038         	movff	??_ISR_timer+17,btemp+11
  4219  00058A  C065  F037         	movff	??_ISR_timer+16,btemp+10
  4220  00058E  C064  F036         	movff	??_ISR_timer+15,btemp+9
  4221  000592  C063  F035         	movff	??_ISR_timer+14,btemp+8
  4222  000596  C062  F034         	movff	??_ISR_timer+13,btemp+7
  4223  00059A  C061  F033         	movff	??_ISR_timer+12,btemp+6
  4224  00059E  C060  F02E         	movff	??_ISR_timer+11,btemp+1
  4225  0005A2  C05F  F02D         	movff	??_ISR_timer+10,btemp
  4226  0005A6  C05E  FFF4         	movff	??_ISR_timer+9,prodh
  4227  0005AA  C05D  FFF3         	movff	??_ISR_timer+8,prodl
  4228  0005AE  C05C  FFDA         	movff	??_ISR_timer+7,fsr2h
  4229  0005B2  C05B  FFD9         	movff	??_ISR_timer+6,fsr2l
  4230  0005B6  C05A  FFE2         	movff	??_ISR_timer+5,fsr1h
  4231  0005BA  C059  FFE1         	movff	??_ISR_timer+4,fsr1l
  4232  0005BE  0011               	retfie		f
  4233  0005C0                     __end_of_ISR_timer:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _delay_release *****************
  4237 ;; Defined at:
  4238 ;;		line 81 in file "kernel.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  i               2    6[COMRAM] unsigned int 
  4243 ;;  task_release    2    4[COMRAM] unsigned int 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  2    0[COMRAM] unsigned int 
  4246 ;; Registers used:
  4247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4253 ;;      Params:         2       0       0       0       0       0       0
  4254 ;;      Locals:         4       0       0       0       0       0       0
  4255 ;;      Temps:          2       0       0       0       0       0       0
  4256 ;;      Totals:         8       0       0       0       0       0       0
  4257 ;;Total ram usage:        8 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    1
  4260 ;; This function calls:
  4261 ;;		___wmul
  4262 ;; This function is called by:
  4263 ;;		_ISR_timer
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text30
  4268  000EB6                     __ptext30:
  4269                           	callstack 0
  4270  000EB6                     _delay_release:
  4271                           	callstack 17
  4272  000EB6                     
  4273                           ;kernel.c: 82:     u_int i, task_released = 0;
  4274  000EB6  0E00               	movlw	0
  4275  000EB8  6E52               	movwf	(delay_release@task_released+1)^0,c
  4276  000EBA  0E00               	movlw	0
  4277  000EBC  6E51               	movwf	delay_release@task_released^0,c
  4278                           
  4279                           ;kernel.c: 83:     for(i = 0; i < READY_QUEUE.nr_of_tasks; i++){
  4280  000EBE  0E00               	movlw	0
  4281  000EC0  6E54               	movwf	(delay_release@i+1)^0,c
  4282  000EC2  0E00               	movlw	0
  4283  000EC4  6E53               	movwf	delay_release@i^0,c
  4284  000EC6  EFC2  F007         	goto	i2l1784
  4285  000ECA                     i2l1774:
  4286                           
  4287                           ;kernel.c: 84:         if(READY_QUEUE.QUEUE[i].task_state == WAITING) {
  4288  000ECA  0E71               	movlw	113
  4289  000ECC  6EE6               	movwf	postinc1,c
  4290  000ECE  0E00               	movlw	0
  4291  000ED0  6EE6               	movwf	postinc1,c
  4292  000ED2  C053  FFE6         	movff	delay_release@i,postinc1
  4293  000ED6  C054  FFE6         	movff	delay_release@i+1,postinc1
  4294  000EDA  EC48  F008         	call	___wmul	;wreg free
  4295  000EDE  0E1E               	movlw	low (_READY_QUEUE+4)
  4296  000EE0  242D               	addwf	btemp^0,w,c
  4297  000EE2  6ED9               	movwf	fsr2l,c
  4298  000EE4  0E01               	movlw	high (_READY_QUEUE+4)
  4299  000EE6  202E               	addwfc	(btemp+1)^0,w,c
  4300  000EE8  6EDA               	movwf	fsr2h,c
  4301  000EEA  0E02               	movlw	2
  4302  000EEC  18DE               	xorwf	postinc2,w,c
  4303  000EEE  A4D8               	btfss	status,2,c
  4304  000EF0  EF7C  F007         	goto	i2u72_41
  4305  000EF4  EF7E  F007         	goto	i2u72_40
  4306  000EF8                     i2u72_41:
  4307  000EF8  EFC0  F007         	goto	i2l1782
  4308  000EFC                     i2u72_40:
  4309  000EFC                     
  4310                           ;kernel.c: 85:             READY_QUEUE.QUEUE[i].task_delay_time--;
  4311  000EFC  0E71               	movlw	113
  4312  000EFE  6EE6               	movwf	postinc1,c
  4313  000F00  0E00               	movlw	0
  4314  000F02  6EE6               	movwf	postinc1,c
  4315  000F04  C053  FFE6         	movff	delay_release@i,postinc1
  4316  000F08  C054  FFE6         	movff	delay_release@i+1,postinc1
  4317  000F0C  EC48  F008         	call	___wmul	;wreg free
  4318  000F10  0E89               	movlw	low (_READY_QUEUE+111)
  4319  000F12  242D               	addwf	btemp^0,w,c
  4320  000F14  6ED9               	movwf	fsr2l,c
  4321  000F16  0E01               	movlw	high (_READY_QUEUE+111)
  4322  000F18  202E               	addwfc	(btemp+1)^0,w,c
  4323  000F1A  6EDA               	movwf	fsr2h,c
  4324  000F1C  06DE               	decf	postinc2,f,c
  4325  000F1E  0E00               	movlw	0
  4326  000F20  5ADD               	subwfb	postdec2,f,c
  4327                           
  4328                           ;kernel.c: 86:             if(READY_QUEUE.QUEUE[i].task_delay_time == 0) {
  4329  000F22  0E71               	movlw	113
  4330  000F24  6EE6               	movwf	postinc1,c
  4331  000F26  0E00               	movlw	0
  4332  000F28  6EE6               	movwf	postinc1,c
  4333  000F2A  C053  FFE6         	movff	delay_release@i,postinc1
  4334  000F2E  C054  FFE6         	movff	delay_release@i+1,postinc1
  4335  000F32  EC48  F008         	call	___wmul	;wreg free
  4336  000F36  0E89               	movlw	low (_READY_QUEUE+111)
  4337  000F38  242D               	addwf	btemp^0,w,c
  4338  000F3A  6ED9               	movwf	fsr2l,c
  4339  000F3C  0E01               	movlw	high (_READY_QUEUE+111)
  4340  000F3E  202E               	addwfc	(btemp+1)^0,w,c
  4341  000F40  6EDA               	movwf	fsr2h,c
  4342  000F42  50DE               	movf	postinc2,w,c
  4343  000F44  10DE               	iorwf	postinc2,w,c
  4344  000F46  A4D8               	btfss	status,2,c
  4345  000F48  EFA8  F007         	goto	i2u73_41
  4346  000F4C  EFAA  F007         	goto	i2u73_40
  4347  000F50                     i2u73_41:
  4348  000F50  EFC0  F007         	goto	i2l1782
  4349  000F54                     i2u73_40:
  4350  000F54                     
  4351                           ;kernel.c: 87:                 READY_QUEUE.QUEUE[i].task_state = READY;
  4352  000F54  0E71               	movlw	113
  4353  000F56  6EE6               	movwf	postinc1,c
  4354  000F58  0E00               	movlw	0
  4355  000F5A  6EE6               	movwf	postinc1,c
  4356  000F5C  C053  FFE6         	movff	delay_release@i,postinc1
  4357  000F60  C054  FFE6         	movff	delay_release@i+1,postinc1
  4358  000F64  EC48  F008         	call	___wmul	;wreg free
  4359  000F68  0E1E               	movlw	low (_READY_QUEUE+4)
  4360  000F6A  242D               	addwf	btemp^0,w,c
  4361  000F6C  6ED9               	movwf	fsr2l,c
  4362  000F6E  0E01               	movlw	high (_READY_QUEUE+4)
  4363  000F70  202E               	addwfc	(btemp+1)^0,w,c
  4364  000F72  6EDA               	movwf	fsr2h,c
  4365  000F74  0E00               	movlw	0
  4366  000F76  6EDF               	movwf	indf2,c
  4367  000F78                     
  4368                           ;kernel.c: 88:                 task_released = 1;
  4369  000F78  0E00               	movlw	0
  4370  000F7A  6E52               	movwf	(delay_release@task_released+1)^0,c
  4371  000F7C  0E01               	movlw	1
  4372  000F7E  6E51               	movwf	delay_release@task_released^0,c
  4373  000F80                     i2l1782:
  4374                           
  4375                           ;kernel.c: 91:     }
  4376  000F80  4A53               	infsnz	delay_release@i^0,f,c
  4377  000F82  2A54               	incf	(delay_release@i+1)^0,f,c
  4378  000F84                     i2l1784:
  4379  000F84  EE23  F0C2         	lfsr	2,_READY_QUEUE+680
  4380  000F88  50DE               	movf	postinc2,w,c
  4381  000F8A  5C53               	subwf	delay_release@i^0,w,c
  4382  000F8C  50DE               	movf	postinc2,w,c
  4383  000F8E  5854               	subwfb	(delay_release@i+1)^0,w,c
  4384  000F90  A0D8               	btfss	status,0,c
  4385  000F92  EFCD  F007         	goto	i2u74_41
  4386  000F96  EFCF  F007         	goto	i2u74_40
  4387  000F9A                     i2u74_41:
  4388  000F9A  EF65  F007         	goto	i2l1774
  4389  000F9E                     i2u74_40:
  4390  000F9E                     
  4391                           ;kernel.c: 92:     return task_released;
  4392  000F9E  C051  F04D         	movff	delay_release@task_released,?_delay_release
  4393  000FA2  C052  F04E         	movff	delay_release@task_released+1,?_delay_release+1
  4394  000FA6  0012               	return		;funcret
  4395  000FA8                     __end_of_delay_release:
  4396                           	callstack 0
  4397  0000                     
  4398                           	psect	text31
  4399  000000                     __ptext31:
  4400                           	callstack 0
  4401  000000                     
  4402                           	psect	rparam
  4403  0000                     
  4404                           	psect	temp
  4405  00002D                     btemp:
  4406                           	callstack 0
  4407  00002D                     	ds	32
  4408  0000                     wtemp0	set	btemp
  4409  0000                     wtemp1	set	btemp+2
  4410  0000                     wtemp2	set	btemp+4
  4411  0000                     wtemp3	set	btemp+6
  4412  0000                     wtemp4	set	btemp+8
  4413  0000                     wtemp5	set	btemp+10
  4414  0000                     wtemp8	set	btemp+1
  4415  0000                     ttemp0	set	btemp
  4416  0000                     ttemp1	set	btemp+3
  4417  0000                     ttemp2	set	btemp+6
  4418  0000                     ttemp3	set	btemp+9
  4419  0000                     ttemp5	set	btemp+1
  4420  0000                     ttemp6	set	btemp+4
  4421  0000                     ttemp7	set	btemp+8
  4422  0000                     ltemp0	set	btemp
  4423  0000                     ltemp1	set	btemp+4
  4424  0000                     ltemp2	set	btemp+8
  4425  0000                     lltemp0	set	btemp
  4426  0000                     lltemp1	set	btemp+8
  4427  0000                     lltemp2	set	btemp+16
  4428  0000                     lltemp3	set	btemp+24
  4429                           
  4430                           	psect	idloc
  4431                           
  4432                           ;Config register IDLOC0 @ 0x200000
  4433                           ;	unspecified, using default values
  4434  200000                     	org	2097152
  4435  200000  FF                 	db	255
  4436                           
  4437                           ;Config register IDLOC1 @ 0x200001
  4438                           ;	unspecified, using default values
  4439  200001                     	org	2097153
  4440  200001  FF                 	db	255
  4441                           
  4442                           ;Config register IDLOC2 @ 0x200002
  4443                           ;	unspecified, using default values
  4444  200002                     	org	2097154
  4445  200002  FF                 	db	255
  4446                           
  4447                           ;Config register IDLOC3 @ 0x200003
  4448                           ;	unspecified, using default values
  4449  200003                     	org	2097155
  4450  200003  FF                 	db	255
  4451                           
  4452                           ;Config register IDLOC4 @ 0x200004
  4453                           ;	unspecified, using default values
  4454  200004                     	org	2097156
  4455  200004  FF                 	db	255
  4456                           
  4457                           ;Config register IDLOC5 @ 0x200005
  4458                           ;	unspecified, using default values
  4459  200005                     	org	2097157
  4460  200005  FF                 	db	255
  4461                           
  4462                           ;Config register IDLOC6 @ 0x200006
  4463                           ;	unspecified, using default values
  4464  200006                     	org	2097158
  4465  200006  FF                 	db	255
  4466                           
  4467                           ;Config register IDLOC7 @ 0x200007
  4468                           ;	unspecified, using default values
  4469  200007                     	org	2097159
  4470  200007  FF                 	db	255
  4471                           
  4472                           	psect	config
  4473                           
  4474                           ; Padding undefined space
  4475  300000                     	org	3145728
  4476  300000  FF                 	db	255
  4477                           
  4478                           ;Config register CONFIG1H @ 0x300001
  4479                           ;	Oscillator Selection bits
  4480                           ;	OSC = 0x7, unprogrammed default
  4481                           ;	Fail-Safe Clock Monitor Enable bit
  4482                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4483                           ;	Internal/External Oscillator Switchover bit
  4484                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4485  300001                     	org	3145729
  4486  300001  07                 	db	7
  4487                           
  4488                           ;Config register CONFIG2L @ 0x300002
  4489                           ;	Power-up Timer Enable bit
  4490                           ;	PWRT = 0x1, unprogrammed default
  4491                           ;	Brown-out Reset Enable bits
  4492                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  4493                           ;	Brown Out Reset Voltage bits
  4494                           ;	BORV = 0x3, unprogrammed default
  4495  300002                     	org	3145730
  4496  300002  1B                 	db	27
  4497                           
  4498                           ;Config register CONFIG2H @ 0x300003
  4499                           ;	Watchdog Timer Enable bit
  4500                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4501                           ;	Watchdog Timer Postscale Select bits
  4502                           ;	WDTPS = 0xF, unprogrammed default
  4503  300003                     	org	3145731
  4504  300003  1E                 	db	30
  4505                           
  4506                           ; Padding undefined space
  4507  300004                     	org	3145732
  4508  300004  FF                 	db	255
  4509                           
  4510                           ;Config register CONFIG3H @ 0x300005
  4511                           ;	CCP2 MUX bit
  4512                           ;	CCP2MX = 0x1, unprogrammed default
  4513                           ;	PORTB A/D Enable bit
  4514                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4515                           ;	Low-Power Timer1 Oscillator Enable bit
  4516                           ;	LPT1OSC = 0x0, unprogrammed default
  4517                           ;	MCLR Pin Enable bit
  4518                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4519  300005                     	org	3145733
  4520  300005  81                 	db	129
  4521                           
  4522                           ;Config register CONFIG4L @ 0x300006
  4523                           ;	Stack Full/Underflow Reset Enable bit
  4524                           ;	STVREN = 0x1, unprogrammed default
  4525                           ;	Single-Supply ICSP Enable bit
  4526                           ;	LVP = OFF, Single-Supply ICSP disabled
  4527                           ;	Extended Instruction Set Enable bit
  4528                           ;	XINST = 0x0, unprogrammed default
  4529                           ;	Background Debugger Enable bit
  4530                           ;	DEBUG = 0x1, unprogrammed default
  4531  300006                     	org	3145734
  4532  300006  81                 	db	129
  4533                           
  4534                           ; Padding undefined space
  4535  300007                     	org	3145735
  4536  300007  FF                 	db	255
  4537                           
  4538                           ;Config register CONFIG5L @ 0x300008
  4539                           ;	unspecified, using default values
  4540                           ;	Code Protection bit
  4541                           ;	CP0 = 0x1, unprogrammed default
  4542                           ;	Code Protection bit
  4543                           ;	CP1 = 0x1, unprogrammed default
  4544                           ;	Code Protection bit
  4545                           ;	CP2 = 0x1, unprogrammed default
  4546                           ;	Code Protection bit
  4547                           ;	CP3 = 0x1, unprogrammed default
  4548  300008                     	org	3145736
  4549  300008  0F                 	db	15
  4550                           
  4551                           ;Config register CONFIG5H @ 0x300009
  4552                           ;	Boot Block Code Protection bit
  4553                           ;	CPB = 0x1, unprogrammed default
  4554                           ;	Data EEPROM Code Protection bit
  4555                           ;	CPD = OFF, Data EEPROM not code-protected
  4556  300009                     	org	3145737
  4557  300009  C0                 	db	192
  4558                           
  4559                           ;Config register CONFIG6L @ 0x30000A
  4560                           ;	unspecified, using default values
  4561                           ;	Write Protection bit
  4562                           ;	WRT0 = 0x1, unprogrammed default
  4563                           ;	Write Protection bit
  4564                           ;	WRT1 = 0x1, unprogrammed default
  4565                           ;	Write Protection bit
  4566                           ;	WRT2 = 0x1, unprogrammed default
  4567                           ;	Write Protection bit
  4568                           ;	WRT3 = 0x1, unprogrammed default
  4569  30000A                     	org	3145738
  4570  30000A  0F                 	db	15
  4571                           
  4572                           ;Config register CONFIG6H @ 0x30000B
  4573                           ;	unspecified, using default values
  4574                           ;	Configuration Register Write Protection bit
  4575                           ;	WRTC = 0x1, unprogrammed default
  4576                           ;	Boot Block Write Protection bit
  4577                           ;	WRTB = 0x1, unprogrammed default
  4578                           ;	Data EEPROM Write Protection bit
  4579                           ;	WRTD = 0x1, unprogrammed default
  4580  30000B                     	org	3145739
  4581  30000B  E0                 	db	224
  4582                           
  4583                           ;Config register CONFIG7L @ 0x30000C
  4584                           ;	unspecified, using default values
  4585                           ;	Table Read Protection bit
  4586                           ;	EBTR0 = 0x1, unprogrammed default
  4587                           ;	Table Read Protection bit
  4588                           ;	EBTR1 = 0x1, unprogrammed default
  4589                           ;	Table Read Protection bit
  4590                           ;	EBTR2 = 0x1, unprogrammed default
  4591                           ;	Table Read Protection bit
  4592                           ;	EBTR3 = 0x1, unprogrammed default
  4593  30000C                     	org	3145740
  4594  30000C  0F                 	db	15
  4595                           
  4596                           ;Config register CONFIG7H @ 0x30000D
  4597                           ;	unspecified, using default values
  4598                           ;	Boot Block Table Read Protection bit
  4599                           ;	EBTRB = 0x1, unprogrammed default
  4600  30000D                     	org	3145741
  4601  30000D  40                 	db	64
  4602                           tosu	equ	0xFFF
  4603                           tosh	equ	0xFFE
  4604                           tosl	equ	0xFFD
  4605                           stkptr	equ	0xFFC
  4606                           pclatu	equ	0xFFB
  4607                           pclath	equ	0xFFA
  4608                           pcl	equ	0xFF9
  4609                           tblptru	equ	0xFF8
  4610                           tblptrh	equ	0xFF7
  4611                           tblptrl	equ	0xFF6
  4612                           tablat	equ	0xFF5
  4613                           prodh	equ	0xFF4
  4614                           prodl	equ	0xFF3
  4615                           indf0	equ	0xFEF
  4616                           postinc0	equ	0xFEE
  4617                           postdec0	equ	0xFED
  4618                           preinc0	equ	0xFEC
  4619                           plusw0	equ	0xFEB
  4620                           fsr0h	equ	0xFEA
  4621                           fsr0l	equ	0xFE9
  4622                           wreg	equ	0xFE8
  4623                           indf1	equ	0xFE7
  4624                           postinc1	equ	0xFE6
  4625                           postdec1	equ	0xFE5
  4626                           preinc1	equ	0xFE4
  4627                           plusw1	equ	0xFE3
  4628                           fsr1h	equ	0xFE2
  4629                           fsr1l	equ	0xFE1
  4630                           bsr	equ	0xFE0
  4631                           indf2	equ	0xFDF
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           preinc2	equ	0xFDC
  4635                           plusw2	equ	0xFDB
  4636                           fsr2h	equ	0xFDA
  4637                           fsr2l	equ	0xFD9
  4638                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         752
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      72
    BANK0           128    119     119
    BANK1           256      0      26
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pipe_write@pipe	PTR struct pipe size(2) Largest target is 26
		 -> pipe_temperature(BANK1[26]), 

    pipe_read@dado	PTR int  size(2) Largest target is 2
		 -> ac_controller_1@room_temperature(UNKNOWN), 

    pipe_read@pipe	PTR struct pipe size(2) Largest target is 26
		 -> pipe_temperature(BANK1[26]), 

    pipe_init@pipe	PTR struct pipe size(2) Largest target is 26
		 -> pipe_temperature(BANK1[26]), 

    sem_post@s	PTR struct semaphore size(2) Largest target is 26
		 -> sem_temp_r(COMRAM[18]), sem_temp_w(COMRAM[18]), pipe_temperature(BANK1[26]), 

    sem_wait@s	PTR struct semaphore size(2) Largest target is 26
		 -> sem_temp_r(COMRAM[18]), sem_temp_w(COMRAM[18]), pipe_temperature(BANK1[26]), 

    sem_init@s	PTR struct semaphore size(2) Largest target is 26
		 -> sem_temp_r(COMRAM[18]), sem_temp_w(COMRAM[18]), pipe_temperature(BANK1[26]), 

    OS_create_task@func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), ac_controller_2(), thermostat_sensing_2(), ac_controller_1(), 
		 -> thermostat_sensing_1(), 

    new_task.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), ac_controller_2(), thermostat_sensing_2(), ac_controller_1(), 
		 -> thermostat_sensing_1(), 

    aux.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), ac_controller_2(), thermostat_sensing_2(), ac_controller_1(), 
		 -> thermostat_sensing_1(), 

    S103tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), ac_controller_2(), thermostat_sensing_2(), ac_controller_1(), 
		 -> thermostat_sensing_1(), 

    READY_QUEUE.QUEUE.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), ac_controller_2(), thermostat_sensing_2(), ac_controller_1(), 
		 -> thermostat_sensing_1(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _thermostat_sensing_1 in COMRAM

    None.

Critical Paths under _ac_controller_1 in COMRAM

    None.

Critical Paths under _thermostat_sensing_2 in COMRAM

    None.

Critical Paths under _ac_controller_2 in COMRAM

    None.

Critical Paths under _thermostat_sensing_1 in COMRAM

    None.

Critical Paths under _ac_controller_1 in COMRAM

    None.

Critical Paths under _thermostat_sensing_2 in COMRAM

    None.

Critical Paths under _ac_controller_2 in COMRAM

    None.

Critical Paths under _ISR_timer in COMRAM

    _ISR_timer->_delay_release

Critical Paths under _main in BANK0

    _main->_OS_create_task
    _OS_config->_OS_create_task
    _config_user_tasks->_pipe_init
    _pipe_init->_sem_init

Critical Paths under _idle in BANK0

    None.

Critical Paths under _thermostat_sensing_1 in BANK0

    None.

Critical Paths under _ac_controller_1 in BANK0

    None.

Critical Paths under _thermostat_sensing_2 in BANK0

    None.

Critical Paths under _ac_controller_2 in BANK0

    None.

Critical Paths under _thermostat_sensing_1 in BANK0

    None.

Critical Paths under _ac_controller_1 in BANK0

    None.

Critical Paths under _thermostat_sensing_2 in BANK0

    None.

Critical Paths under _ac_controller_2 in BANK0

    None.

Critical Paths under _ISR_timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _idle in BANK1

    None.

Critical Paths under _thermostat_sensing_1 in BANK1

    None.

Critical Paths under _ac_controller_1 in BANK1

    None.

Critical Paths under _thermostat_sensing_2 in BANK1

    None.

Critical Paths under _ac_controller_2 in BANK1

    None.

Critical Paths under _thermostat_sensing_1 in BANK1

    None.

Critical Paths under _ac_controller_1 in BANK1

    None.

Critical Paths under _thermostat_sensing_2 in BANK1

    None.

Critical Paths under _ac_controller_2 in BANK1

    None.

Critical Paths under _ISR_timer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _thermostat_sensing_1 in BANK2

    None.

Critical Paths under _ac_controller_1 in BANK2

    None.

Critical Paths under _thermostat_sensing_2 in BANK2

    None.

Critical Paths under _ac_controller_2 in BANK2

    None.

Critical Paths under _thermostat_sensing_1 in BANK2

    None.

Critical Paths under _ac_controller_1 in BANK2

    None.

Critical Paths under _thermostat_sensing_2 in BANK2

    None.

Critical Paths under _ac_controller_2 in BANK2

    None.

Critical Paths under _ISR_timer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _thermostat_sensing_1 in BANK3

    None.

Critical Paths under _ac_controller_1 in BANK3

    None.

Critical Paths under _thermostat_sensing_2 in BANK3

    None.

Critical Paths under _ac_controller_2 in BANK3

    None.

Critical Paths under _thermostat_sensing_1 in BANK3

    None.

Critical Paths under _ac_controller_1 in BANK3

    None.

Critical Paths under _thermostat_sensing_2 in BANK3

    None.

Critical Paths under _ac_controller_2 in BANK3

    None.

Critical Paths under _ISR_timer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _thermostat_sensing_1 in BANK4

    None.

Critical Paths under _ac_controller_1 in BANK4

    None.

Critical Paths under _thermostat_sensing_2 in BANK4

    None.

Critical Paths under _ac_controller_2 in BANK4

    None.

Critical Paths under _thermostat_sensing_1 in BANK4

    None.

Critical Paths under _ac_controller_1 in BANK4

    None.

Critical Paths under _thermostat_sensing_2 in BANK4

    None.

Critical Paths under _ac_controller_2 in BANK4

    None.

Critical Paths under _ISR_timer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _thermostat_sensing_1 in BANK5

    None.

Critical Paths under _ac_controller_1 in BANK5

    None.

Critical Paths under _thermostat_sensing_2 in BANK5

    None.

Critical Paths under _ac_controller_2 in BANK5

    None.

Critical Paths under _thermostat_sensing_1 in BANK5

    None.

Critical Paths under _ac_controller_1 in BANK5

    None.

Critical Paths under _thermostat_sensing_2 in BANK5

    None.

Critical Paths under _ac_controller_2 in BANK5

    None.

Critical Paths under _ISR_timer in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8016
                          _OS_config
                     _OS_create_task
                           _OS_start
 ---------------------------------------------------------------------------------
 (1) _OS_start                                             0     0      0       0
                _config_ad_conversor
                    _config_flywheel
                      _config_timer0
 ---------------------------------------------------------------------------------
 (2) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_flywheel                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ad_conversor                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OS_config                                            0     0      0    4855
                     _OS_create_task
                  _config_user_tasks
 ---------------------------------------------------------------------------------
 (2) _config_user_tasks                                    0     0      0    1694
                          _pipe_init
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _pipe_init                                            4     0      4     999
                                              4 BANK0      4     0      4
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _sem_init                                             4     0      4     695
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _OS_create_task                                     119   115      4    3161
                                              0 BANK0    119   115      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1983
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _thermostat_sensing_1                                 2     2      0    2191
                         _pipe_write
                   _thermostat_value
 ---------------------------------------------------------------------------------
 (6) _thermostat_value                                     4     4      0     370
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     324
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           5     1      4    1798
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2    1049
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     457
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      46
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ac_controller_1                                      2     2      0    1866
                          _pipe_read
                        _turn_off_ac
                         _turn_on_ac
 ---------------------------------------------------------------------------------
 (6) _turn_on_ac                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _turn_off_ac                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            5     1      4    1798
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2    1049
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     457
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      46
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _thermostat_sensing_2                                 0     0      0    1876
                           _sem_post
                           _sem_wait
                   _thermostat_value
 ---------------------------------------------------------------------------------
 (6) _thermostat_value                                     4     4      0     370
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     324
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2    1049
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     457
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ac_controller_2                                      0     0      0    1506
                           _sem_post
                           _sem_wait
                        _turn_off_ac
                         _turn_on_ac
 ---------------------------------------------------------------------------------
 (6) _turn_on_ac                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _turn_off_ac                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2    1049
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     457
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _thermostat_sensing_1                                 2     2      0    2191
                         _pipe_write
                   _thermostat_value
 ---------------------------------------------------------------------------------
 (6) _thermostat_value                                     4     4      0     370
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     324
 ---------------------------------------------------------------------------------
 (6) _pipe_write                                           5     1      4    1798
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2    1049
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     457
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      46
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ac_controller_1                                      2     2      0    1866
                          _pipe_read
                        _turn_off_ac
                         _turn_on_ac
 ---------------------------------------------------------------------------------
 (6) _turn_on_ac                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _turn_off_ac                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pipe_read                                            5     1      4    1798
                      _sem_get_value
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2    1049
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     457
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (7) _sem_get_value                                       18     0     18      46
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _thermostat_sensing_2                                 0     0      0    1876
                           _sem_post
                           _sem_wait
                   _thermostat_value
 ---------------------------------------------------------------------------------
 (6) _thermostat_value                                     4     4      0     370
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     324
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2    1049
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     457
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ac_controller_2                                      0     0      0    1506
                           _sem_post
                           _sem_wait
                        _turn_off_ac
                         _turn_on_ac
 ---------------------------------------------------------------------------------
 (6) _turn_on_ac                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _turn_off_ac                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2    1049
                    _RESTORE_CONTEXT
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2     457
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_timer                                          18    18      0    4694
                                              8 COMRAM    18    18      0
                    _RESTORE_CONTEXT
                             ___wmul
                      _delay_release
 ---------------------------------------------------------------------------------
 (13) _delay_release                                       8     6      2    2119
                                              0 COMRAM     8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1983
 ---------------------------------------------------------------------------------
 (13) _RESTORE_CONTEXT                                     4     4      0     592
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     369
                  _ROUND_ROBIN_sched
 ---------------------------------------------------------------------------------
 (15) _ROUND_ROBIN_sched                                   4     4      0     369
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     255
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OS_config
     _OS_create_task
       ___wmul
     _config_user_tasks
       _pipe_init
         _sem_init
       _sem_init
   _OS_create_task
     ___wmul
   _OS_start
     _config_ad_conversor
     _config_flywheel
     _config_timer0

 _idle (ROOT)

 _thermostat_sensing_1 (ROOT)
   _pipe_write
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod
   _thermostat_value
     ___awdiv

 _ac_controller_1 (ROOT)
   _pipe_read
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod
   _turn_off_ac
   _turn_on_ac

 _thermostat_sensing_2 (ROOT)
   _sem_post
     ___lwmod
   _sem_wait
     _RESTORE_CONTEXT
       _scheduler
         _ROUND_ROBIN_sched
           ___lwmod
     ___lwmod
   _thermostat_value
     ___awdiv

 _ac_controller_2 (ROOT)
   _sem_post
     ___lwmod
   _sem_wait
     _RESTORE_CONTEXT
       _scheduler
         _ROUND_ROBIN_sched
           ___lwmod
     ___lwmod
   _turn_off_ac
   _turn_on_ac

 _thermostat_sensing_1 (ROOT)
   _pipe_write
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod
   _thermostat_value
     ___awdiv

 _ac_controller_1 (ROOT)
   _pipe_read
     _sem_get_value
     _sem_post
       ___lwmod
     _sem_wait
       _RESTORE_CONTEXT
         _scheduler
           _ROUND_ROBIN_sched
             ___lwmod
       ___lwmod
   _turn_off_ac
   _turn_on_ac

 _thermostat_sensing_2 (ROOT)
   _sem_post
     ___lwmod
   _sem_wait
     _RESTORE_CONTEXT
       _scheduler
         _ROUND_ROBIN_sched
           ___lwmod
     ___lwmod
   _thermostat_value
     ___awdiv

 _ac_controller_2 (ROOT)
   _sem_post
     ___lwmod
   _sem_wait
     _RESTORE_CONTEXT
       _scheduler
         _ROUND_ROBIN_sched
           ___lwmod
     ___lwmod
   _turn_off_ac
   _turn_on_ac

 _ISR_timer (ROOT)
   _RESTORE_CONTEXT
     _scheduler
       _ROUND_ROBIN_sched
         ___lwmod
   ___wmul
   _delay_release
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     2AA      17       44.4%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      1A       7       10.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     77      77       5       93.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      48       1       75.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0      24       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D9      15        0.0%
DATA                 0      0     3A7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Feb 16 08:10:15 2022

    __end_of_config_user_tasks 1440                             l51 0D80                             l28 1474  
                           l29 1474                             l46 15AE                    _prox_tarefa 0005  
                          l132 15A2                            l222 14B4                            l144 12A6  
                          l321 0C48                            l129 14AE                            l322 0C4A  
                          l330 0AE8                            l314 135C                            l219 143E  
                          l228 11BA                            l261 15A8                            l318 0C16  
                          l326 0AB4                            l335 15B6                            l191 0808  
                          l255 157A                            l184 05C8                            l185 07C8  
                          l329 0AE6                            l353 1146                            l338 15B2  
                          l282 13B0                            l258 1562                            l187 071C  
                          l292 030C                            l356 11AC                            l622 0984  
                          l383 12A8                            l391 111C                            l296 0EB0  
                          l288 0254                            l377 1514                            l299 1588  
                          l899 1086                            _BSR 000FE0       __end_of_thermostat_value 11B6  
      fp__thermostat_sensing_1 0000        fp__thermostat_sensing_2 0000                            _TOS 000FFD  
                          wreg 000FE8                           l2100 1208                           l2110 12A8  
                         l2102 122E                           l2120 12F4                           l2112 12B4  
                         l2104 1514                           l2114 12D0                           l2106 1520  
                         l2122 135E                           l2130 1306                           l2116 12D4  
                         l2108 152C                           l2140 1252                           l2124 1360  
                         l2132 1344                           l2118 12F0                           l2142 125A  
                         l2134 123C                           l2126 1370                           l2144 1262  
                         l2136 1244                           l2128 13AE                           l2160 153E  
                         l2152 1564                           l2090 14B4                           l1434 14E4  
                         l2146 129C                           l2138 124C                           l2170 147C  
                         l2162 1546                           l2154 156C                           l1620 0FCE  
                         l1700 081E                           l2092 14C4                           l1436 14E6  
                         l2148 13FC                           l2172 1494                           l2164 1548  
                         l2156 1574                           l2180 15A0                           l2094 11BA  
                         l1630 1052                           l1622 0FEC                           l1710 085C  
                         l1702 082E                           l1438 150C                           l2174 14AA  
                         l2166 1552                           l2158 15A4                           l2182 1440  
                         l2096 11DA                           l1632 105C                           l1624 0FF0  
                         l1616 0FAA                           l1640 0C70                           l1720 08AA  
                         l1712 0860                           l1704 083A                           l1800 1160  
                         l2168 1558                           l2176 1592                           l2098 1200  
                         l1626 1000                           l1618 0FC4                           l1634 107A  
                         l1650 0CF8                           l1642 0CAE                           l1810 0992  
                         l1730 092E                           l1722 08AE                           l1714 0868  
                         l1706 0840                           l1802 1162                           l2178 159E  
                         l2186 1470                           l1628 102E                           l1900 0D9E  
                         l1652 0D32                           l1644 0CCE                           l1820 0A56  
                         l1812 0996                           l1740 0978                           l1732 0932  
                         l1724 08BE                           l1716 0882                           l1708 0850  
                         l1804 11A0                           l1830 0AF4                           l1902 0DC8  
                         l1654 0D74                           l1638 0C5C                           l1750 05CA  
                         l1822 0A5C                           l1814 09C0                           l1734 093C  
                         l1726 08DC                           l1718 088C                           l1840 0B9A  
                         l1832 0AF6                           l1904 0E34                           l1648 0CDA  
                         l1760 064E                           l1752 05D6                           l1824 0A92  
                         l1816 0A18                           l1808 0990                           l1728 090A  
                         l1736 095A                           l1850 0C36                           l1842 0BB8  
                         l1834 0AFA                           l1906 0E90                           l1770 0806  
                         l1762 071E                           l1754 05E2                           l1826 0AB6  
                         l1818 0A38                           l1738 096C                           l1690 10AC  
                         l1844 0BBE                           l1836 0B24                           l1852 15B4  
                         l1684 157C                           l1908 0EAE                           l1676 15AA  
                         l1764 078A                           l1756 0610                           l1860 0028  
                         l1828 0AD4                           l1692 10DE                           l1846 0BF4  
                         l1838 0B7A                           l1854 15B0                           l1766 07AA  
                         l1758 0612                           l1870 010E                           l1862 0044  
                         l1790 1136                           l1694 1110                           l1848 0C18  
                         l1768 07CA                           l1880 01EA                           l1872 014A  
                         l1864 0092                           l1856 0014                           l1792 1138  
                         l1688 1094                           l1890 0304                           l1882 0222  
                         l1874 014E                           l1866 00EE                           l1858 0016  
                         l1698 081A                           l1794 1142                           l1786 112E  
                         l1892 0306                           l1884 02BC                           l1876 017C  
                         l1868 010C                           l1796 1144                           l1788 1132  
                         l1886 02C2                           l1878 01B2                           l1894 030A  
                         l1798 1154                           l1896 0D8A                           l1888 02D6  
                         l1898 0D8C                           u1081 1294                           _WREG 000FE8  
                         _idle 14E4                           _main 1440                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr2h 000FDA                           fsr0l 000FE9  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 002D                           prodh 000FF4                           prodl 000FF3  
                         start 000C                   ___param_bank 000000                          ?_main 004D  
              __end_of___awdiv 098E                          _ADRES 000FC3                __end_of___lwmod 1090  
                        i2l154 0F9E                          i2l155 0FA6                          i2l181 0586  
                        _TMR0L 000FD6                          u60_20 0D32                          u60_21 0D2E  
                        u61_20 0D74                          u45_20 14F6                          u61_21 0D70  
                        u45_21 14F0                          u45_26 14F8                          u70_20 064E  
                        u70_21 064A                          u55_20 0FC4                          u71_20 07C4  
                        u63_20 082E                          u55_21 0FC0                          u71_21 07C0  
                        u63_21 082A                          u80_20 0B24                          u56_20 1000  
                        u64_20 0850                          u80_21 0B20                          u56_21 0FFC  
                        u64_21 084C                          u57_20 102E                          u65_20 0882  
                        u81_21 0BD8                          u57_21 102A                          u65_21 087E  
                        _TRISA 000F92                          _TRISD 000F95                          u82_20 0BF4  
                        u58_20 107A                          u66_20 08BE                          u82_21 0BF0  
                        u58_21 1076                          u66_21 08BA                          u83_20 0C48  
                        u59_20 0CCE                          u67_20 090A                          u75_20 1154  
                        u83_21 0C44                          u59_21 0CCA                          u67_21 0906  
                        u75_21 1150                          u84_20 0044                          u76_20 09C0  
                        u68_20 095A                          u84_21 0040                          u76_21 09BC  
                        u68_21 0956                          u85_20 014A                          u69_20 096C  
                        u85_21 0146                          u77_21 0A76                          u69_21 0968  
                        u86_20 02D2                          u78_20 0A92                          u86_21 02CE  
                        u78_21 0A8E                          u87_20 0DC8                          u79_20 0AE6  
                        u87_21 0DC4                          u79_21 0AE2                    _turn_off_ac 15B4  
             _room_temperature 0001             __size_of_ISR_timer 05B8                          _index 0007  
                        tablat 000FF5                          ltemp0 002D                          ltemp1 0031  
                        ltemp2 0035                          plusw0 000FEB                          plusw1 000FE3  
                        plusw2 000FDB                          ttemp0 002D                          ttemp1 0030  
                        ttemp2 0033                          ttemp3 0036                          ttemp5 002E  
                        ttemp6 0031                          ttemp7 0035                          status 000FD8  
              ??_config_timer0 0080                          wtemp0 002D                          wtemp1 002F  
                        wtemp2 0031                          wtemp3 0033                          wtemp4 0035  
                        wtemp5 0037                          wtemp8 002E               __end_of_OS_start 15A4  
               delay_release@i 0053          __end_of_sem_get_value 1592                __initialization 13B2  
                 __end_of_idle 1514                   __end_of_main 147C     __size_of_config_user_tasks 0044  
           __size_of_OS_config 0034               ??_OS_create_task 0084  __size_of_thermostat_sensing_1 0034  
__size_of_thermostat_sensing_2 002A                         ??_main 00F7                _RESTORE_CONTEXT 05C0  
                __activetblptr 000000                         _ADCON1 000FC1          __end_of_delay_release 0FA8  
                       u104_20 1200                         u104_21 11FC                         u105_20 122E  
                       u105_21 122A                         u106_20 12D0                         u106_21 12CC  
                       u107_20 12F0                         u107_21 12EC                         i2l2060 0372  
                       i2l2070 03F2                         i2l2062 037A                         i2l2080 0536  
                       i2l2072 042A                         i2l2064 037C                         i2l2082 053C  
                       i2l2074 0464                         i2l2066 03BA                         i2l2058 0360  
                       i2l2076 049E                         i2l2068 03C2                         i2l2084 0550  
                       i2l2086 0580                         i2l2078 04D2                         i2l2088 0582  
                       i2l1780 0F78                         i2l1772 0EB6                         i2l1782 0F80  
                       i2l1774 0ECA                         i2l1776 0EFC                         i2l1784 0F84  
                       i2l1778 0F54                         i2l1990 0354                         i2l1992 0356  
                       i2l1994 035C                         i2l1988 0350                         _STATUS 000FD8  
                       _STKPTR 000FFC    __end_of_config_ad_conversor 1564              __end_of_ISR_timer 05C0  
                       ___wmul 1090             OS_create_task@func 0082                         clear_0 13D2  
                       clear_1 13E4                         clear_2 13F0               __end_of_sem_init 13B2  
             __end_of_sem_wait 0312               __end_of_sem_post 0EB6                   __pdataCOMRAM 0067  
                       lltemp0 002D                         lltemp1 0035                         lltemp2 003D  
                       lltemp3 0045                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8              __end_of_OS_config 14B0                     __accesstop 0080  
      __end_of__initialization 13F6                  ___rparam_used 000001                 __pcstackCOMRAM 004D  
                   ___inthi_sp 0484        __end_of_RESTORE_CONTEXT 0812       __size_of_ac_controller_1 0086  
     __size_of_ac_controller_2 005E                      ?_OS_start 004D             fp__ac_controller_1 0000  
           fp__ac_controller_2 0000                     __pbssBANK1 0100       __size_of_config_flywheel 0006  
           __size_of_scheduler 0006             __size_of_pipe_init 0058             __size_of_pipe_read 0162  
       OS_create_task@new_task 0086                     ??_OS_start 0080                        i2u72_40 0EFC  
                      i2u72_41 0EF8                        i2u73_40 0F54                        i2u73_41 0F50  
                      i2u74_40 0F9E                        i2u74_41 0F9A                    sem_init@val 0082  
                      __Hparam 0000                      ?_sem_init 0080                        __Lparam 0000  
                      ___awdiv 0812                __size_of___wmul 0096                        ___lwmod 0FA8  
                      __pcinit 13B2                        __ramtop 0600                        __ptext0 1440  
                      __ptext1 1592                        __ptext2 1564                        __ptext3 15A4  
                      __ptext4 153E                        __ptext5 147C                        __ptext6 13FC  
                      __ptext7 1306                        __ptext8 135E                        __ptext9 123C  
                    _T0CONbits 000FD5            OS_create_task@prior 0080                        fp__idle 0000  
            __end_of_scheduler 15B0                 __pintcode_body 0312           end_of_initialization 13F6  
            __end_of_pipe_init 135E              __end_of_pipe_read 0C54   __end_of_thermostat_sensing_1 14E4  
 __end_of_thermostat_sensing_2 153E                        int_func 0312                     _pipe_write 098E  
                   _sem_temp_r 0009                     _sem_temp_w 001B          __end_of_config_timer0 157C  
                   ??_sem_init 0084              ??_config_flywheel 0080                        postdec0 000FED  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                  pipe_init@pipe 0084  
                    _ISR_timer 0008                      _PORTDbits 000F83                     _rr_quantum 0067  
                    _TRISDbits 000F95         __size_of_sem_get_value 0016                      _OS_config 147C  
               __end_of___wmul 1126         __size_of_delay_release 00F2                  __pidataCOMRAM 15B8  
                   _turn_on_ac 15B0                     ?_ISR_timer 004D              _ROUND_ROBIN_sched 0C54  
 __size_of_config_ad_conversor 0026            start_initialization 13B2        __size_of_OS_create_task 006C  
         __size_of_turn_off_ac 0004              __size_of_OS_start 0012      __size_of_thermostat_value 0090  
                   ?_OS_config 004D                  _sem_get_value 157C      __end_of_ROUND_ROBIN_sched 0D8A  
         _thermostat_sensing_1 14B0           _thermostat_sensing_2 1514                    __pbssBIGRAM 011A  
                  __pbssCOMRAM 0001                  __pcstackBANK0 0080                  _delay_release 0EB6  
                    __pintcode 0008              __size_of_sem_init 0054              __size_of_sem_wait 02FE  
            __size_of_sem_post 012C                    ??_ISR_timer 0055            __size_of_pipe_write 0164  
              _ac_controller_1 11B6                _ac_controller_2 12A8                 ?_delay_release 004D  
              _config_flywheel 15A4                      _scheduler 15AA                       _LATDbits 000F8C  
                  ??_OS_config 00F7                      _pipe_init 1306                      _pipe_read 0AF2  
                     i2u101_40 0372                       i2u101_41 036E                       i2u102_40 03BA  
                     i2u102_41 03B6                       i2u103_40 054C                       i2u103_41 0548  
   __size_of_ROUND_ROBIN_sched 0136                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0       __size_of_RESTORE_CONTEXT 0252                       _OS_start 1592  
               _OS_create_task 123C            __size_of_turn_on_ac 0004            _config_ad_conversor 153E  
   delay_release@task_released 0051               _thermostat_value 1126                     ?_pipe_init 0084  
                  _READY_QUEUE 011A                       __Hrparam 0000                       __Lrparam 0000  
      __end_of_ac_controller_1 123C        __end_of_ac_controller_2 1306               __size_of___awdiv 017C  
             __size_of___lwmod 00E8               pipe_init@tamanho 0086           ?_config_ad_conversor 004D  
       __end_of_OS_create_task 12A8        __end_of_config_flywheel 15AA         __size_of_config_timer0 0018  
              ??_delay_release 004F                       __ptext10 1090                       __ptext11 14E4  
                     __ptext20 0D8A                       __ptext12 14B0                       __ptext21 0FA8  
                     __ptext13 1126                       __ptext30 0EB6                       __ptext22 157C  
                     __ptext14 0812                       __ptext31 0000                       __ptext23 11B6  
                     __ptext15 098E                       __ptext24 15B0                       __ptext16 0014  
                     __ptext25 15B4                       __ptext17 05C0                       __ptext26 0AF2  
                     __ptext18 15AA                       __ptext27 1514                       __ptext19 0C54  
                     __ptext28 12A8                      sem_init@s 0080                  __size_of_idle 0030  
                __size_of_main 003C                       _sem_init 135E                       _sem_wait 0014  
                     _sem_post 0D8A                       _possivel 0003          ??_config_ad_conversor 0080  
              ?_OS_create_task 0080                     _INTCONbits 000FF2             __end_of_pipe_write 0AF2  
                     intlevel1 0000                       intlevel2 0000                    ??_pipe_init 0088  
                _config_timer0 1564              _config_user_tasks 13FC             ?_config_user_tasks 004D  
             ?_config_flywheel 004D            ??_config_user_tasks 0088            __end_of_turn_off_ac 15B8  
             _pipe_temperature 0100             __end_of_turn_on_ac 15B4                 ?_config_timer0 004D  
